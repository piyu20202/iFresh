Index: app/src/main/java/com/ifresh/customer/activity/DrawerActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ifresh.customer.activity;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageInfo;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\nimport java.util.Objects;\r\n\r\nimport com.google.android.play.core.review.ReviewInfo;\r\nimport com.google.android.play.core.review.ReviewManager;\r\nimport com.google.android.play.core.review.ReviewManagerFactory;\r\nimport com.google.android.play.core.tasks.OnCompleteListener;\r\nimport com.google.android.play.core.tasks.OnFailureListener;\r\nimport com.google.android.play.core.tasks.Task;\r\nimport com.ifresh.customer.R;;\r\nimport com.ifresh.customer.helper.ApiConfig;\r\nimport com.ifresh.customer.helper.Constant;\r\nimport com.ifresh.customer.helper.DatabaseHelper;\r\nimport com.ifresh.customer.helper.Session;\r\nimport com.ifresh.customer.helper.StorePrefrence;\r\nimport com.ifresh.customer.kotlin.ChangePassword;\r\nimport com.ifresh.customer.kotlin.EditProfile_K;\r\nimport com.ifresh.customer.kotlin.ForgetPassword_K;\r\n\r\nimport com.ifresh.customer.kotlin.FillAddress;\r\nimport com.ifresh.customer.kotlin.LocationSelection_K;\r\nimport com.ifresh.customer.kotlin.SignInActivity_K;\r\n\r\nimport static com.ifresh.customer.helper.Constant.AREA_N;\r\n\r\npublic class DrawerActivity extends AppCompatActivity {\r\n    Context mContext = DrawerActivity.this;\r\n    public NavigationView navigationView;\r\n    public DrawerLayout drawer;\r\n    public ActionBarDrawerToggle drawerToggle;\r\n    protected FrameLayout frameLayout;\r\n    public TextView tvMobile,txt;\r\n    public static TextView tvName, tvWallet;\r\n    Session session;\r\n\r\n    StorePrefrence  storeinfo;\r\n    LinearLayout lytProfile;\r\n    LinearLayout lytWallet;\r\n    LinearLayout lyt_update_app;\r\n    int versionCode;\r\n    String version;\r\n    boolean is_appupdate=false;\r\n    android.app.AlertDialog.Builder builder;\r\n    ReviewManager manager ;\r\n    ReviewInfo reviewInfo = null;\r\n    DatabaseHelper databaseHelper;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        // ApiConfig.transparentStatusAndNavigation(DrawerActivity.this);\r\n        setContentView(R.layout.activity_drawer);\r\n        storeinfo = new StorePrefrence(DrawerActivity.this);\r\n        session = new Session(DrawerActivity.this);\r\n        databaseHelper = new DatabaseHelper(DrawerActivity.this);\r\n        builder = new android.app.AlertDialog.Builder(DrawerActivity.this);\r\n\r\n        frameLayout = findViewById(R.id.content_frame);\r\n        navigationView = findViewById(R.id.nav_view);\r\n        drawer = findViewById(R.id.drawer_layout);\r\n        View header = navigationView.getHeaderView(0);\r\n        lytWallet = header.findViewById(R.id.lytWallet);\r\n        lyt_update_app = header.findViewById(R.id.lyt_update_app);\r\n        tvWallet = header.findViewById(R.id.tvWallet);\r\n        tvName = header.findViewById(R.id.header_name);\r\n        tvMobile = header.findViewById(R.id.tvMobile);\r\n        lytProfile = header.findViewById(R.id.lytProfile);\r\n        txt = header.findViewById(R.id.txt);\r\n        try {\r\n            PackageInfo pInfo = mContext.getPackageManager().getPackageInfo(getPackageName(), 0);\r\n            versionCode = pInfo.versionCode;\r\n            version = pInfo.versionName;\r\n          } catch (Exception e) {\r\n            e.printStackTrace();\r\n          }\r\n\r\n        int store_info_version_code = storeinfo.getInt(\"version_code\");\r\n        if(versionCode < store_info_version_code)\r\n        {\r\n            is_appupdate=true;\r\n        }\r\n        else{\r\n            is_appupdate=false;\r\n        }\r\n\r\n\r\n        if (session.isUserLoggedIn())\r\n        {\r\n            //Log.d(\"mob\",\"\"+session.getData(session.KEY_mobile) );\r\n            //Log.d(\"name\",\"\"+session.getData(session.KEY_FIRSTNAME)+\" \"+ session.getData(session.KEY_LASTNAME) );\r\n            tvMobile.setText(session.getData(session.KEY_mobile));\r\n            tvName.setText(session.getData(session.KEY_FIRSTNAME)+\" \"+ session.getData(session.KEY_LASTNAME));\r\n            lytWallet.setVisibility(View.VISIBLE);\r\n            tvWallet.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_wallet_white, 0, 0, 0);\r\n            DrawerActivity.tvWallet.setText(getString(R.string.wallet_balance) + \"\\t:\\t\" + Constant.SETTING_CURRENCY_SYMBOL + Constant.WALLET_BALANCE);\r\n\r\n            ApiConfig.getWalletBalance(DrawerActivity.this, session);\r\n\r\n             tvWallet.setText(getString(R.string.wallet_balance)+\"\\t:\\t\"+ApiConfig.getWalletBalance(DrawerActivity.this, session));;\r\n\r\n            tvWallet.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    startActivity(new Intent(getApplicationContext(), WalletBalanceList.class));\r\n                }\r\n            });\r\n\r\n        }\r\n        else {\r\n            lytWallet.setVisibility(View.GONE);\r\n            tvName.setText(getResources().getString(R.string.is_login));\r\n        }\r\n\r\n        lytProfile.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                drawer.closeDrawers();\r\n                if (session.isUserLoggedIn())\r\n                    startActivity(new Intent(getApplicationContext(), EditProfile_K.class));\r\n                else\r\n                    startActivity(new Intent(getApplicationContext(), SignInActivity_K.class));\r\n            }\r\n        });\r\n        setupNavigationDrawer();\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n    }\r\n\r\n\r\n    private void setupNavigationDrawer() {\r\n        Menu nav_Menu = navigationView.getMenu();\r\n        if(is_appupdate)\r\n        {\r\n            nav_Menu.findItem(R.id.menu_update).setVisible(true);\r\n        }\r\n        else{\r\n            nav_Menu.findItem(R.id.menu_update).setVisible(false);\r\n        }\r\n\r\n        if (session.isUserLoggedIn())\r\n        {\r\n            nav_Menu.findItem(R.id.menu_editprofile).setVisible(true);\r\n            nav_Menu.findItem(R.id.menu_logout).setVisible(true);\r\n        } else {\r\n            nav_Menu.findItem(R.id.menu_logout).setVisible(true);\r\n            nav_Menu.findItem(R.id.menu_editprofile).setVisible(false);\r\n        }\r\n        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {\r\n            @Override\r\n            public boolean onNavigationItemSelected(MenuItem menuItem) {\r\n                drawer.closeDrawers();\r\n                switch (menuItem.getItemId()) {\r\n                    case R.id.menu_update:\r\n                        if(is_appupdate) {\r\n                            showAlertView();\r\n                        }\r\n                        else{\r\n                            Toast.makeText(mContext, \"Latest Version of iFresh App Already Installed\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                        break;\r\n                    case R.id.notifications:\r\n                        if (session.isUserLoggedIn()) {\r\n                            startActivity(new Intent(getApplicationContext(), NotificationList.class));\r\n                        }\r\n                        else\r\n                            startActivity(new Intent(getApplicationContext(), SignInActivity_K.class));\r\n\r\n                        break;\r\n                    case R.id.walletbalance:\r\n                        if (session.isUserLoggedIn()) {\r\n                            startActivity(new Intent(getApplicationContext(), WalletBalanceList.class));\r\n                        } else\r\n                            startActivity(new Intent(getApplicationContext(), SignInActivity_K.class));\r\n                        break;\r\n                    case R.id.faq:\r\n                        Intent faq = new Intent(getApplicationContext(), WebViewActivity.class);\r\n                        faq.putExtra(\"type\", \"3\");\r\n                        startActivity(faq);\r\n                        break;\r\n                    case R.id.menu_terms:\r\n                        Intent terms = new Intent(getApplicationContext(), WebViewActivity.class);\r\n                        terms.putExtra(\"type\", \"4\");\r\n                        startActivity(terms);\r\n                        // ApiConfig.OpenBottomDialog(\"terms\", getApplicationContext());\r\n                        break;\r\n                    case R.id.contact:\r\n                        Intent contact = new Intent(getApplicationContext(), WebViewActivity.class);\r\n                        contact.putExtra(\"type\", \"2\");\r\n                        startActivity(contact);\r\n                        break;\r\n                    case R.id.about_us:\r\n                        Intent about = new Intent(getApplicationContext(), WebViewActivity.class);\r\n                        about.putExtra(\"type\", \"1\");\r\n                        startActivity(about);\r\n                        break;\r\n                    case R.id.menu_privacy:\r\n                        Intent privacy = new Intent(getApplicationContext(), WebViewActivity.class);\r\n                        privacy.putExtra(\"type\", \"5\");\r\n                        startActivity(privacy);\r\n                        break;\r\n                    case R.id.menu_home:\r\n                        finish();\r\n                         startActivity(new Intent(getApplicationContext(), MainActivity.class));\r\n                        break;\r\n                    case R.id.menu_editprofile:\r\n                        if (session.isUserLoggedIn())\r\n                            startActivity(new Intent(getApplicationContext(), EditProfile_K.class));\r\n                        else\r\n                            startActivity(new Intent(getApplicationContext(), SignInActivity_K.class));\r\n                        break;\r\n\r\n                    case R.id.friend_code_list:\r\n                        if (session.isUserLoggedIn())\r\n                            startActivity(new Intent(getApplicationContext(), FriendCodeList.class));\r\n                        else\r\n                            startActivity(new Intent(getApplicationContext(), SignInActivity_K.class));\r\n                        break;\r\n                    case R.id.refer:\r\n                        if (session.isUserLoggedIn())\r\n                            startActivity(new Intent(getApplicationContext(), ReferEarnActivity.class));\r\n                        else\r\n                            startActivity(new Intent(getApplicationContext(), SignInActivity_K.class));\r\n                        break;\r\n\r\n\r\n                    case R.id.cart:\r\n                        startActivity(new Intent(getApplicationContext(), CartActivity_2.class));\r\n                        break;\r\n                    case R.id.changePass:\r\n                        Intent intent1 = new Intent(getApplicationContext(), ChangePassword.class);\r\n                        if (session.isUserLoggedIn())\r\n                            intent1.putExtra(\"from\", \"changepsw\");\r\n                        startActivity(intent1);\r\n                        break;\r\n                    case R.id.menu_tracker:\r\n                        if (session.isUserLoggedIn()) {\r\n                            startActivity(new Intent(getApplicationContext(), OrderListActivity_2.class));\r\n                        } else\r\n                            startActivity(new Intent(getApplicationContext(), SignInActivity_K.class));\r\n                        break;\r\n                    case R.id.menu_share:\r\n                        Intent shareIntent = new Intent(Intent.ACTION_SEND);\r\n                        shareIntent.putExtra(Intent.EXTRA_SUBJECT, getString(R.string.app_name));\r\n                        shareIntent.putExtra(Intent.EXTRA_TEXT, storeinfo.getString(Constant.SHARE_MSG) + \"\\n\" +  storeinfo.getString(Constant.SHORT_LINK));\r\n                        shareIntent.setType(\"text/plain\");\r\n                        startActivity(Intent.createChooser(shareIntent, getString(R.string.share_via)));\r\n                        break;\r\n                    case R.id.menu_rate:\r\n                        startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://play.google.com/store/apps/details?id=com.ifresh.customer&hl=en\")));\r\n                        initReview();\r\n                        askForReview();\r\n                        break;\r\n                    case R.id.menu_logout:\r\n                        showAlertView_3_1();\r\n                        break;\r\n                    case R.id.menu_changepass:\r\n                        startActivity(new Intent(getApplicationContext(), ChangePassword.class));\r\n                        break;\r\n                    case R.id.menu_forget:\r\n                        startActivity(new Intent(getApplicationContext(), ForgetPassword_K.class));\r\n                        break;\r\n\r\n                    case R.id.menu_setaddresstyp: {\r\n                        if (session.isUserLoggedIn())\r\n                        {\r\n                            Intent intent = new Intent(getApplicationContext(), FillAddress.class);\r\n                            intent.putExtra(\"pas_address\",\"\");\r\n                            intent.putExtra(\"from\",\"\");\r\n                            intent.putExtra(\"addresstype_id\",\"\");\r\n                            startActivity(intent);\r\n                        } else\r\n                            startActivity(new Intent(getApplicationContext(), SignInActivity_K.class) );\r\n                        break;\r\n                    }\r\n\r\n                    case R.id.menu_setdefultaddress:\r\n                        if (session.isUserLoggedIn())\r\n                        {\r\n                            startActivity(new Intent(getApplicationContext(), SetDefaultAddress_2.class));\r\n                        }\r\n                        else{\r\n                            startActivity(new Intent(getApplicationContext(), SignInActivity_K.class));\r\n                        }\r\n                        break;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    private void showAlertView_3_1() {\r\n        final androidx.appcompat.app.AlertDialog.Builder alertDialog = new androidx.appcompat.app.AlertDialog.Builder(DrawerActivity.this);\r\n        LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        final View dialogView = inflater.inflate(R.layout.msg_view_4, null);\r\n        alertDialog.setView(dialogView);\r\n        alertDialog.setCancelable(true);\r\n        final androidx.appcompat.app.AlertDialog dialog = alertDialog.create();\r\n\r\n        Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        TextView tvlogout,tvclose,txt_msg;\r\n\r\n        tvlogout = dialogView.findViewById(R.id.tvcancel);\r\n        tvclose = dialogView.findViewById(R.id.tvclose);\r\n        txt_msg = dialogView.findViewById(R.id.txt_msg);\r\n\r\n        tvclose.setText(\"No\");\r\n        tvlogout.setText(\"LogOut\");\r\n        txt_msg.setText(R.string.logout_cnf);\r\n\r\n        tvlogout.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.dismiss();\r\n                session.logoutUser(DrawerActivity.this);\r\n                session.deletePref();\r\n                storeinfo.clear();\r\n                finish();\r\n\r\n                Intent intent = new Intent(DrawerActivity.this, LocationSelection_K.class);\r\n                        startActivity(intent);\r\n                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n\r\n            }\r\n        });\r\n\r\n        tvclose.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.dismiss();\r\n                //onBackPressed();\r\n            }\r\n        });\r\n        dialog.show();\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    protected void onPostCreate(Bundle savedInstanceState) {\r\n        super.onPostCreate(savedInstanceState);\r\n        //Sync the toggle state after onRestoreInstanceState has occurred.\r\n        drawerToggle.syncState();\r\n    }\r\n\r\n    public void showAlertView()\r\n    {\r\n        String final_msg = \"Please Download Latest Version Of iFresh From Play Store.\";\r\n        final androidx.appcompat.app.AlertDialog.Builder alertDialog = new androidx.appcompat.app.AlertDialog.Builder(mContext);\r\n        LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        final View dialogView = inflater.inflate(R.layout.msg_view_2, null);\r\n        alertDialog.setView(dialogView);\r\n        alertDialog.setCancelable(true);\r\n        final androidx.appcompat.app.AlertDialog dialog = alertDialog.create();\r\n\r\n        Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        TextView txt_msg,tvcancel,tvupdate;\r\n\r\n        txt_msg = dialogView.findViewById(R.id.txt_msg);\r\n        tvcancel = dialogView.findViewById(R.id.tvcancel);\r\n        tvupdate = dialogView.findViewById(R.id.tvupdate);\r\n        final String pakage_name = getApplicationContext().getPackageName();\r\n        final String str_google_play_url = \"https://play.google.com/store/apps/details?id=\";\r\n        final String str_google_play_end = \"&hl=en\";\r\n\r\n\r\n        tvupdate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.dismiss();\r\n                String url = str_google_play_url+pakage_name+str_google_play_end;\r\n                Intent i = new Intent(Intent.ACTION_VIEW);\r\n                i.setData(Uri.parse(url));\r\n                startActivity(i);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        tvcancel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.dismiss();\r\n\r\n            }\r\n        });\r\n\r\n        txt_msg.setText(final_msg);\r\n        dialog.show();\r\n\r\n\r\n    }\r\n\r\n    public void showAlertView_2()\r\n    {\r\n        String final_msg = \"Please Download Latest Version Of iFresh From Play Store.\";\r\n        final androidx.appcompat.app.AlertDialog.Builder alertDialog = new androidx.appcompat.app.AlertDialog.Builder(mContext);\r\n        LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        final View dialogView = inflater.inflate(R.layout.msg_view_3, null);\r\n        alertDialog.setView(dialogView);\r\n\r\n        if(storeinfo.getInt(\"force_update\") == 0)\r\n        {\r\n            alertDialog.setCancelable(true);\r\n        }\r\n        else if(storeinfo.getInt(\"force_update\") == 1)\r\n        {\r\n            alertDialog.setCancelable(false);\r\n        }\r\n\r\n        final androidx.appcompat.app.AlertDialog dialog = alertDialog.create();\r\n        Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        TextView txt_msg,tvcancel,tvupdate;\r\n        txt_msg = dialogView.findViewById(R.id.txt_msg);\r\n        tvupdate = dialogView.findViewById(R.id.tvupdate);\r\n        final String pakage_name = getApplicationContext().getPackageName();\r\n        final String str_google_play_url = \"https://play.google.com/store/apps/details?id=\";\r\n        final String str_google_play_end = \"&hl=en\";\r\n\r\n\r\n        tvupdate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.dismiss();\r\n                String url = str_google_play_url+pakage_name+str_google_play_end;\r\n                Intent i = new Intent(Intent.ACTION_VIEW);\r\n                i.setData(Uri.parse(url));\r\n                startActivity(i);\r\n\r\n                finish();\r\n            }\r\n        });\r\n        txt_msg.setText(final_msg);\r\n        dialog.show();\r\n    }\r\n\r\n\r\n\r\n    public void showAlertView_LocChange()\r\n    {\r\n        String final_msg = \"Dear User You Have Changed Your Area Now You Area is\" + \" \" + session.getData(AREA_N);\r\n        final androidx.appcompat.app.AlertDialog.Builder alertDialog = new androidx.appcompat.app.AlertDialog.Builder(mContext);\r\n        LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        final View dialogView = inflater.inflate(R.layout.msg_view_8, null);\r\n        alertDialog.setView(dialogView);\r\n        alertDialog.setCancelable(true);\r\n        final androidx.appcompat.app.AlertDialog dialog = alertDialog.create();\r\n        Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        TextView txt_msg;\r\n        txt_msg = dialogView.findViewById(R.id.txt_msg);\r\n        txt_msg.setText(final_msg);\r\n        dialog.show();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    public void askForReview() {\r\n\r\n        if(reviewInfo!= null)\r\n        {\r\n            manager.launchReviewFlow(this,reviewInfo)\r\n                    .addOnFailureListener(new OnFailureListener()\r\n                    {\r\n                        @Override\r\n                        public void onFailure(Exception e) {\r\n\r\n                        }\r\n                    })\r\n                    .addOnCompleteListener(new OnCompleteListener<Void>()\r\n                    {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<Void> task) {\r\n\r\n                        }\r\n                    });\r\n\r\n        }\r\n    }\r\n\r\n    public void initReview() {\r\n        manager = ReviewManagerFactory.create(this);\r\n        Task<ReviewInfo> request = manager.requestReviewFlow();\r\n        request.addOnCompleteListener(new OnCompleteListener<ReviewInfo>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<ReviewInfo> task) {\r\n                if (task.isSuccessful()) {\r\n                    // We can get the ReviewInfo object\r\n                    reviewInfo = task.getResult();\r\n                } else {\r\n                    // There was some problem, continue regardless of the result.\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/ifresh/customer/activity/DrawerActivity.java	(revision ce16e6637b08175bfb1d14ad608a40eebd8108fe)
+++ app/src/main/java/com/ifresh/customer/activity/DrawerActivity.java	(date 1609130587746)
@@ -46,6 +46,7 @@
 import com.ifresh.customer.kotlin.SignInActivity_K;
 
 import static com.ifresh.customer.helper.Constant.AREA_N;
+import static com.ifresh.customer.helper.Constant.CITY_N;
 
 public class DrawerActivity extends AppCompatActivity {
     Context mContext = DrawerActivity.this;
@@ -71,7 +72,8 @@
 
 
     @Override
-    protected void onCreate(Bundle savedInstanceState) {
+    protected void onCreate(Bundle savedInstanceState)
+    {
         super.onCreate(savedInstanceState);
         // ApiConfig.transparentStatusAndNavigation(DrawerActivity.this);
         setContentView(R.layout.activity_drawer);
@@ -156,6 +158,18 @@
     }
 
 
+    @Override
+    protected void onPause() {
+        super.onPause();
+
+    }
+
+    @Override
+    protected void onRestart() {
+        super.onRestart();
+
+    }
+
     private void setupNavigationDrawer() {
         Menu nav_Menu = navigationView.getMenu();
         if(is_appupdate)
@@ -465,7 +479,8 @@
 
     public void showAlertView_LocChange()
     {
-        String final_msg = "Dear User You Have Changed Your Area Now You Area is" + " " + session.getData(AREA_N);
+        String final_msg = "Dear User You Have Changed Your Location Now You City Is" + " " + session.getData(CITY_N) + " "+
+                            "And Area Is"+ " "+ session.getData(AREA_N) + "." ;
         final androidx.appcompat.app.AlertDialog.Builder alertDialog = new androidx.appcompat.app.AlertDialog.Builder(mContext);
         LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
         final View dialogView = inflater.inflate(R.layout.msg_view_8, null);
Index: app/src/main/java/com/ifresh/customer/activity/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ifresh.customer.activity;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\n\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\n\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.RelativeLayout;\r\n\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.widget.NestedScrollView;\r\n\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.play.core.review.ReviewInfo;\r\nimport com.google.android.play.core.review.ReviewManagerFactory;\r\nimport com.google.android.play.core.tasks.OnCompleteListener;\r\nimport com.google.android.play.core.tasks.OnFailureListener;\r\nimport com.google.android.play.core.tasks.Task;\r\n\r\nimport com.google.firebase.iid.FirebaseInstanceId;\r\nimport com.google.firebase.iid.InstanceIdResult;\r\nimport com.ifresh.customer.R;\r\nimport com.ifresh.customer.adapter.CategoryAdapter;\r\nimport com.ifresh.customer.adapter.OfferAdapter;\r\nimport com.ifresh.customer.adapter.SectionAdapter;\r\nimport com.ifresh.customer.adapter.SliderAdapter;\r\nimport com.ifresh.customer.helper.ApiConfig;\r\nimport com.ifresh.customer.helper.AppController;\r\nimport com.ifresh.customer.helper.Constant;\r\nimport com.ifresh.customer.helper.DatabaseHelper;\r\nimport com.ifresh.customer.helper.Session;\r\n\r\nimport com.ifresh.customer.helper.StorePrefrence;\r\nimport com.ifresh.customer.helper.VolleyCallback;\r\nimport com.ifresh.customer.kotlin.LocationSelection_K;\r\nimport com.ifresh.customer.model.Category;\r\nimport com.ifresh.customer.model.Mesurrment;\r\nimport com.ifresh.customer.model.OfferImage;\r\nimport com.ifresh.customer.model.Slider;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\nimport hotchemi.android.rate.AppRate;\r\nimport hotchemi.android.rate.OnClickButtonListener;\r\nimport hotchemi.android.rate.StoreType;\r\n\r\nimport static com.ifresh.customer.helper.Constant.AUTHTOKEN;\r\nimport static com.ifresh.customer.helper.Constant.BANNERIMAGE;\r\nimport static com.ifresh.customer.helper.Constant.BANNERIMAGEPATH;\r\nimport static com.ifresh.customer.helper.Constant.BASEPATH;\r\nimport static com.ifresh.customer.helper.Constant.CATEGORYIMAGEPATH;\r\nimport static com.ifresh.customer.helper.Constant.CITY_N;\r\nimport static com.ifresh.customer.helper.Constant.FEATUREPRODUCT;\r\nimport static com.ifresh.customer.helper.Constant.GETCATEGORY;\r\nimport static com.ifresh.customer.helper.Constant.GETFRENCHISE;\r\nimport static com.ifresh.customer.helper.Constant.OFFER_IMAGE;\r\nimport static com.ifresh.customer.helper.Constant.SECTIONPRODUCT;\r\nimport static com.ifresh.customer.helper.Constant.SUBTITLE_1;\r\n\r\n\r\npublic class MainActivity extends DrawerActivity {\r\n\r\n    boolean doubleBackToExitPressedOnce = false;\r\n    DatabaseHelper databaseHelper;\r\n    public static Session session;\r\n    Toolbar toolbar;\r\n    public RelativeLayout layoutSearch;\r\n    Activity activity;\r\n    public LinearLayout lytBottom;\r\n    Menu menu;\r\n    String from;\r\n    private RecyclerView categoryRecyclerView, sectionView, offerView;\r\n    private ArrayList<Slider> sliderArrayList;\r\n    private ArrayList<OfferImage> offerImgArrayList;\r\n\r\n    public static ArrayList<Category> categoryArrayList, sectionList;\r\n    private ViewPager mPager;\r\n    private LinearLayout mMarkersLayout;\r\n    private int size;\r\n    private Timer swipeTimer;\r\n    private Handler handler;\r\n    private Runnable Update;\r\n    private int currentPage = 0;\r\n\r\n    private LinearLayout lytCategory;\r\n    NestedScrollView nestedScrollView;\r\n    ProgressBar progressBar,progress_bar_banner;\r\n    TextView tvlater, tvnever, tvrate,txt_delivery_loc;\r\n    private Boolean firstTime = null;\r\n    ImageView imgloc,img_src;\r\n    String str_cat_id;\r\n    ArrayList<Mesurrment> measurement_list;\r\n    //public static Boolean is_deafultAddExist=false;\r\n    //public static Boolean is_address_save=false,is_default_address_save=false;\r\n    //ReviewManager manager ;\r\n    //ReviewInfo reviewInfo = null;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        getLayoutInflater().inflate(R.layout.activity_main, frameLayout);\r\n\r\n        databaseHelper = new DatabaseHelper(MainActivity.this);\r\n        session = new Session(MainActivity.this);\r\n        storeinfo = new StorePrefrence(MainActivity.this);\r\n        Log.d(\"token\",  session.getData(AUTHTOKEN));\r\n        toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n\r\n        getSupportActionBar().setDisplayShowTitleEnabled(false);\r\n\r\n        activity = MainActivity.this;\r\n        progressBar = findViewById(R.id.progressBar);\r\n        progress_bar_banner = findViewById(R.id.progress_bar_banner);\r\n        lytBottom = findViewById(R.id.lytBottom);\r\n        layoutSearch = findViewById(R.id.layoutSearch);\r\n        layoutSearch.setVisibility(View.VISIBLE);\r\n\r\n\r\n        categoryRecyclerView = findViewById(R.id.categoryrecycleview);\r\n        categoryRecyclerView.setLayoutManager(new GridLayoutManager(MainActivity.this, 3));\r\n        //categoryRecyclerView.setLayoutManager(new LinearLayoutManager(MainActivity.this, LinearLayoutManager.HORIZONTAL, false));\r\n\r\n        sectionView = findViewById(R.id.sectionView);\r\n        sectionView.setLayoutManager(new LinearLayoutManager(MainActivity.this));\r\n        sectionView.setNestedScrollingEnabled(false);\r\n\r\n        offerView = findViewById(R.id.offerView);\r\n        offerView.setLayoutManager(new LinearLayoutManager(MainActivity.this));\r\n        offerView.setNestedScrollingEnabled(false);\r\n\r\n        nestedScrollView = findViewById(R.id.nestedScrollView);\r\n        mMarkersLayout = findViewById(R.id.layout_markers);\r\n        lytCategory = findViewById(R.id.lytCategory);\r\n        mPager = findViewById(R.id.pager);\r\n        txt_delivery_loc = findViewById(R.id.txt_delivery_loc);\r\n        img_src = findViewById(R.id.img_src);\r\n\r\n\r\n        Picasso.with(mContext)\r\n                .load(Constant.SETTINGIMAGEPATH +\"app_video.jpg\")\r\n                .placeholder(R.drawable.placeholder)// optional\r\n                .error(R.drawable.placeholder)\r\n                .into(img_src);\r\n\r\n\r\n        img_src.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(mContext, OfferImageDetail.class);\r\n                intent.putExtra(\"youtube_code\", Constant.YOUTUBECODE);\r\n                intent.putExtra(\"image_url\", Constant.SETTINGIMAGEPATH+\"app_video.jpg\");\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n        txt_delivery_loc.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                storeinfo.setBoolean(\"is_locchange\", true);\r\n                Intent intent = new Intent(mContext, LocationSelection_K.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n\r\n        mPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {\r\n            @Override\r\n            public void onPageScrolled(int i, float v, int i1) {\r\n            }\r\n\r\n            @Override\r\n            public void onPageSelected(int position) {\r\n                ApiConfig.addMarkers(position, sliderArrayList, mMarkersLayout, MainActivity.this);\r\n            }\r\n            @Override\r\n            public void onPageScrollStateChanged(int i) {\r\n            }\r\n        });\r\n\r\n        mPager.setPageMargin(5);\r\n        if (session.isUserLoggedIn())\r\n        {\r\n            //tvName.setText(session.getData(session.getData(session.KEY_FIRSTNAME)+\" \"+ session.getData(session.KEY_LASTNAME)));\r\n            tvName.setText(\"Login\");\r\n            tvMobile.setText(session.getData(session.KEY_mobile));\r\n\r\n        } else {\r\n            tvName.setText(getResources().getString(R.string.is_login));\r\n        }\r\n        drawerToggle = new ActionBarDrawerToggle\r\n                (\r\n                        this,\r\n                        drawer, toolbar,\r\n                        R.string.drawer_open,\r\n                        R.string.drawer_close\r\n                ) {\r\n        };\r\n\r\n        FirebaseInstanceId.getInstance().getInstanceId().addOnSuccessListener(new OnSuccessListener<InstanceIdResult>() {\r\n            @Override\r\n            public void onSuccess(InstanceIdResult instanceIdResult)\r\n            {\r\n                String token = instanceIdResult.getToken();\r\n                if (!token.equals(session.getData(Constant.KEY_FCM_ID)))\r\n                {\r\n                    //UpdateToken(token, MainActivity.this);\r\n                    Log.d(\"token\", token);\r\n                    Log.d(\"KEY_FCM_ID\", session.getData(Constant.KEY_FCM_ID));\r\n                    session.setData(\"token\", token);\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n\r\n        if (AppController.isConnected(MainActivity.this))\r\n        {\r\n            //ApiConfig.GetSettingConfigApi(activity, session);// to call measurement data\r\n            callSettingApi_messurment();// to call measurement data\r\n            GetFrenchise_id();\r\n            GetSlider();\r\n            GetCategory();\r\n            GetOfferImage();\r\n            if (Constant.REFER_EARN_ACTIVE.equals(\"0\")) {\r\n                Menu nav_Menu = navigationView.getMenu();\r\n                nav_Menu.findItem(R.id.refer).setVisible(false);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public void askForReview() {\r\n\r\n        if(reviewInfo!= null)\r\n        {\r\n            manager.launchReviewFlow(this,reviewInfo)\r\n                    .addOnFailureListener(new OnFailureListener()\r\n                    {\r\n                        @Override\r\n                        public void onFailure(Exception e) {\r\n                        }\r\n                     })\r\n                    .addOnCompleteListener(new OnCompleteListener<Void>()\r\n                    {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<Void> task) {\r\n\r\n                        }\r\n                    });\r\n\r\n        }\r\n   }\r\n\r\n    public void initReview() {\r\n        manager = ReviewManagerFactory.create(this);\r\n        Task<ReviewInfo> request = manager.requestReviewFlow();\r\n        request.addOnCompleteListener(new OnCompleteListener<ReviewInfo>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<ReviewInfo> task) {\r\n                if (task.isSuccessful()) {\r\n                    // We can get the ReviewInfo object\r\n                    reviewInfo = task.getResult();\r\n                } else {\r\n                    // There was some problem, continue regardless of the result.\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    /*public void setAppLocal(String languageCode) {\r\n        Resources resources = getResources();\r\n        DisplayMetrics dm = resources.getDisplayMetrics();\r\n        Configuration configuration = resources.getConfiguration();\r\n        configuration.setLocale(new Locale(languageCode.toLowerCase()));\r\n        resources.updateConfiguration(configuration, dm);\r\n    }*/\r\n\r\n    public void SectionProductRequest() {  //json request for product search\r\n        Map<String, String> params = new HashMap<>();\r\n        //Log.d(\"url\", BASEPATH + SECTIONPRODUCT +  session.getData(Constant.AREA_ID) +\"/\" + str_cat_id);\r\n\r\n        ApiConfig.RequestToVolley_GET(new VolleyCallback()\r\n        {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                         System.out.println(\"====res section \" + response);\r\n                         //Log.d(\"url\", BASEPATH + SECTIONPRODUCT +  session.getData(Constant.AREA_ID) +\"/\" + str_cat_id);\r\n                        JSONObject object1 = new JSONObject(response);\r\n                        if (object1.getInt(Constant.SUCESS) == 200)\r\n                        {\r\n                            sectionList = new ArrayList<>();\r\n                            Category section = new Category();\r\n                            //JSONObject jsonObject = jsonArray.getJSONObject(j);\r\n                            section.setName(FEATUREPRODUCT);\r\n                            section.setStyle(\"style_2\");\r\n                            section.setSubtitle(SUBTITLE_1);\r\n                            JSONArray jsonArray_products = object1.getJSONArray(Constant.DATA);\r\n\r\n                            if(measurement_list.size() == 0)\r\n                            {\r\n                                callSettingApi_messurment();\r\n                            }\r\n\r\n                            section.setProductList(ApiConfig.GetFeatureProduct_2(jsonArray_products,measurement_list) );\r\n                            sectionList.add(section);\r\n\r\n                            sectionView.setVisibility(View.VISIBLE);\r\n                            /*for (int i = 0; i < sectionList.size();i++)\r\n                            {\r\n                                System.out.println(\"value==>\"+sectionList.get(i));\r\n                            }*/\r\n                            SectionAdapter sectionAdapter = new SectionAdapter(MainActivity.this, sectionList);\r\n                            sectionView.setAdapter(sectionAdapter);\r\n                        }\r\n                        else{\r\n                            SectionProductRequest();\r\n                        }\r\n\r\n\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                        SectionProductRequest();\r\n                    }\r\n                }\r\n            }\r\n        }, MainActivity.this, BASEPATH + SECTIONPRODUCT +  session.getData(Constant.AREA_ID) , params, false);\r\n    }\r\n\r\n    private void callSettingApi_messurment()\r\n    {\r\n        try{\r\n            String str_measurment = session.getData(Constant.KEY_MEASUREMENT);\r\n            if(str_measurment.length() == 0)\r\n            {\r\n                ApiConfig.GetSettingConfigApi(activity, session);// to call measurement data\r\n            }\r\n            JSONArray jsonArray = new JSONArray(str_measurment);\r\n            measurement_list = new ArrayList<>();\r\n            for (int i = 0; i < jsonArray.length(); i++) {\r\n                JSONObject object1 = jsonArray.getJSONObject(i);\r\n                measurement_list.add(new Mesurrment(object1.getString(\"id\"), object1.getString(\"title\"), object1.getString(\"abv\")));\r\n            }\r\n\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            ex.printStackTrace();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private void GetSlider() {\r\n        progress_bar_banner.setVisibility(View.VISIBLE);\r\n        String SliderUrl = BASEPATH + BANNERIMAGE +  session.getData(Constant.AREA_ID);\r\n        //Log.d(\"SliderUrl===\",SliderUrl);\r\n        Map<String, String> params = new HashMap<>();\r\n\r\n        ApiConfig.RequestToVolley_GET(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    sliderArrayList = new ArrayList<>();\r\n                    try {\r\n                         //Log.d(\"response\", response);\r\n                         JSONObject object = new JSONObject(response);\r\n                        if (object.getInt(Constant.SUCESS) == 200)\r\n                        {\r\n                            progress_bar_banner.setVisibility(View.GONE);\r\n                            JSONArray jsonArray = object.getJSONArray(Constant.DATA);\r\n                            size = jsonArray.length();\r\n                            for (int i = 0; i < jsonArray.length(); i++) {\r\n                                JSONObject jsonObject = jsonArray.getJSONObject(i);\r\n                                sliderArrayList.add(new Slider(\"\", \"\", jsonObject.getString(\"title\"),  BANNERIMAGEPATH + jsonObject.getString(\"img\")) );\r\n                            }\r\n                            mPager.setAdapter(new SliderAdapter(sliderArrayList, MainActivity.this, R.layout.lyt_slider, \"home\"));\r\n                            ApiConfig.addMarkers(0, sliderArrayList, mMarkersLayout, MainActivity.this);\r\n                            handler = new Handler();\r\n                            Update = new Runnable() {\r\n                                public void run() {\r\n                                    if (currentPage == size) {\r\n                                        currentPage = 0;\r\n                                    }\r\n                                    try {\r\n                                        mPager.setCurrentItem(currentPage++, true);\r\n                                    } catch (Exception e) {\r\n                                        e.printStackTrace();\r\n                                    }\r\n                                }\r\n                            };\r\n                            swipeTimer = new Timer();\r\n                            swipeTimer.schedule(new TimerTask() {\r\n                                @Override\r\n                                public void run() {\r\n                                    handler.post(Update);\r\n                                }\r\n                            }, 3000, 2000);\r\n                        }\r\n                       else{\r\n                            progress_bar_banner.setVisibility(View.GONE);\r\n                            Toast.makeText(mContext, object.getString(\"msg\"),Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n                    } catch (JSONException e) {\r\n                        progress_bar_banner.setVisibility(View.GONE);\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, MainActivity.this, SliderUrl, params, true);\r\n\r\n    }\r\n\r\n\r\n    private void GetCategory() {\r\n        progressBar.setVisibility(View.GONE);\r\n        String CategoryUrl = BASEPATH + GETCATEGORY + session.getData(Constant.AREA_ID);\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        ApiConfig.RequestToVolley_GET(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                System.out.println(\"======cate \" + response);\r\n                if (result) {\r\n                    try {\r\n                        JSONObject object = new JSONObject(response);\r\n                        categoryArrayList = new ArrayList<>();\r\n                        categoryArrayList.clear();\r\n                        if (object.getInt(Constant.SUCESS) == 200)\r\n                        {\r\n                            JSONArray jsonArray = object.getJSONArray(Constant.DATA);\r\n                            if(jsonArray.length() > 0)\r\n                            {\r\n                                for (int i = 0; i < jsonArray.length(); i++)\r\n                                {\r\n                                    JSONObject jsonObject = jsonArray.getJSONObject(i);\r\n                                    if(i == 0)\r\n                                    {\r\n                                        str_cat_id =  jsonObject.getString(\"_id\");\r\n                                    }\r\n\r\n                                    if(jsonObject.getString(\"catagory_id\").equalsIgnoreCase(\"null\") )\r\n                                    {\r\n                                       Boolean allow_upload ;\r\n                                       if(jsonObject.has(\"allow_upload\"))\r\n                                       {\r\n                                           allow_upload =  jsonObject.getBoolean(\"allow_upload\");\r\n                                       }\r\n                                       else{\r\n                                           allow_upload=false;\r\n                                       }\r\n\r\n                                        categoryArrayList.add(new Category(\r\n                                                jsonObject.getString(\"_id\"),\r\n                                                jsonObject.getString(\"title\"),\r\n                                                \"\",\r\n                                                CATEGORYIMAGEPATH + jsonObject.getString(\"catagory_img\"),\r\n                                                allow_upload\r\n                                                ));\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n                            else{\r\n                                categoryArrayList.add(new Category(\"0\",\"No Category\",\"\",\"\",false) );\r\n                            }\r\n                            progressBar.setVisibility(View.GONE);\r\n                            categoryRecyclerView.setAdapter(new CategoryAdapter(MainActivity.this, categoryArrayList, R.layout.lyt_category, \"cate\", session));\r\n                        }\r\n                        else {\r\n                            progressBar.setVisibility(View.GONE);\r\n                            lytCategory.setVisibility(View.GONE);\r\n                            Toast.makeText(mContext, object.getString(\"msg\"),Toast.LENGTH_SHORT).show();\r\n                        }\r\n                        SectionProductRequest();\r\n\r\n                    } catch (JSONException e) {\r\n                        progressBar.setVisibility(View.GONE);\r\n                        lytCategory.setVisibility(View.GONE);\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, MainActivity.this, CategoryUrl, params, true);\r\n\r\n    }\r\n\r\n\r\n\r\n    private void GetFrenchise_id() {\r\n        progressBar.setVisibility(View.GONE);\r\n        String FrenchiseUrl = BASEPATH + GETFRENCHISE + session.getData(Constant.AREA_ID);\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        ApiConfig.RequestToVolley_GET(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                System.out.println(\"frenchise==>\" + response);\r\n                if (result) {\r\n                    try {\r\n                        JSONObject object = new JSONObject(response);\r\n\r\n                        if (object.getInt(Constant.SUCESS) == 200)\r\n                        {\r\n                            JSONArray jsonArray = object.getJSONArray(Constant.DATA);\r\n                            if(jsonArray.length() > 0)\r\n                            {\r\n                                JSONObject jsonObject =  jsonArray.getJSONObject(0);\r\n                                String franchiseId = jsonObject.getString(\"franchiseId\");\r\n                                Log.d(\"save_franchiseId\", franchiseId);\r\n                                session.setData(\"franchiseId\", franchiseId);\r\n                                storeinfo.setString(\"franch\", franchiseId);\r\n                            }\r\n                        }\r\n                    } catch (Exception e) {\r\n                        progressBar.setVisibility(View.GONE);\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, MainActivity.this, FrenchiseUrl, params, true);\r\n\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        txt_delivery_loc.setText(\"Deliver to \"+ session.getData(CITY_N));\r\n        if (session.isUserLoggedIn())\r\n        {\r\n            tvName.setText(session.getData(session.KEY_FIRSTNAME)+\" \"+ session.getData(session.KEY_LASTNAME));\r\n        }\r\n        else{\r\n            tvName.setText(getResources().getString(R.string.is_login));\r\n        }\r\n\r\n        try{\r\n            //execute if franchise is different from current franchise\r\n                if(session.getBoolean(\"area_change\"))\r\n                {\r\n                    showAlertView_LocChange();\r\n                    session.setBoolean(\"area_change\",false);\r\n                    if(storeinfo.getBoolean(\"is_locchange\"))\r\n                    {\r\n                        storeinfo.setBoolean(\"is_locchange\",false);\r\n                        if (AppController.isConnected(MainActivity.this)) {\r\n                            callSettingApi_messurment();//\r\n                            GetFrenchise_id();\r\n                            GetSlider();\r\n                            GetCategory();\r\n                            GetOfferImage();\r\n\r\n                            session.setBoolean(\"area_change\",false);\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            ex.printStackTrace();\r\n        }\r\n\r\n\r\n\r\n       if(storeinfo.getBoolean(\"is_app_updated\"))\r\n        {\r\n            //app is updated nothing do\r\n        }\r\n        else {\r\n            //app is not updated\r\n            showAlertView_2();\r\n        }\r\n\r\n        invalidateOptionsMenu();\r\n    }\r\n\r\n    private void GetOfferImage() {\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        ApiConfig.RequestToVolley_GET(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        ArrayList<String> offerList = new ArrayList<>();\r\n                        JSONObject objectbject = new JSONObject(response);\r\n                        //Log.d(\"offer\", Constant.OFFER_IMAGE+Constant.GET_OFFER+session.getData(Constant.AREA_ID));\r\n                        System.out.println(\"=====>\"+response);\r\n                        offerImgArrayList = new ArrayList<>();\r\n                        if (objectbject.getInt(Constant.SUCESS) == 200)\r\n                        {\r\n                            JSONArray jsonArray = objectbject.getJSONArray(Constant.DATA);\r\n                            for (int i = 0; i < jsonArray.length(); i++)\r\n                            {\r\n                                JSONObject object = jsonArray.getJSONObject(i);\r\n                                OfferImage offerImage = new OfferImage();\r\n                                offerImage.setId(object.getString(\"_id\"));\r\n\r\n                                //offerImage.setIs_imgscroll(object.getInt(\"click\"));\r\n\r\n                                Log.d(\"offerimage\", OFFER_IMAGE + object.getString(\"offer_img\"));\r\n                                offerImage.setImage(OFFER_IMAGE + object.getString(\"offer_img\"));\r\n                                offerImage.setOffer_title(object.getString(\"title\"));\r\n\r\n                                //offerImage.setYoutube_str(object.getString(\"youtube\"));\r\n                                offerImgArrayList.add(offerImage);\r\n                                offerList.add(OFFER_IMAGE + object.getString(\"offer_img\"));\r\n                            }\r\n                            offerView.setAdapter(new OfferAdapter(offerList, offerImgArrayList, R.layout.offer_lyt, MainActivity.this));\r\n                        }\r\n\r\n\r\n\r\n\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, MainActivity.this, Constant.BASEPATH+Constant.GET_OFFER+session.getData(Constant.AREA_ID), params, false);\r\n\r\n\r\n    }\r\n\r\n    public void OnClickBtn(View view)\r\n    {\r\n        int id = view.getId();\r\n        if (id == R.id.lythome) {\r\n            finish();\r\n            startActivity(new Intent(MainActivity.this, MainActivity.class));\r\n        } else if (id == R.id.lytcategory) {\r\n            OnViewAllClick(view);\r\n        } else if (id == R.id.lytfav) {\r\n               if(session.getData(Constant.CAT_ID).length() > 0)\r\n               {\r\n                 startActivity(new Intent(MainActivity.this, FavouriteActivity.class).putExtra(\"cat_id\", session.getData(Constant.CAT_ID)));\r\n               }\r\n               else{\r\n                   Toast.makeText(mContext, \"Please Select Category First\", Toast.LENGTH_SHORT).show();\r\n               }\r\n\r\n        } else if (id == R.id.layoutSearch) {\r\n            //startActivity(new Intent(MainActivity.this, SearchActivity.class).putExtra(\"from\", Constant.FROMSEARCH));\r\n        } else if (id == R.id.lytcart) {\r\n            OpenCart();\r\n        }\r\n    }\r\n\r\n\r\n    public void OnViewAllClick(View view) {\r\n        startActivity(new Intent(MainActivity.this, ProductCategory.class));\r\n    }\r\n\r\n\r\n    public static void UpdateToken(final String token, Activity activity)\r\n    {\r\n        Map<String, String> params = new HashMap<>();\r\n        params.put(Constant.TYPE, Constant.REGISTER_DEVICE);\r\n        params.put(Constant.TOKEN, token);\r\n        params.put(Constant.USER_ID, session.getData(Session.KEY_ID));\r\n        ApiConfig.RequestToVolley(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        JSONObject object = new JSONObject(response);\r\n                        if (!object.getBoolean(Constant.ERROR))\r\n                        {\r\n                            session.setData(Constant.KEY_FCM_ID, token);\r\n                        }\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, Constant.RegisterUrl, params, false);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        if (drawer.isDrawerOpen(navigationView))\r\n            drawer.closeDrawers();\r\n        else\r\n            doubleBack();\r\n    }\r\n\r\n    public void doubleBack() {\r\n        if (doubleBackToExitPressedOnce) {\r\n            super.onBackPressed();\r\n            return;\r\n        }\r\n        this.doubleBackToExitPressedOnce = true;\r\n        Toast.makeText(this, getString(R.string.exit_msg), Toast.LENGTH_SHORT).show();\r\n        new Handler().postDelayed(new Runnable() {\r\n\r\n            @Override\r\n            public void run() {\r\n                doubleBackToExitPressedOnce = false;\r\n            }\r\n        }, 2000);\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        this.menu = menu;\r\n        getMenuInflater().inflate(R.menu.main_menu, menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onPrepareOptionsMenu(Menu menu) {\r\n        menu.findItem(R.id.menu_search).setVisible(false);\r\n        menu.findItem(R.id.menu_sort).setVisible(false);\r\n        menu.findItem(R.id.menu_add).setVisible(false);\r\n        Log.d(\"item\", \"\"+databaseHelper.getTotalItemOfCart());\r\n\r\n        menu.findItem(R.id.menu_cart).setIcon(ApiConfig.buildCounterDrawable(databaseHelper.getTotalItemOfCart(), R.drawable.ic_cart, MainActivity.this));\r\n\r\n        return super.onPrepareOptionsMenu(menu);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId())\r\n        {\r\n            case R.id.menu_cart:\r\n                OpenCart();\r\n                return true;\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n\r\n    private void OpenCart() {\r\n        Intent intent  = new Intent(getApplicationContext(), CartActivity_2.class);\r\n        startActivity(intent);\r\n\r\n    }\r\n\r\n\r\n    private boolean isFirstTime() {\r\n        if (firstTime == null) {\r\n            SharedPreferences mPreferences = this.getSharedPreferences(\"first_time\", Context.MODE_PRIVATE);\r\n            firstTime = mPreferences.getBoolean(\"firstTime\", true);\r\n            if (firstTime) {\r\n                SharedPreferences.Editor editor = mPreferences.edit();\r\n                editor.putBoolean(\"firstTime\", false);\r\n                editor.commit();\r\n            }\r\n        }\r\n        return firstTime;\r\n    }\r\n\r\n    private void showReview_Custom()\r\n    {\r\n         AppRate.with(this)\r\n                .setStoreType(StoreType.GOOGLEPLAY) //default is Google, other option is Amazon\r\n                .setInstallDays(3) // default 10, 0 means install day.\r\n                .setLaunchTimes(10) // default 10 times.\r\n                .setRemindInterval(2) // default 1 day.\r\n                //.setShowLaterButton(true) // default true.\r\n                .setDebug(true) // default false.\r\n                .setCancelable(false) // default false.\r\n                .setOnClickButtonListener(new OnClickButtonListener() { // callback listener.\r\n                    @Override\r\n                    public void onClickButton(int which) {\r\n                        Log.d(MainActivity.class.getName(), Integer.toString(which));\r\n                        if(which == -3)\r\n                        {\r\n                              storeinfo.setBoolean(\"view_alert_rating\", true);\r\n                        }\r\n                        else if(which == -2)\r\n                        {\r\n                            storeinfo.setBoolean(\"view_alert_rating\", false);\r\n                        }\r\n                        else if(which == -1)\r\n                        {\r\n                            storeinfo.setBoolean(\"view_alert_rating\", false);\r\n                        }\r\n                    }\r\n                })\r\n                .setMessage(R.string.rate_dialog_message)\r\n                .setTitle(R.string.new_rate_dialog_title)\r\n                .setTextLater(R.string.new_rate_dialog_later)\r\n                .setTextNever(R.string.new_rate_dialog_never)\r\n                .setTextRateNow(R.string.new_rate_dialog_ok)\r\n                .monitor();\r\n\r\n\r\n        if(isFirstTime()){\r\n            AppRate.showRateDialogIfMeetsConditions(MainActivity.this);\r\n        }\r\n        else if(storeinfo.getBoolean(\"view_alert_rating\"))\r\n        {\r\n            AppRate.showRateDialogIfMeetsConditions(MainActivity.this);\r\n        }\r\n    }\r\n\r\n/*\r\n    public Boolean callApidefaultAdd()\r\n    {\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        params.put(\"userId\", session.getData(Session.KEY_id));\r\n        ApiConfig.RequestToVolley_POST(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        System.out.println(\"====res area=>\" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        if(jsonObject.has(Constant.SUCESS))\r\n                        {\r\n                            if (jsonObject.getInt(Constant.SUCESS) == 200)\r\n                            {\r\n                                JSONObject data_obj = jsonObject.getJSONObject(\"data\");\r\n                                JSONObject address_obj = data_obj.getJSONObject(\"address\");\r\n                                Boolean default_address = address_obj.getBoolean(\"default_address\");\r\n\r\n                                if(default_address)\r\n                                {\r\n                                    Log.d(\"val\", \"true\");\r\n                                    is_deafultAddExist = true;\r\n                                }\r\n                                else{\r\n                                    Log.d(\"val\", \"false\");\r\n                                    is_deafultAddExist = false;\r\n                                }\r\n                            }\r\n                            else{\r\n                                is_deafultAddExist = false;\r\n                                Toast.makeText(activity, Constant.NODEFAULT_ADD, Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }\r\n                        else{\r\n                            is_deafultAddExist = false;\r\n                            Toast.makeText(activity, Constant.NODEFAULT_ADD, Toast.LENGTH_SHORT).show();\r\n\r\n                        }\r\n\r\n                    } catch (JSONException e) {\r\n                        is_deafultAddExist = false;\r\n                        Toast.makeText(activity, Constant.NODEFAULT_ADD, Toast.LENGTH_SHORT).show();\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH+Constant.GET_USERDEFULTADD, params, false);\r\n\r\n        return is_deafultAddExist;\r\n\r\n    }\r\n\r\n\r\n\r\n    public void callApi_fillAdd()\r\n    {\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        params.put(\"userId\", session.getData(Session.KEY_id));\r\n        params.put(\"areaId\", session.getData(Constant.AREA_ID));\r\n\r\n        ApiConfig.RequestToVolley_POST(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        System.out.println(\"====>\" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        if(jsonObject.has(Constant.SUCESS))\r\n                        {\r\n                            if(jsonObject.getInt(Constant.SUCESS) == 200)\r\n                            {\r\n                                if(jsonObject.getBoolean(\"noAddress_flag\"))\r\n                                {\r\n                                    //no address save\r\n                                    is_address_save=false;\r\n                                }\r\n                                else{\r\n                                    //address is save\r\n                                    is_address_save=true;\r\n                                }\r\n                                if(jsonObject.getBoolean(\"defaultAddress_flag\"))\r\n                                {\r\n                                    // no default address\r\n                                    is_default_address_save=false;\r\n                                }\r\n                                else{\r\n                                    //default address save\r\n                                    is_default_address_save=true;\r\n                                }\r\n\r\n                            }\r\n                            else{\r\n                                is_address_save=false;\r\n                                is_default_address_save=false;\r\n                            }\r\n                        }\r\n\r\n                    } catch (JSONException e) {\r\n                        is_address_save=false;\r\n                        is_default_address_save=false;\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH + Constant.GET_CHECKADDRESS, params, true);\r\n\r\n    }\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/ifresh/customer/activity/MainActivity.java	(revision ce16e6637b08175bfb1d14ad608a40eebd8108fe)
+++ app/src/main/java/com/ifresh/customer/activity/MainActivity.java	(date 1609130587746)
@@ -74,6 +74,8 @@
 import hotchemi.android.rate.OnClickButtonListener;
 import hotchemi.android.rate.StoreType;
 
+import static com.ifresh.customer.helper.Constant.AREA_N;
+import static com.ifresh.customer.helper.Constant.AREA_NAME;
 import static com.ifresh.customer.helper.Constant.AUTHTOKEN;
 import static com.ifresh.customer.helper.Constant.BANNERIMAGE;
 import static com.ifresh.customer.helper.Constant.BANNERIMAGEPATH;
@@ -186,8 +188,6 @@
 
 
 
-
-
         txt_delivery_loc.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -255,6 +255,7 @@
             GetFrenchise_id();
             GetSlider();
             GetCategory();
+            SectionProductRequest();
             GetOfferImage();
             if (Constant.REFER_EARN_ACTIVE.equals("0")) {
                 Menu nav_Menu = navigationView.getMenu();
@@ -335,6 +336,13 @@
                             section.setSubtitle(SUBTITLE_1);
                             JSONArray jsonArray_products = object1.getJSONArray(Constant.DATA);
 
+                            //remove unnecessary product only save top 3 product for section
+                            for(int i = 3; i<jsonArray_products.length(); i++)
+                            {
+                                jsonArray_products.remove(i);
+                            }
+
+
                             if(measurement_list.size() == 0)
                             {
                                 callSettingApi_messurment();
@@ -344,21 +352,11 @@
                             sectionList.add(section);
 
                             sectionView.setVisibility(View.VISIBLE);
-                            /*for (int i = 0; i < sectionList.size();i++)
-                            {
-                                System.out.println("value==>"+sectionList.get(i));
-                            }*/
                             SectionAdapter sectionAdapter = new SectionAdapter(MainActivity.this, sectionList);
                             sectionView.setAdapter(sectionAdapter);
                         }
-                        else{
-                            SectionProductRequest();
-                        }
-
-
                     } catch (Exception e) {
                         e.printStackTrace();
-                        SectionProductRequest();
                     }
                 }
             }
@@ -379,7 +377,6 @@
                 JSONObject object1 = jsonArray.getJSONObject(i);
                 measurement_list.add(new Mesurrment(object1.getString("id"), object1.getString("title"), object1.getString("abv")));
             }
-
         }
         catch (Exception ex)
         {
@@ -511,7 +508,11 @@
                             lytCategory.setVisibility(View.GONE);
                             Toast.makeText(mContext, object.getString("msg"),Toast.LENGTH_SHORT).show();
                         }
-                        SectionProductRequest();
+
+
+
+
+
 
                     } catch (JSONException e) {
                         progressBar.setVisibility(View.GONE);
@@ -565,7 +566,7 @@
     @Override
     public void onResume() {
         super.onResume();
-        txt_delivery_loc.setText("Deliver to "+ session.getData(CITY_N));
+        txt_delivery_loc.setText("Deliver to :"+" "+ session.getData(CITY_N) + " / "+ session.getData(AREA_N));
         if (session.isUserLoggedIn())
         {
             tvName.setText(session.getData(session.KEY_FIRSTNAME)+" "+ session.getData(session.KEY_LASTNAME));
@@ -575,7 +576,7 @@
         }
 
         try{
-            //execute if franchise is different from current franchise
+                //execute if franchise is different from current franchise
                 if(session.getBoolean("area_change"))
                 {
                     showAlertView_LocChange();
@@ -584,20 +585,21 @@
                     {
                         storeinfo.setBoolean("is_locchange",false);
                         if (AppController.isConnected(MainActivity.this)) {
-                            callSettingApi_messurment();//
+                            if(measurement_list.size() == 0)
+                            {
+                                callSettingApi_messurment();
+                            }
                             GetFrenchise_id();
                             GetSlider();
                             GetCategory();
+                            SectionProductRequest();
                             GetOfferImage();
-
                             session.setBoolean("area_change",false);
                         }
 
                     }
 
                 }
-
-
         }
         catch (Exception ex)
         {
@@ -605,7 +607,6 @@
         }
 
 
-
        if(storeinfo.getBoolean("is_app_updated"))
         {
             //app is updated nothing do
@@ -661,8 +662,6 @@
                 }
             }
         }, MainActivity.this, Constant.BASEPATH+Constant.GET_OFFER+session.getData(Constant.AREA_ID), params, false);
-
-
     }
 
     public void OnClickBtn(View view)
@@ -695,31 +694,6 @@
     }
 
 
-    public static void UpdateToken(final String token, Activity activity)
-    {
-        Map<String, String> params = new HashMap<>();
-        params.put(Constant.TYPE, Constant.REGISTER_DEVICE);
-        params.put(Constant.TOKEN, token);
-        params.put(Constant.USER_ID, session.getData(Session.KEY_ID));
-        ApiConfig.RequestToVolley(new VolleyCallback() {
-            @Override
-            public void onSuccess(boolean result, String response) {
-                if (result) {
-                    try {
-                        JSONObject object = new JSONObject(response);
-                        if (!object.getBoolean(Constant.ERROR))
-                        {
-                            session.setData(Constant.KEY_FCM_ID, token);
-                        }
-                    } catch (JSONException e) {
-                        e.printStackTrace();
-                    }
-                }
-            }
-        }, activity, Constant.RegisterUrl, params, false);
-    }
-
-
     @Override
     public void onBackPressed() {
         if (drawer.isDrawerOpen(navigationView))
@@ -784,175 +758,8 @@
     }
 
 
-    private boolean isFirstTime() {
-        if (firstTime == null) {
-            SharedPreferences mPreferences = this.getSharedPreferences("first_time", Context.MODE_PRIVATE);
-            firstTime = mPreferences.getBoolean("firstTime", true);
-            if (firstTime) {
-                SharedPreferences.Editor editor = mPreferences.edit();
-                editor.putBoolean("firstTime", false);
-                editor.commit();
-            }
-        }
-        return firstTime;
-    }
-
-    private void showReview_Custom()
-    {
-         AppRate.with(this)
-                .setStoreType(StoreType.GOOGLEPLAY) //default is Google, other option is Amazon
-                .setInstallDays(3) // default 10, 0 means install day.
-                .setLaunchTimes(10) // default 10 times.
-                .setRemindInterval(2) // default 1 day.
-                //.setShowLaterButton(true) // default true.
-                .setDebug(true) // default false.
-                .setCancelable(false) // default false.
-                .setOnClickButtonListener(new OnClickButtonListener() { // callback listener.
-                    @Override
-                    public void onClickButton(int which) {
-                        Log.d(MainActivity.class.getName(), Integer.toString(which));
-                        if(which == -3)
-                        {
-                              storeinfo.setBoolean("view_alert_rating", true);
-                        }
-                        else if(which == -2)
-                        {
-                            storeinfo.setBoolean("view_alert_rating", false);
-                        }
-                        else if(which == -1)
-                        {
-                            storeinfo.setBoolean("view_alert_rating", false);
-                        }
-                    }
-                })
-                .setMessage(R.string.rate_dialog_message)
-                .setTitle(R.string.new_rate_dialog_title)
-                .setTextLater(R.string.new_rate_dialog_later)
-                .setTextNever(R.string.new_rate_dialog_never)
-                .setTextRateNow(R.string.new_rate_dialog_ok)
-                .monitor();
-
-
-        if(isFirstTime()){
-            AppRate.showRateDialogIfMeetsConditions(MainActivity.this);
-        }
-        else if(storeinfo.getBoolean("view_alert_rating"))
-        {
-            AppRate.showRateDialogIfMeetsConditions(MainActivity.this);
-        }
-    }
-
-/*
-    public Boolean callApidefaultAdd()
-    {
-        Map<String, String> params = new HashMap<String, String>();
-        params.put("userId", session.getData(Session.KEY_id));
-        ApiConfig.RequestToVolley_POST(new VolleyCallback() {
-            @Override
-            public void onSuccess(boolean result, String response) {
-                if (result) {
-                    try {
-                        System.out.println("====res area=>" + response);
-                        JSONObject jsonObject = new JSONObject(response);
-                        if(jsonObject.has(Constant.SUCESS))
-                        {
-                            if (jsonObject.getInt(Constant.SUCESS) == 200)
-                            {
-                                JSONObject data_obj = jsonObject.getJSONObject("data");
-                                JSONObject address_obj = data_obj.getJSONObject("address");
-                                Boolean default_address = address_obj.getBoolean("default_address");
-
-                                if(default_address)
-                                {
-                                    Log.d("val", "true");
-                                    is_deafultAddExist = true;
-                                }
-                                else{
-                                    Log.d("val", "false");
-                                    is_deafultAddExist = false;
-                                }
-                            }
-                            else{
-                                is_deafultAddExist = false;
-                                Toast.makeText(activity, Constant.NODEFAULT_ADD, Toast.LENGTH_SHORT).show();
-                            }
-                        }
-                        else{
-                            is_deafultAddExist = false;
-                            Toast.makeText(activity, Constant.NODEFAULT_ADD, Toast.LENGTH_SHORT).show();
-
-                        }
-
-                    } catch (JSONException e) {
-                        is_deafultAddExist = false;
-                        Toast.makeText(activity, Constant.NODEFAULT_ADD, Toast.LENGTH_SHORT).show();
-                        e.printStackTrace();
-                    }
-                }
-            }
-        }, activity, Constant.BASEPATH+Constant.GET_USERDEFULTADD, params, false);
 
-        return is_deafultAddExist;
 
-    }
-
-
-
-    public void callApi_fillAdd()
-    {
-        Map<String, String> params = new HashMap<String, String>();
-        params.put("userId", session.getData(Session.KEY_id));
-        params.put("areaId", session.getData(Constant.AREA_ID));
-
-        ApiConfig.RequestToVolley_POST(new VolleyCallback() {
-            @Override
-            public void onSuccess(boolean result, String response) {
-                if (result) {
-                    try {
-                        System.out.println("====>" + response);
-                        JSONObject jsonObject = new JSONObject(response);
-                        if(jsonObject.has(Constant.SUCESS))
-                        {
-                            if(jsonObject.getInt(Constant.SUCESS) == 200)
-                            {
-                                if(jsonObject.getBoolean("noAddress_flag"))
-                                {
-                                    //no address save
-                                    is_address_save=false;
-                                }
-                                else{
-                                    //address is save
-                                    is_address_save=true;
-                                }
-                                if(jsonObject.getBoolean("defaultAddress_flag"))
-                                {
-                                    // no default address
-                                    is_default_address_save=false;
-                                }
-                                else{
-                                    //default address save
-                                    is_default_address_save=true;
-                                }
-
-                            }
-                            else{
-                                is_address_save=false;
-                                is_default_address_save=false;
-                            }
-                        }
-
-                    } catch (JSONException e) {
-                        is_address_save=false;
-                        is_default_address_save=false;
-                        e.printStackTrace();
-                    }
-                }
-            }
-        }, activity, Constant.BASEPATH + Constant.GET_CHECKADDRESS, params, true);
-
-    }
-
-*/
 
 
 
Index: app/src/main/java/com/ifresh/customer/activity/UploadMedicine.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ifresh.customer.activity;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.os.Handler;\r\nimport android.os.StrictMode;\r\nimport android.os.Vibrator;\r\nimport android.provider.MediaStore;\r\nimport android.text.Html;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.loader.content.CursorLoader;\r\n\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.NetworkResponse;\r\nimport com.android.volley.NoConnectionError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.TimeoutError;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.ifresh.customer.R;\r\nimport com.ifresh.customer.helper.ApiConfig;\r\nimport com.ifresh.customer.helper.Constant;\r\nimport com.ifresh.customer.helper.FileOperation;\r\nimport com.ifresh.customer.helper.Session;\r\nimport com.ifresh.customer.helper.StorePrefrence;\r\nimport com.ifresh.customer.helper.VolleyCallback;\r\nimport com.ifresh.customer.helper.VolleyMultipartRequest;\r\nimport com.ifresh.customer.kotlin.FillAddress;\r\nimport com.squareup.picasso.Callback;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\n\r\nimport static android.graphics.Color.GRAY;\r\nimport static com.ifresh.customer.helper.Constant.GET_ORDERCANCEL;\r\n\r\npublic class UploadMedicine extends AppCompatActivity  {\r\n    private static final int PERMISSION_CALLBACK_CONSTANT = 100;\r\n    private static final int REQUEST_PERMISSION_SETTING = 101;\r\n    String[] permissionsRequiGRAY = new String[]{\r\n            Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n            Manifest.permission.ACCESS_FINE_LOCATION,\r\n            Manifest.permission.ACCESS_COARSE_LOCATION,\r\n            Manifest.permission.CALL_PHONE,\r\n            Manifest.permission.CAMERA\r\n    };\r\n\r\n    private boolean sentToSettings = false;\r\n    Activity activity = UploadMedicine.this;\r\n    Session session;\r\n    StorePrefrence storeinfo;\r\n    Toolbar toolbar;\r\n    LinearLayout linear_top_picmore,linear2,linear3,linear4;\r\n    TextView txt_picmore,txtaddress,type1,tvnoAddress;\r\n    ImageView user_pic,user_pic_2,user_pic_3,user_pic_4,imgedit;\r\n    Button btn_pic,btn_pic_2,btn_pic_3,btn_pic_4,btn_save;\r\n    Button btn_del,btn_del_2,btn_del_3,btn_del_4;\r\n    EditText txt;\r\n    Context mContext = UploadMedicine.this;\r\n    private Bitmap bitmap;\r\n    private Uri selectedImage;\r\n    private String type, filename,doc;\r\n    String mCurrentPhotoPath;\r\n    String imageFileName=\"\";\r\n\r\n    ArrayList<String>arrayList = new ArrayList<>();\r\n    private ProgressBar progressBar;\r\n    private Boolean is_img1=false, is_img2=false, is_img3=false, is_img4 = false;\r\n\r\n    private Boolean is_img_up1=false, is_img_up2=false, is_img_up3=false, is_img_up4 = false;\r\n\r\n    Boolean is_address_save=false, is_default_address_save=false;\r\n    LinearLayout linear_home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_view_uploadpres);\r\n        StrictMode.VmPolicy.Builder builder = new StrictMode.VmPolicy.Builder();\r\n        StrictMode.setVmPolicy(builder.build());\r\n\r\n        storeinfo = new StorePrefrence(UploadMedicine.this);\r\n        session = new Session(UploadMedicine.this);\r\n        toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        getSupportActionBar().setTitle(getResources().getString(R.string.upload_medicine));\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n\r\n        progressBar = findViewById(R.id.progressBar);\r\n        imgedit = findViewById(R.id.imgedit);\r\n        linear_home = findViewById(R.id.linear_home);\r\n        txtaddress = findViewById(R.id.txtaddress);\r\n        tvnoAddress = findViewById(R.id.tvnoAddress);\r\n        type1 = findViewById(R.id.type1);\r\n\r\n        linear_top_picmore = findViewById(R.id.linear_top_picmore);\r\n        linear2 = findViewById(R.id.linear2);\r\n        linear3 = findViewById(R.id.linear3);\r\n        linear4 = findViewById(R.id.linear4);\r\n\r\n        user_pic = findViewById(R.id.user_pic);\r\n        user_pic_2 = findViewById(R.id.user_pic_2);\r\n        user_pic_3 = findViewById(R.id.user_pic_3);\r\n        user_pic_4 = findViewById(R.id.user_pic_4);\r\n\r\n\r\n\r\n        btn_del = findViewById(R.id.btn_del);\r\n        btn_del_2 = findViewById(R.id.btn_del_2);\r\n        btn_del_3 = findViewById(R.id.btn_del_3);\r\n        btn_del_4 = findViewById(R.id.btn_del_4);\r\n\r\n\r\n        btn_pic = findViewById(R.id.btn_pic);\r\n        btn_pic_2 = findViewById(R.id.btn_pic_2);\r\n        btn_pic_3 = findViewById(R.id.btn_pic_3);\r\n        btn_pic_4 = findViewById(R.id.btn_pic_4);\r\n        btn_save = findViewById(R.id.btn_save);\r\n\r\n        txt = findViewById(R.id.txt);\r\n        txt_picmore = findViewById(R.id.txt_picmore);\r\n\r\n        checkpermission();\r\n\r\n\r\n\r\n        linear_home.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(UploadMedicine.this, FillAddress.class);\r\n                intent.putExtra(\"userId\", session.getData(session.KEY_id));\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        imgedit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(UploadMedicine.this, FillAddress.class);\r\n                intent.putExtra(\"userId\", session.getData(session.KEY_id));\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        });\r\n        btn_save.setOnClickListener(new View.OnClickListener() {\r\n            @RequiresApi(api = Build.VERSION_CODES.O)\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if(is_img_up1 || is_img_up2 || is_img_up3 || is_img_up4)\r\n                  call_placingimageorder_api();\r\n                else\r\n                   Toast.makeText(mContext, \"Please Upload At Least One Image Order\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        btn_del.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showAlertView(btn_del.getTag().toString(),  btn_del, btn_pic, user_pic, 1);\r\n            }\r\n        });\r\n\r\n        btn_del_2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showAlertView(btn_del_2.getTag().toString(),  btn_del_2, btn_pic_2, user_pic_2,2);\r\n                //call_cancel_order_api(btn_del_2.getTag().toString(),  btn_del_2, btn_pic_2, user_pic_2,2);\r\n            }\r\n        });\r\n\r\n        btn_del_3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showAlertView(btn_del_3.getTag().toString(),  btn_del_3, btn_pic_3, user_pic_3,3);\r\n                //call_cancel_order_api(btn_del_3.getTag().toString(),  btn_del_3, btn_pic_3, user_pic_3,3);\r\n            }\r\n        });\r\n\r\n        btn_del_4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showAlertView(btn_del_4.getTag().toString(),  btn_del_4, btn_pic_4, user_pic_4,4);\r\n                //call_cancel_order_api(btn_del_4.getTag().toString(),  btn_del_4, btn_pic_4, user_pic_4,4);\r\n            }\r\n        });\r\n\r\n\r\n\r\n        btn_pic.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(is_img1)\r\n                {\r\n                    linear_top_picmore.setVisibility(View.VISIBLE);\r\n                    uploadFile(selectedImage,btn_pic, btn_del , user_pic, 1);\r\n                }\r\n                else{\r\n                    Toast.makeText(mContext,\"Please Upload Image First\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n\r\n        btn_pic_2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(is_img2)\r\n                {\r\n                    uploadFile(selectedImage, btn_pic_2, btn_del_2 ,user_pic_2,2);\r\n                }\r\n                else{\r\n                    Toast.makeText(mContext,\"Please Upload Image First\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        btn_pic_3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(is_img3)\r\n                {\r\n                    uploadFile(selectedImage, btn_pic_3, btn_del_3 ,user_pic_3,3);\r\n                }\r\n                else{\r\n                    Toast.makeText(mContext,\"Please Upload Image First\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n\r\n        btn_pic_4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(is_img4)\r\n                {\r\n                    uploadFile(selectedImage, btn_pic_4, btn_del_4,user_pic_4,4);\r\n                }\r\n                else{\r\n                    Toast.makeText(mContext,\"Please Upload Image First\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        linear_top_picmore.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if(linear2.getVisibility() == View.GONE)\r\n                {\r\n                    linear2.setVisibility(View.VISIBLE);\r\n                }\r\n                else if(linear3.getVisibility() == View.GONE)\r\n                {\r\n                    linear3.setVisibility(View.VISIBLE);\r\n                }\r\n                else if(linear4.getVisibility() == View.GONE)\r\n                {\r\n                    linear4.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n        });\r\n\r\n        txt_picmore.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(linear2.getVisibility() == View.GONE)\r\n                {\r\n                    linear2.setVisibility(View.VISIBLE);\r\n                }\r\n                else if(linear3.getVisibility() == View.GONE)\r\n                {\r\n                    linear3.setVisibility(View.VISIBLE);\r\n                }\r\n                else if(linear4.getVisibility() == View.GONE)\r\n                {\r\n                    linear4.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        user_pic.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(btn_pic.isEnabled())\r\n                {\r\n                    selectImage(\"userpic_1\");\r\n                }\r\n                else{\r\n                    //show image view\r\n                    String url_img_pic =  user_pic.getTag().toString();\r\n                    Intent intent = new Intent(mContext, ImageFullView.class);\r\n                    intent.putExtra(\"image\",url_img_pic);\r\n                    startActivity(intent);\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n\r\n        user_pic_2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(btn_pic_2.isEnabled())\r\n                {\r\n                    selectImage(\"userpic_2\");\r\n                }\r\n                else{\r\n                    //show image view\r\n                    String url_img_pic = Constant.UPLOAD_IMAGE_SHOW + user_pic_2.getTag();\r\n                    Intent intent = new Intent(mContext, ImageFullView.class);\r\n                    intent.putExtra(\"image\",url_img_pic);\r\n                    startActivity(intent);\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        user_pic_3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(btn_pic_3.isEnabled())\r\n                {\r\n                    selectImage(\"userpic_3\");\r\n                }\r\n                else{\r\n                    //show image view\r\n                    String url_img_pic = Constant.UPLOAD_IMAGE_SHOW + user_pic_3.getTag();\r\n                    Intent intent = new Intent(mContext, ImageFullView.class);\r\n                    intent.putExtra(\"image\",url_img_pic);\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        });\r\n\r\n        user_pic_4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(btn_pic_4.isEnabled())\r\n                {\r\n                    selectImage(\"userpic_4\");\r\n                }\r\n                else{\r\n                    //show image view\r\n                    String url_img_pic = Constant.UPLOAD_IMAGE_SHOW + user_pic_4.getTag();\r\n                    Intent intent = new Intent(mContext, ImageFullView.class);\r\n                    intent.putExtra(\"image\",url_img_pic);\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    private File createImageFile() throws IOException\r\n    {\r\n        // Create an image file name\r\n        String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date());\r\n        imageFileName = \"JPEG_\" + timeStamp + \"_\";\r\n        File storageDir = new File(Environment.getExternalStoragePublicDirectory(\r\n                Environment.DIRECTORY_DCIM), \"Camera\");\r\n        File image = File.createTempFile(\r\n                imageFileName,  /* prefix */\r\n                \".jpg\",         /* suffix */\r\n                storageDir      /* directory */\r\n        );\r\n\r\n        // Save a file: path for use with ACTION_VIEW intents\r\n        mCurrentPhotoPath = \"file:\" + image.getAbsolutePath();\r\n        return image;\r\n    }\r\n\r\n\r\n\r\n    private void selectImage(final String picvalue)\r\n    {\r\n        final CharSequence[] options = { \"Take Photo\", \"Choose from Gallery\",\"Cancel\" };\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new AlertDialog.Builder(mContext);\r\n        builder.setTitle(\"Add Photo!\");\r\n        builder.setItems(options, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int item) {\r\n                if (options[item].equals(\"Take Photo\"))\r\n                {\r\n                    Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n                    File f = new File(android.os.Environment.getExternalStorageDirectory(), \"temp.jpg\");\r\n                    intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(f));\r\n\r\n\r\n                    if(picvalue.equalsIgnoreCase(\"userpic_1\"))\r\n                    {\r\n                        startActivityForResult(intent, 1);\r\n                    }\r\n                    else if(picvalue.equalsIgnoreCase(\"userpic_2\"))\r\n                    {\r\n                        startActivityForResult(intent, 3);\r\n                    }\r\n                    else if(picvalue.equalsIgnoreCase(\"userpic_3\"))\r\n                    {\r\n                        startActivityForResult(intent, 5);\r\n                    }\r\n                    else if(picvalue.equalsIgnoreCase(\"userpic_4\"))\r\n                    {\r\n                        startActivityForResult(intent, 7);\r\n                    }\r\n                }\r\n                else if (options[item].equals(\"Choose from Gallery\"))\r\n                {\r\n                    Intent intent = new   Intent(Intent.ACTION_PICK,\r\n                            android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                    if(picvalue.equalsIgnoreCase(\"userpic_1\"))\r\n                    {\r\n                        startActivityForResult(intent, 2);\r\n                    }\r\n                    if(picvalue.equalsIgnoreCase(\"userpic_2\"))\r\n                    {\r\n                        startActivityForResult(intent, 4);\r\n                    }\r\n                    if(picvalue.equalsIgnoreCase(\"userpic_3\"))\r\n                    {\r\n                        startActivityForResult(intent, 6);\r\n                    }\r\n                    if(picvalue.equalsIgnoreCase(\"userpic_4\"))\r\n                    {\r\n                        startActivityForResult(intent, 8);\r\n                    }\r\n                }\r\n                else if (options[item].equals(\"Cancel\")) {\r\n                    dialog.dismiss();\r\n                }\r\n            }\r\n        });\r\n        builder.show();\r\n\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data)\r\n    {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode == RESULT_OK)\r\n        {\r\n            //selectedImage = getIntent().getData();\r\n            if (requestCode == 1 || requestCode == 3 || requestCode == 5 || requestCode == 7)\r\n            {\r\n                File f = new File(Environment.getExternalStorageDirectory().toString());\r\n                for (File temp : f.listFiles())\r\n                {\r\n                    if (temp.getName().equals(\"temp.jpg\")) {\r\n                        f = temp;\r\n                        break;\r\n                    }\r\n                }\r\n                try {\r\n                    BitmapFactory.Options bitmapOptions = new BitmapFactory.Options();\r\n                    bitmap = BitmapFactory.decodeFile(f.getAbsolutePath(),\r\n                            bitmapOptions);\r\n\r\n                    selectedImage = getImageUri(mContext, bitmap);\r\n                    if(requestCode == 1) {\r\n                        user_pic.setImageBitmap(bitmap);\r\n                        type=\"Photo1\";\r\n                        filename=\"Photo1\"+session.getData(session.KEY_id);\r\n                        is_img1=true;\r\n\r\n                    }\r\n                    else if(requestCode == 3){\r\n                        user_pic_2.setImageBitmap(bitmap);\r\n                        type=\"Photo2\";\r\n                        filename=\"Photo2\"+session.getData(session.KEY_id);\r\n                        is_img2=true;\r\n                    }\r\n                    else if(requestCode == 5){\r\n                        user_pic_3.setImageBitmap(bitmap);\r\n                        type=\"Photo3\";\r\n                        filename=\"Photo3\"+session.getData(session.KEY_id);\r\n                        is_img3=true;\r\n\r\n                    }\r\n                    else if(requestCode == 7){\r\n                        user_pic_4.setImageBitmap(bitmap);\r\n                        type=\"Photo4\";\r\n                        filename=\"Photo4\"+session.getData(session.KEY_id);\r\n                        is_img4=true;\r\n\r\n                    }\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n            else if (requestCode == 2 || requestCode == 4 || requestCode == 6 || requestCode == 8)\r\n            {\r\n                selectedImage = data.getData();\r\n                String[] filePath = {MediaStore.Images.Media.DATA };\r\n                Cursor c = getContentResolver().query(selectedImage,filePath, null, null, null);\r\n                c.moveToFirst();\r\n                int columnIndex = c.getColumnIndex(filePath[0]);\r\n                String picturePath = c.getString(columnIndex);\r\n                c.close();\r\n                bitmap = (BitmapFactory.decodeFile(picturePath));\r\n\r\n                if(requestCode == 2){\r\n                    user_pic.setImageBitmap(bitmap);\r\n                    type=\"Photo1\";\r\n                    filename=\"Photo1\"+session.getData(session.KEY_id);\r\n                    is_img1=true;\r\n                }\r\n                else if(requestCode == 4){\r\n                    user_pic_2.setImageBitmap(bitmap);\r\n                    type=\"Photo2\";\r\n                    filename=\"Photo2\"+session.getData(session.KEY_id);\r\n                    is_img2=true;\r\n                }\r\n                else if(requestCode == 6){\r\n                    user_pic_3.setImageBitmap(bitmap);\r\n                    type=\"Photo3\";\r\n                    filename=\"Photo3\"+session.getData(session.KEY_id);\r\n                    is_img3=true;\r\n\r\n                }\r\n                else if(requestCode == 8){\r\n                    user_pic_4.setImageBitmap(bitmap);\r\n                    type=\"Photo4\";\r\n                    filename=\"Photo4\"+session.getData(session.KEY_id);\r\n                    is_img4=true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private void showPic_1Image(final Button btn, final Button btn_del_n , final ImageView img, final String image_name, final int btn_var) {\r\n        progressBar.setVisibility(View.VISIBLE);\r\n        try{\r\n            final String url_img_pic = Constant.UPLOAD_IMAGE_SHOW + image_name;\r\n            Log.d(\"url\", url_img_pic);\r\n            if (!url_img_pic.contentEquals(\"\"))\r\n            {\r\n                Picasso.with(mContext)\r\n                        .load(url_img_pic)\r\n                        .placeholder( R.drawable.progress_animationn)\r\n                        .error(R.drawable.ic_image_upload)\r\n                        .into(img, new Callback() {\r\n                            @Override\r\n                            public void onSuccess() {\r\n                                btn.setEnabled(false);\r\n                                btn.setBackgroundColor(GRAY);\r\n\r\n                                btn_del_n.setEnabled(true);\r\n                                btn_del_n.setBackgroundColor(Color.parseColor(\"#09B150\"));\r\n                                btn_del_n.setTag(image_name);\r\n\r\n                                img.setEnabled(true);\r\n                                img.setTag(url_img_pic);\r\n\r\n                                if(btn_var == 1)\r\n                                {\r\n                                    is_img_up1=true;\r\n                                }\r\n                                else if(btn_var == 2)\r\n                                {\r\n                                    is_img_up2=true;\r\n                                }\r\n                                else if(btn_var == 3)\r\n                                {\r\n                                    is_img_up3 = true;\r\n                                }\r\n                                else if(btn_var == 4)\r\n                                {\r\n                                    is_img_up4 = true;\r\n                                }\r\n\r\n                                progressBar.setVisibility(View.GONE);\r\n                            }\r\n                            @Override\r\n                            public void onError() {\r\n\r\n                                if(btn_var == 1)\r\n                                {\r\n                                    is_img_up1=false;\r\n                                }\r\n                                else if(btn_var == 2)\r\n                                {\r\n                                    is_img_up2=false;\r\n                                }\r\n                                else if(btn_var == 3)\r\n                                {\r\n                                    is_img_up3=false;\r\n                                }\r\n                                else if(btn_var == 4)\r\n                                {\r\n                                    is_img_up4=false;\r\n                                }\r\n\r\n                                btn.setEnabled(true);\r\n                                btn.setBackgroundColor(Color.parseColor(\"#09B150\"));\r\n\r\n                                btn_del_n.setEnabled(false);\r\n                                btn_del_n.setBackgroundColor(GRAY);\r\n\r\n                                img.setEnabled(true);\r\n\r\n                                progressBar.setVisibility(View.GONE);\r\n                            }\r\n                        });\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            progressBar.setVisibility(View.GONE);\r\n            ex.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    private void uploadFile(Uri fileUri,  final Button btn_pic,  final Button btn_del, final ImageView user_pic, final int btn_var) {\r\n        final ProgressDialog pDialog  = new ProgressDialog(mContext);\r\n        try {\r\n            pDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n            pDialog.setMessage(\"Uploading...\");\r\n            pDialog.setIndeterminate(true);\r\n            pDialog.setCanceledOnTouchOutside(false);\r\n            pDialog.show();\r\n\r\n            final File file = new File(getRealPathFromURI(fileUri));\r\n            final FileOperation f = new FileOperation();\r\n            f.readFile(file);\r\n\r\n            String url= Constant.BASEPATH+Constant.UPLOAD_IMAGE;\r\n            Log.d(\"Url\", \"\"+url);\r\n            VolleyMultipartRequest multipartRequest = new VolleyMultipartRequest(Request.Method.POST, url, new Response.Listener<NetworkResponse>() {\r\n                @Override\r\n                public void onResponse(NetworkResponse response) {\r\n                    String resultResponse = new String(response.data);\r\n                    Log.d(\"Response\", resultResponse);\r\n\r\n\r\n                    try{\r\n                        JSONObject jsonObject = new JSONObject(resultResponse);\r\n                        if(jsonObject.getString(Constant.SUCESS).equalsIgnoreCase(\"200\"))\r\n                        {\r\n                            arrayList.add(jsonObject.getString(\"name\"));\r\n                            pDialog.dismiss();\r\n                            showPic_1Image(btn_pic, btn_del ,user_pic, jsonObject.getString(\"name\"), btn_var);\r\n                        }\r\n                    }\r\n                    catch (Exception ex)\r\n                    {\r\n                        pDialog.dismiss();\r\n                        ex.printStackTrace();\r\n                    }\r\n\r\n\r\n\r\n                }\r\n            }, new Response.ErrorListener() {\r\n                @Override\r\n                public void onErrorResponse(VolleyError error) {\r\n                    NetworkResponse networkResponse = error.networkResponse;\r\n                    String errorMessage = \"Unknown error\";\r\n                    if (networkResponse == null) {\r\n                        if (error.getClass().equals(TimeoutError.class)) {\r\n                            errorMessage = \"Request timeout\";\r\n                        } else if (error.getClass().equals(NoConnectionError.class)) {\r\n                            errorMessage = \"Failed to connect server\";\r\n                        }\r\n                    } else {\r\n                        String result = new String(networkResponse.data);\r\n                        try {\r\n                            JSONObject response = new JSONObject(result);\r\n                            String status = response.getString(\"status\");\r\n                            String message = response.getString(\"message\");\r\n\r\n                            Log.e(\"Error Status\", status);\r\n                            Log.e(\"Error Message\", message);\r\n\r\n                            if (networkResponse.statusCode == 404) {\r\n                                errorMessage = \"Resource not found\";\r\n                            } else if (networkResponse.statusCode == 401) {\r\n                                errorMessage = message+\" Please login again\";\r\n                            } else if (networkResponse.statusCode == 400) {\r\n                                errorMessage = message+ \" Check your inputs\";\r\n                            } else if (networkResponse.statusCode == 500) {\r\n                                errorMessage = message+\" Something is getting wrong\";\r\n                            }\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                    Log.i(\"Error\", errorMessage);\r\n                    pDialog.dismiss();\r\n                    error.printStackTrace();\r\n                }\r\n            }) {\r\n                @Override\r\n                protected Map<String, String> getParams() {\r\n                    Map<String, String> params = new HashMap<>();\r\n                    return params;\r\n                }\r\n\r\n                @Override\r\n                protected Map<String, DataPart> getByteData() {\r\n                    Map<String, DataPart> params = new HashMap<>();\r\n                    // file name could found file base or direct access from real local_path\r\n                    // for now just get bitmap data from ImageView\r\n                    try {\r\n                        params.put(\"user_img\", new DataPart(\"user_image.jpg\",f.readFile(file), \"image/jpeg\"));\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                    return params;\r\n                }\r\n            };\r\n\r\n            RequestQueue requestQueue = Volley.newRequestQueue(mContext);\r\n            multipartRequest.setRetryPolicy(new DefaultRetryPolicy(500000,0,0));\r\n\r\n            //Adding request to the queue\r\n            requestQueue.add(multipartRequest);\r\n\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            Toast.makeText(getApplicationContext(), ex.getMessage(), Toast.LENGTH_LONG).show();\r\n            pDialog.dismiss();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.O)\r\n    private void call_placingimageorder_api()\r\n    {\r\n        final Vibrator vibe = (Vibrator) UploadMedicine.this.getSystemService(Context.VIBRATOR_SERVICE);\r\n        vibe.vibrate(80);\r\n\r\n        progressBar.setVisibility(View.VISIBLE);\r\n        String order_imgs=\"\";\r\n        if(arrayList.size() == 1)\r\n        {\r\n            order_imgs = arrayList.get(0);\r\n        }\r\n        else{\r\n             order_imgs = String.join(\",\", arrayList);\r\n        }\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        params.put(\"userId\", session.getData(Session.KEY_id));\r\n        params.put(\"phone_no\", session.getData(Session.KEY_mobile));\r\n        params.put(\"order_imgs\", order_imgs);\r\n        params.put(\"decsription\", txt.getText().toString());\r\n        params.put(\"order_type\", \"2\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ApiConfig.RequestToVolley_POST(new VolleyCallback()\r\n        {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        //System.out.println(\"====res area \" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        if(jsonObject.getString(Constant.SUCESS).equalsIgnoreCase(\"200\"))\r\n                        {\r\n                            //Toast.makeText(mContext, \"Order Image Uploaded Successfully\", Toast.LENGTH_SHORT).show();\r\n                            user_pic.setEnabled(false);\r\n                            btn_pic.setEnabled(false);\r\n                            btn_del.setEnabled(false);\r\n                            btn_pic.setBackgroundColor(GRAY);\r\n                            btn_del.setBackgroundColor(GRAY);\r\n\r\n\r\n                            user_pic_2.setEnabled(false);\r\n                            btn_pic_2.setEnabled(false);\r\n                            btn_del_2.setEnabled(false);\r\n                            btn_pic_2.setBackgroundColor(GRAY);\r\n                            btn_del_2.setBackgroundColor(GRAY);\r\n\r\n                            user_pic_3.setEnabled(false);\r\n                            btn_pic_3.setEnabled(false);\r\n                            btn_del_3.setEnabled(false);\r\n                            btn_pic_3.setBackgroundColor(GRAY);\r\n                            btn_del_3.setBackgroundColor(GRAY);\r\n\r\n\r\n                            user_pic_4.setEnabled(false);\r\n                            btn_pic_4.setEnabled(false);\r\n                            btn_del_4.setEnabled(false);\r\n                            btn_pic_4.setBackgroundColor(GRAY);\r\n                            btn_del_4.setBackgroundColor(GRAY);\r\n\r\n                            final Handler handler = new Handler();\r\n                            handler.postDelayed(new Runnable() {\r\n                                @Override\r\n                                public void run() {\r\n                                    // Do something after 5s = 5000ms\r\n                                    startActivity(new Intent(UploadMedicine.this, MedicalOrderPlacedActivity.class));\r\n                                    finish();\r\n                                }\r\n                            }, 1000);\r\n                        }\r\n                        else{\r\n                             Toast.makeText(mContext, \"Error has occurred please try again later\", Toast.LENGTH_SHORT).show();\r\n                          }\r\n\r\n                        progressBar.setVisibility(View.GONE);\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                        Toast.makeText(mContext, \"Error Has Occur Please Try Again Later\", Toast.LENGTH_SHORT).show();\r\n                        progressBar.setVisibility(View.GONE);\r\n                    }\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH + Constant.PLACING_IMAGEORDER , params, false);\r\n    }\r\n\r\n\r\n    private void call_cancel_order_api(final String imageFileName, final Button btn_del, final Button btn_pic, final ImageView user_pic, final Integer is_imgdel)\r\n    {\r\n        progressBar.setVisibility(View.VISIBLE);\r\n        Map<String, String> params = new HashMap<String, String>();\r\n\r\n        ApiConfig.RequestToVolley_GET(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        System.out.println(\"====res area \" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        if(jsonObject.getString(Constant.SUCESS).equalsIgnoreCase(\"200\"))\r\n                        {\r\n                            Toast.makeText(mContext, \"Order Image Deleted\", Toast.LENGTH_SHORT).show();\r\n                            btn_del.setEnabled(false);\r\n                            btn_del.setBackgroundColor(GRAY);\r\n\r\n\r\n                            if(is_imgdel == 1)\r\n                                 is_img1=false;\r\n                            else if(is_imgdel == 2)\r\n                                 is_img2=false;\r\n                            else if(is_imgdel == 3)\r\n                                 is_img3=false;\r\n                            else if(is_imgdel == 4)\r\n                                 is_img4=false;\r\n\r\n                            if(arrayList.contains(imageFileName))\r\n                            {\r\n                                int pos = arrayList.indexOf(imageFileName);\r\n                                arrayList.remove(pos);\r\n                            }\r\n\r\n                            showPic_1Image(btn_pic, btn_del ,user_pic, \"\",is_imgdel);\r\n\r\n\r\n                        }\r\n                        else{\r\n                            Toast.makeText(mContext, \"Error Has Occur Please Try Again Later\", Toast.LENGTH_SHORT).show();\r\n\r\n                        }\r\n                        progressBar.setVisibility(View.GONE);\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                        progressBar.setVisibility(View.GONE);\r\n                    }\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH + Constant.ORDER_DELETE+imageFileName , params, false);\r\n    }\r\n\r\n\r\n    private String getRealPathFromURI(Uri contentUri) {\r\n        String[] proj = {MediaStore.Images.Media.DATA};\r\n        CursorLoader loader = new CursorLoader(this, contentUri, proj, null, null, null);\r\n        Cursor cursor = loader.loadInBackground();\r\n        int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);\r\n        cursor.moveToFirst();\r\n        String result = cursor.getString(column_index);\r\n        cursor.close();\r\n        return result;\r\n    }\r\n\r\n    public Uri getImageUri(Context inContext, Bitmap inImage) {\r\n        ByteArrayOutputStream bytes = new ByteArrayOutputStream();\r\n        inImage.compress(Bitmap.CompressFormat.JPEG, 100, bytes);\r\n        String path = MediaStore.Images.Media.insertImage(inContext.getContentResolver(), inImage, \"Title\", null);\r\n        return Uri.parse(path);\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        //callApi_fillAdd(Constant.BASEPATH + Constant.GET_CHECKADDRESS );\r\n        callApidefaultAdd(Constant.BASEPATH+Constant.GET_USERDEFULTADD);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        super.onBackPressed();\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        if(item.getItemId() ==android.R.id.home){\r\n            onBackPressed();\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n\r\n    private void checkpermission()\r\n    {\r\n        if(ActivityCompat.checkSelfPermission(UploadMedicine.this, permissionsRequiGRAY[0]) != PackageManager.PERMISSION_GRANTED\r\n                || ActivityCompat.checkSelfPermission(UploadMedicine.this, permissionsRequiGRAY[0]) != PackageManager.PERMISSION_GRANTED\r\n                || ActivityCompat.checkSelfPermission(UploadMedicine.this, permissionsRequiGRAY[2]) != PackageManager.PERMISSION_GRANTED\r\n                || ActivityCompat.checkSelfPermission(UploadMedicine.this, permissionsRequiGRAY[3]) != PackageManager.PERMISSION_GRANTED\r\n                || ActivityCompat.checkSelfPermission(UploadMedicine.this, permissionsRequiGRAY[4]) != PackageManager.PERMISSION_GRANTED\r\n        )\r\n        {\r\n            if(ActivityCompat.shouldShowRequestPermissionRationale(UploadMedicine.this,permissionsRequiGRAY[0])\r\n                    || ActivityCompat.shouldShowRequestPermissionRationale(UploadMedicine.this,permissionsRequiGRAY[0])\r\n                    || ActivityCompat.shouldShowRequestPermissionRationale(UploadMedicine.this,permissionsRequiGRAY[2])\r\n                    || ActivityCompat.shouldShowRequestPermissionRationale(UploadMedicine.this,permissionsRequiGRAY[3])\r\n                    || ActivityCompat.shouldShowRequestPermissionRationale(UploadMedicine.this,permissionsRequiGRAY[4])\r\n            )\r\n            {\r\n                //Show Information about why you need the permission\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(UploadMedicine.this);\r\n                builder.setTitle(activity.getResources().getString(R.string.location_permission));\r\n                builder.setMessage(activity.getResources().getString(R.string.location_permission_message));\r\n                builder.setPositiveButton(\"Grant\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.cancel();\r\n                        ActivityCompat.requestPermissions(UploadMedicine.this,permissionsRequiGRAY,PERMISSION_CALLBACK_CONSTANT);\r\n                    }\r\n                });\r\n                builder.setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.cancel();\r\n                    }\r\n                });\r\n                builder.show();\r\n            }\r\n            else {\r\n                //just request the permission\r\n                ActivityCompat.requestPermissions(UploadMedicine.this,permissionsRequiGRAY,PERMISSION_CALLBACK_CONSTANT);\r\n            }\r\n\r\n\r\n            storeinfo.setBoolean(permissionsRequiGRAY[0],true);\r\n\r\n        } else {\r\n            //You already have the permission, just go ahead.\r\n            //proceedAfterPermission();\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private void showAlertView(final String imageFileName, final Button btn_del, final Button btn_pic, final ImageView user_pic, final Integer is_imgdel)\r\n    {\r\n        final androidx.appcompat.app.AlertDialog.Builder alertDialog = new androidx.appcompat.app.AlertDialog.Builder(UploadMedicine.this);\r\n        LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        final View dialogView = inflater.inflate(R.layout.msg_view_4, null);\r\n        alertDialog.setView(dialogView);\r\n        alertDialog.setCancelable(true);\r\n        final androidx.appcompat.app.AlertDialog dialog = alertDialog.create();\r\n\r\n        Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        TextView tvcancel, tvclose;\r\n\r\n        tvcancel = dialogView.findViewById(R.id.tvcancel);\r\n        tvclose = dialogView.findViewById(R.id.tvclose);\r\n\r\n        tvcancel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.dismiss();\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                ApiConfig.RequestToVolley_GET(new VolleyCallback() {\r\n                    @Override\r\n                    public void onSuccess(boolean result, String response) {\r\n                        System.out.println(\"=================*cancelorder- \" + response);\r\n                        if (result) {\r\n                            try {\r\n                                JSONObject jsonObject = new JSONObject(response);\r\n                                if(jsonObject.getString(Constant.SUCESS).equalsIgnoreCase(\"200\"))\r\n                                {\r\n                                    Toast.makeText(mContext, \"Order Image Deleted\", Toast.LENGTH_SHORT).show();\r\n                                    btn_del.setEnabled(false);\r\n                                    btn_del.setBackgroundColor(GRAY);\r\n\r\n\r\n                                    if(is_imgdel == 1)\r\n                                        is_img1=false;\r\n                                    else if(is_imgdel == 2)\r\n                                        is_img2=false;\r\n                                    else if(is_imgdel == 3)\r\n                                        is_img3=false;\r\n                                    else if(is_imgdel == 4)\r\n                                        is_img4=false;\r\n\r\n                                    if(arrayList.contains(imageFileName))\r\n                                    {\r\n                                        int pos = arrayList.indexOf(imageFileName);\r\n                                        arrayList.remove(pos);\r\n                                    }\r\n\r\n                                    showPic_1Image(btn_pic, btn_del ,user_pic, \"\",is_imgdel);\r\n\r\n                                }\r\n                                else{\r\n                                    Toast.makeText(mContext, \"Error has occur please try again.\", Toast.LENGTH_SHORT).show();\r\n\r\n                                }\r\n\r\n                            } catch (JSONException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                        }\r\n                    }\r\n                }, UploadMedicine.this, Constant.BASEPATH + Constant.ORDER_DELETE+imageFileName, params, false);\r\n            }\r\n        });\r\n\r\n        tvclose.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.dismiss();\r\n                //onBackPressed();\r\n            }\r\n        });\r\n        dialog.show();\r\n    }\r\n\r\n\r\n\r\n    public void callApi_fillAdd(String url)\r\n    {\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        params.put(\"userId\", session.getData(Session.KEY_id));\r\n        params.put(\"areaId\", session.getData(Constant.AREA_ID));\r\n\r\n        ApiConfig.RequestToVolley_POST(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        System.out.println(\"====>\" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        if(jsonObject.has(Constant.SUCESS))\r\n                        {\r\n                            if(jsonObject.getInt(Constant.SUCESS) == 200)\r\n                            {\r\n                                if(jsonObject.getBoolean(\"noAddress_flag\"))\r\n                                {\r\n                                    //no address save\r\n                                    is_address_save=false;\r\n                                }\r\n                                else{\r\n                                    //address is save\r\n                                    is_address_save=true;\r\n                                }\r\n                                if(jsonObject.getBoolean(\"defaultAddress_flag\"))\r\n                                {\r\n                                    // no default address\r\n                                    is_default_address_save=false;\r\n                                }\r\n                                else{\r\n                                    //default address save\r\n                                    is_default_address_save=true;\r\n                                }\r\n                            }\r\n                            else{\r\n                                is_address_save=false;\r\n                                is_default_address_save=false;\r\n                            }\r\n                        }\r\n\r\n                        callApidefaultAdd(Constant.BASEPATH+Constant.GET_USERDEFULTADD);\r\n\r\n                    } catch (JSONException e) {\r\n                        is_address_save=false;\r\n                        is_default_address_save=false;\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, url, params, true);\r\n\r\n    }\r\n\r\n\r\n\r\n    private void callApidefaultAdd(String url) {\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        params.put(\"userId\", session.getData(Session.KEY_id));\r\n        ApiConfig.RequestToVolley_POST(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        System.out.println(\"====res area=>\" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        if(jsonObject.has(Constant.SUCESS))\r\n                        {\r\n                            if (jsonObject.getInt(Constant.SUCESS) == 200)\r\n                            {\r\n                                //fill  Default address\r\n                                JSONObject jsonObject_data = jsonObject.getJSONObject(\"data\");\r\n                                if(jsonObject_data.length() > 0)\r\n                                {\r\n                                    //fill Default Address\r\n                                    JSONObject jsonObject_address = jsonObject_data.getJSONObject(\"address\");\r\n                                    imgedit.setVisibility(View.VISIBLE);\r\n\r\n                                    /*String name = session.getData(Session.KEY_FIRSTNAME) + \" \" +session.getData(Session.KEY_LASTNAME) + \"<br>\";\r\n                                    String add =  jsonObject_data.getString(\"complete_address\")+ \"<br>\"\r\n                                                  + session.getData(Constant.AREA_N)\r\n                                                  + \", \" + session.getData(Constant.CITY_N)\r\n                                                  + \"<br><b>\" + getString(R.string.mobile_) + session.getData(Session.KEY_mobile);\r\n\r\n\r\n                                    String complete_add =  name +  add;*/\r\n\r\n                                    String  send_address_param = \"Address:\"+\" \"+jsonObject_data.getString(\"complete_address\")+\"<br>\"+\r\n                                            \"State:\"+\" \"+session.getData(Constant.STATE_N)+\"<br>\"+\r\n                                            \"City:\"+\" \"+session.getData(Constant.CITY_N)+\"<br>\"+\r\n                                            \"Area:\"+\" \"+session.getData(Constant.AREA_N)+\"<br>\"+\r\n                                            \"Mobile:\"+\" \" + session.getData(Session.KEY_mobile)+\"<br>\"+\r\n                                            \"Deliver to :\"+\" \"+session.getData(Session.KEY_FIRSTNAME) + \" \" +session.getData(Session.KEY_LASTNAME);\r\n\r\n                                   txtaddress.setText(Html.fromHtml(send_address_param));\r\n\r\n                                    int address_type = jsonObject_address.getInt(\"address_type\");\r\n                                    if(address_type == 1)\r\n                                    {\r\n                                        type1.setText(\"Home Default Address\");\r\n                                    }\r\n                                    else if(address_type == 2)\r\n                                    {\r\n                                        type1.setText(\"Work Default Address\");\r\n                                    }\r\n                                    else if(address_type == 3)\r\n                                    {\r\n                                        type1.setText(\"Other Default Address\");\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n                    } catch (JSONException e) {\r\n                        imgedit.setVisibility(View.GONE);\r\n                        Toast.makeText(activity, Constant.NODEFAULT_ADD, Toast.LENGTH_SHORT).show();\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, url, params, false);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/ifresh/customer/activity/UploadMedicine.java	(revision ce16e6637b08175bfb1d14ad608a40eebd8108fe)
+++ app/src/main/java/com/ifresh/customer/activity/UploadMedicine.java	(date 1609130587746)
@@ -816,11 +816,6 @@
         params.put("order_type", "2");
 
 
-
-
-
-
-
         ApiConfig.RequestToVolley_POST(new VolleyCallback()
         {
             @Override
@@ -862,17 +857,19 @@
                             handler.postDelayed(new Runnable() {
                                 @Override
                                 public void run() {
-                                    // Do something after 5s = 5000ms
+                                    // Do something after 2s = 2000ms
+                                    progressBar.setVisibility(View.GONE);
                                     startActivity(new Intent(UploadMedicine.this, MedicalOrderPlacedActivity.class));
                                     finish();
                                 }
-                            }, 1000);
+                            }, 2000);
                         }
                         else{
                              Toast.makeText(mContext, "Error has occurred please try again later", Toast.LENGTH_SHORT).show();
-                          }
-
-                        progressBar.setVisibility(View.GONE);
+                             progressBar.setVisibility(View.GONE);
+                          }
+
+
                     } catch (Exception e) {
                         e.printStackTrace();
                         Toast.makeText(mContext, "Error Has Occur Please Try Again Later", Toast.LENGTH_SHORT).show();
@@ -881,7 +878,7 @@
                 }
             }
         }, activity, Constant.BASEPATH + Constant.PLACING_IMAGEORDER , params, false);
-    }
+   }
 
 
     private void call_cancel_order_api(final String imageFileName, final Button btn_del, final Button btn_pic, final ImageView user_pic, final Integer is_imgdel)
@@ -958,7 +955,6 @@
     @Override
     protected void onResume() {
         super.onResume();
-        //callApi_fillAdd(Constant.BASEPATH + Constant.GET_CHECKADDRESS );
         callApidefaultAdd(Constant.BASEPATH+Constant.GET_USERDEFULTADD);
 
     }
Index: app/src/main/java/com/ifresh/customer/adapter/ProductListAdapter_2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ifresh.customer.adapter;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.text.Html;\r\nimport android.text.SpannableString;\r\nimport android.text.Spanned;\r\nimport android.text.TextUtils;\r\nimport android.text.style.StrikethroughSpan;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.BaseAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.widget.AppCompatSpinner;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.android.volley.toolbox.NetworkImageView;\r\nimport com.ifresh.customer.R;\r\nimport com.ifresh.customer.activity.ProductDetailActivity_2;\r\nimport com.ifresh.customer.activity.ProductListActivity_2;\r\nimport com.ifresh.customer.activity.SetDefaultAddress_2;\r\nimport com.ifresh.customer.activity.UploadMedicine;\r\nimport com.ifresh.customer.helper.ApiConfig;\r\nimport com.ifresh.customer.helper.Constant;\r\nimport com.ifresh.customer.helper.DatabaseHelper;\r\nimport com.ifresh.customer.helper.Session;\r\nimport com.ifresh.customer.helper.VolleyCallback;\r\nimport com.ifresh.customer.kotlin.FillAddress;\r\nimport com.ifresh.customer.kotlin.SignInActivity_K;\r\nimport com.ifresh.customer.model.ModelProduct;\r\nimport com.ifresh.customer.model.ModelProductVariation;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n\r\n\r\npublic class ProductListAdapter_2 extends RecyclerView.Adapter<RecyclerView.ViewHolder>\r\n{\r\n    //private static final int FOOTER_VIEW = 1;\r\n    private static final int HEADER_VIEW = 1;\r\n    private Context ctx;\r\n    private final ArrayList<ModelProduct> arrayList_vertical;\r\n    DatabaseHelper databaseHelper;\r\n    Activity activity;\r\n    Session session;\r\n    // for load more\r\n    public final int VIEW_TYPE_ITEM = 0;\r\n    public final int VIEW_TYPE_LOADING = 1;\r\n    // The minimum amount of items to have below your current scroll position\r\n    // before loading more.\r\n    public boolean isLoading;\r\n\r\n    public int resource;\r\n    SpannableString spannableString;\r\n\r\n    public  Boolean is_deafultAddExist=false;\r\n    public  Boolean is_address_save=false;\r\n    public  Boolean is_default_address_save=false;\r\n\r\n\r\n    public void add(int position, ModelProduct item) {\r\n        arrayList_vertical.add(position, item);\r\n        notifyItemInserted(position);\r\n    }\r\n\r\n\r\n    public ProductListAdapter_2(Context ctx, ArrayList<ModelProduct> arrayList_vertical, Activity activity, Session session) {\r\n        this.ctx = ctx;\r\n        this.arrayList_vertical = arrayList_vertical;\r\n        databaseHelper = new DatabaseHelper(ctx);\r\n        this.activity = activity;\r\n        this.session = session;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType)\r\n    {\r\n        View view;\r\n        /*if (viewType == HEADER_VIEW)\r\n        {\r\n            view = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_footer, parent, false);\r\n            HeaderViewHolder vh = new HeaderViewHolder(view);\r\n            return vh;\r\n        }*/\r\n\r\n        /*else if (viewType == FOOTER_VIEW)\r\n        {\r\n            view = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_footer, parent, false);\r\n            FooterViewHolder vh = new FooterViewHolder(view);\r\n            return vh;\r\n        }*/\r\n\r\n        view = LayoutInflater.from(parent.getContext()).inflate(R.layout.lyt_item_list_12, parent, false);\r\n        ProductViewHolder vh = new ProductViewHolder(view);\r\n        return vh;\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, final int position) {\r\n        try {\r\n            if (holder instanceof ProductViewHolder)\r\n            {\r\n                /*if(ProductListActivity_2.is_footer_show != null)\r\n                {\r\n                    if(newposition > 0 && ProductListActivity_2.is_footer_show)\r\n                    {\r\n                        //Header is Added\r\n                        newposition = newposition-1;\r\n                    }\r\n                }*/\r\n                final ProductViewHolder vh = (ProductViewHolder) holder;\r\n                final ModelProduct product = arrayList_vertical.get(position);\r\n                final ArrayList<ModelProductVariation> product_variations = product.getPriceVariations();\r\n                product.setGlobalStock(Double.parseDouble(product_variations.get(0).getStock()));\r\n\r\n                if (product_variations.size() == 1)\r\n                {\r\n                    vh.imgarrow.setVisibility(View.GONE);\r\n                }\r\n\r\n                /*if (!product.getIndicator().equals(\"0\"))\r\n                {\r\n                    holder.imgIndicator.setVisibility(View.VISIBLE);\r\n                    if (product.getIndicator().equals(\"1\"))\r\n                        holder.imgIndicator.setImageResource(R.drawable.veg_icon);\r\n                    else if (product.getIndicator().equals(\"2\"))\r\n                        holder.imgIndicator.setImageResource(R.drawable.non_veg_icon);\r\n                }*/\r\n\r\n                String cap_title = product.getName().substring(0, 1).toUpperCase() + product.getName().substring(1);\r\n                vh.productName.setText(Html.fromHtml(\"<font color='#000000'><b>\" + cap_title + \"</b></font> - <small>\" +  \"</small>\"));\r\n                vh.imgThumb.setDefaultImageResId(R.drawable.placeholder);\r\n                vh.imgThumb.setErrorImageResId(R.drawable.placeholder);\r\n                vh.imgThumb.setImageUrl(product.getProduct_img(), Constant.imageLoader);\r\n\r\n                CustomAdapter_2 customAdapter = new CustomAdapter_2(ctx, product_variations, vh, product);\r\n                vh.spinner.setAdapter(customAdapter);\r\n\r\n                vh.imgThumb.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Constant.SELECTEDPRODUCT_POS = position + \"=\" + product.getId();\r\n                        activity.startActivity(new Intent(activity, ProductDetailActivity_2.class).\r\n                                putExtra(\"vpos\", product_variations.size() == 1 ? 0 :\r\n                                        vh.spinner.getSelectedItemPosition()).putExtra(\"model\", product));\r\n                    }\r\n                });\r\n\r\n\r\n                vh.imgarrow.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    vh.spinner.performClick();\r\n                }\r\n            });\r\n\r\n\r\n                vh.productName.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Constant.SELECTEDPRODUCT_POS = position + \"=\" + product.getId();\r\n                        activity.startActivity(new Intent(activity, ProductDetailActivity_2.class).\r\n                                putExtra(\"vpos\", product_variations.size() == 1 ? 0 :\r\n                                        vh.spinner.getSelectedItemPosition()).putExtra(\"model\", product));\r\n                    }\r\n                });\r\n\r\n                ApiConfig.SetFavOnImg(databaseHelper, vh.imgFav, product_variations.get(0).getProductId(), product_variations.get(0).getFrproductId(), product_variations.get(0).getId());\r\n\r\n                vh.imgFav.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                       // Log.d(\"Prodid\", product_variations.get(0).getProductId());\r\n                       // Log.d(\"getFranchiseId\", product_variations.get(0).getFrproductId());\r\n                       // Log.d(\"getFrproductId\", product_variations.get(0).getId());\r\n                        ApiConfig.AddRemoveFav(databaseHelper, vh.imgFav,product_variations.get(0).getProductId(), product_variations.get(0).getFrproductId(), product_variations.get(0).getId());\r\n                    }\r\n                });\r\n\r\n                SetSelectedData(product, vh, product_variations.get(0));\r\n\r\n            }\r\n\r\n            /*else if (holder instanceof HeaderViewHolder)\r\n            {\r\n                HeaderViewHolder vh = (HeaderViewHolder) holder;\r\n            }*/\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    @Override\r\n    public int getItemCount() {\r\n        // make one\r\n        /*if(ProductListActivity_2.is_footer_show != null)\r\n        {\r\n            if(ProductListActivity_2.is_footer_show)\r\n                return arrayList_vertical.size()+1;\r\n            else\r\n                return arrayList_vertical.size();\r\n        }\r\n        else{\r\n            return arrayList_vertical.size();\r\n        }*/\r\n\r\n        return arrayList_vertical.size();\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemViewType(int position)\r\n    {\r\n        /*if(ProductListActivity_2.is_footer_show != null)\r\n        {\r\n            if (position == 0 && ProductListActivity_2.is_footer_show)\r\n                return HEADER_VIEW;\r\n\r\n        }*/\r\n        return super.getItemViewType(position);\r\n    }\r\n\r\n    public static class ProductViewHolder extends RecyclerView.ViewHolder\r\n    {\r\n        private TextView productName, productPrice ,txtqty, Measurement, showDiscount, originalPrice, txtstatus;\r\n        private NetworkImageView imgThumb;\r\n        private ImageView imgFav, imgIndicator;\r\n        private TextView imgarrow;\r\n        private CardView lytmain;\r\n        private AppCompatSpinner spinner;\r\n        private Button imgAdd, imgMinus;\r\n        private LinearLayout qtyLyt;\r\n\r\n        public ProductViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            productName = itemView.findViewById(R.id.productName);\r\n            productPrice = itemView.findViewById(R.id.txtprice);\r\n            showDiscount = itemView.findViewById(R.id.showDiscount);\r\n            originalPrice = itemView.findViewById(R.id.txtoriginalprice);\r\n            Measurement = itemView.findViewById(R.id.txtmeasurement);\r\n            txtstatus = itemView.findViewById(R.id.txtstatus);\r\n            imgThumb = itemView.findViewById(R.id.imgThumb);\r\n            imgIndicator = itemView.findViewById(R.id.imgIndicator);\r\n            imgarrow = itemView.findViewById(R.id.imgarrow);\r\n            imgAdd = itemView.findViewById(R.id.btnaddqty);\r\n            imgMinus = itemView.findViewById(R.id.btnminusqty);\r\n            txtqty = itemView.findViewById(R.id.txtqty);\r\n            qtyLyt = itemView.findViewById(R.id.qtyLyt);\r\n            imgFav = itemView.findViewById(R.id.imgFav);\r\n            lytmain = itemView.findViewById(R.id.lytmain);\r\n            spinner = itemView.findViewById(R.id.spinner);\r\n        }\r\n    }\r\n\r\n\r\n    // Define a ViewHolder for Header view\r\n    /*public class HeaderViewHolder extends RecyclerView.ViewHolder\r\n    {\r\n        public HeaderViewHolder(View itemView) {\r\n            super(itemView);\r\n            itemView.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    // Do whatever you want on clicking the item\r\n                    call_chekuser();\r\n                }\r\n            });\r\n        }\r\n    }*/\r\n\r\n    /*private void call_chekuser() {\r\n        if (session.isUserLoggedIn())\r\n        {\r\n            callApi_fillAdd();\r\n        }\r\n        else{\r\n            Toast.makeText(activity, \"Please Login or Register\", Toast.LENGTH_SHORT).show();\r\n            Intent intent  = new Intent(activity, SignInActivity_K.class);\r\n            activity.startActivity(intent);\r\n        }\r\n    }\r\n\r\n\r\n    public void call_view()\r\n    {\r\n        Intent intent;\r\n        *//*if(is_address_save)\r\n        {\r\n            //address save\r\n            if(is_deafultAddExist)\r\n            {\r\n                session.setBoolean(\"is_upload\", true);\r\n                intent = new Intent(activity, UploadMedicine.class);\r\n            }\r\n            else{\r\n                //default address not exist\r\n                intent = new Intent(activity, SetDefaultAddress_2.class);\r\n            }\r\n        }\r\n        else{\r\n            //address not save\r\n            session.setBoolean(\"is_upload\", true);\r\n            intent = new Intent(activity, FillAddress.class);\r\n            intent.putExtra(\"userId\", session.getData(session.KEY_id));\r\n        }*//*\r\n        if(is_deafultAddExist)\r\n        {\r\n            session.setBoolean(\"is_upload\", true);\r\n            intent = new Intent(activity, UploadMedicine.class);\r\n        }\r\n        else{\r\n            //default address not exist\r\n            intent = new Intent(activity, SetDefaultAddress_2.class);\r\n        }\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n        activity.startActivity(intent);\r\n    }\r\n\r\n\r\n\r\n    public void callApi_fillAdd()\r\n    {\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        params.put(\"userId\", session.getData(Session.KEY_id));\r\n        params.put(\"areaId\", session.getData(Constant.AREA_ID));\r\n\r\n        ApiConfig.RequestToVolley_POST(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        System.out.println(\"====>\" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        if(jsonObject.has(Constant.SUCESS))\r\n                        {\r\n                            if(jsonObject.getInt(Constant.SUCESS) == 200)\r\n                            {\r\n                                if(jsonObject.getBoolean(\"noAddress_flag\"))\r\n                                {\r\n                                    //no address save\r\n                                    is_address_save=false;\r\n                                }\r\n                                else{\r\n                                    //address is save\r\n                                    is_address_save=true;\r\n                                }\r\n                                if(jsonObject.getBoolean(\"defaultAddress_flag\"))\r\n                                {\r\n                                    // no default address\r\n                                    is_default_address_save=false;\r\n                                }\r\n                                else{\r\n                                    //default address save\r\n                                    is_default_address_save=true;\r\n                                }\r\n\r\n                            }\r\n                            else{\r\n                                is_address_save=false;\r\n                                is_default_address_save=false;\r\n                            }\r\n\r\n                            callApidefaultAdd();\r\n                        }\r\n\r\n                    } catch (JSONException e) {\r\n                        is_address_save=false;\r\n                        is_default_address_save=false;\r\n                        callApidefaultAdd();\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH + Constant.GET_CHECKADDRESS, params, true);\r\n\r\n    }\r\n\r\n\r\n    public Boolean callApidefaultAdd()\r\n    {\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        params.put(\"userId\", session.getData(Session.KEY_id));\r\n        ApiConfig.RequestToVolley_POST(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        System.out.println(\"====res area=>\" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        if(jsonObject.has(Constant.SUCESS))\r\n                        {\r\n                            if (jsonObject.getInt(Constant.SUCESS) == 200)\r\n                            {\r\n                                JSONObject data_obj = jsonObject.getJSONObject(\"data\");\r\n                                JSONObject address_obj = data_obj.getJSONObject(\"address\");\r\n                                Boolean default_address = address_obj.getBoolean(\"default_address\");\r\n\r\n                                if(default_address)\r\n                                {\r\n                                    Log.d(\"val\", \"true\");\r\n                                    is_deafultAddExist = true;\r\n                                }\r\n                                else{\r\n                                    Log.d(\"val\", \"false\");\r\n                                    is_deafultAddExist = false;\r\n                                }\r\n                            }\r\n                            else{\r\n                                is_deafultAddExist = false;\r\n                                Toast.makeText(activity, Constant.NODEFAULT_ADD, Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }\r\n                        else{\r\n                            is_deafultAddExist = false;\r\n                            Toast.makeText(activity, Constant.NODEFAULT_ADD, Toast.LENGTH_SHORT).show();\r\n\r\n                        }\r\n                        call_view();\r\n\r\n                    } catch (JSONException e) {\r\n                        is_deafultAddExist = false;\r\n                        Toast.makeText(activity, Constant.NODEFAULT_ADD, Toast.LENGTH_SHORT).show();\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH+Constant.GET_USERDEFULTADD, params, false);\r\n        return is_deafultAddExist;\r\n    }\r\n*/\r\n\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n        // Define elements of a row here\r\n        public ViewHolder(View itemView) {\r\n            super(itemView);\r\n            // Find view by ID and initialize here\r\n        }\r\n\r\n        public void bindView(int position) {\r\n            // bindView() method to implement actions\r\n        }\r\n    }\r\n\r\n    public class CustomAdapter_2 extends BaseAdapter\r\n    {\r\n        Context context;\r\n        ArrayList<ModelProductVariation> extra;\r\n        LayoutInflater inflter;\r\n        ProductViewHolder holder;\r\n        ModelProduct product;\r\n\r\n        public CustomAdapter_2(Context context, ArrayList<ModelProductVariation> extra, ProductViewHolder holder, ModelProduct product) {\r\n            this.context = context;\r\n            this.extra = extra;\r\n            this.holder = holder;\r\n            this.product = product;\r\n            inflter = (LayoutInflater.from(ctx));\r\n        }\r\n\r\n        @Override\r\n        public int getCount() {\r\n            return extra.size();\r\n        }\r\n\r\n        @Override\r\n        public Object getItem(int position) {\r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        public long getItemId(int position)\r\n        {\r\n            return 0;\r\n        }\r\n\r\n        @SuppressLint(\"ViewHolder\")\r\n        @Override\r\n        public View getView(int i, View view, ViewGroup viewGroup) {\r\n            view = inflter.inflate(R.layout.lyt_spinner_item, null);\r\n\r\n            TextView measurement = view.findViewById(R.id.txtmeasurement);\r\n            TextView price = view.findViewById(R.id.txtprice);\r\n            TextView txttitle = view.findViewById(R.id.txttitle);\r\n\r\n            final ModelProductVariation productVariation = extra.get(i);\r\n            measurement.setText(productVariation.getMeasurement_unit_name() +\" \"+ productVariation.getMeasurement() );\r\n\r\n            Log.d(\"price\", productVariation.getPrice());\r\n            Log.d(\"mesurment\", productVariation.getMeasurement_unit_name() +\" \"+ productVariation.getMeasurement());\r\n\r\n\r\n            price.setText(ctx.getResources().getString(R.string.rupee) + productVariation.getPrice());\r\n\r\n\r\n            if (i == 0) {\r\n                txttitle.setVisibility(View.VISIBLE);\r\n            } else {\r\n                txttitle.setVisibility(View.GONE);\r\n            }\r\n\r\n\r\n            if (productVariation.getServe_for().equalsIgnoreCase(Constant.SOLDOUT_TEXT))\r\n            {\r\n                measurement.setTextColor(context.getResources().getColor(R.color.red));\r\n                price.setTextColor(context.getResources().getColor(R.color.red));\r\n            } else {\r\n                measurement.setTextColor(context.getResources().getColor(R.color.black));\r\n                price.setTextColor(context.getResources().getColor(R.color.black));\r\n            }\r\n\r\n            holder.spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n                @Override\r\n                public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                    ModelProductVariation productVariation= extra.get(i);\r\n                    SetSelectedData(product, holder, productVariation);\r\n                }\r\n\r\n                @Override\r\n                public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n                }\r\n            });\r\n\r\n            return view;\r\n\r\n\r\n        }\r\n    }\r\n\r\n    public void SetSelectedData(final ModelProduct product, final ProductViewHolder holder, final ModelProductVariation extra)\r\n    {\r\n        holder.Measurement.setText(extra.getMeasurement_unit_name()+\" \"+extra.getMeasurement());\r\n        holder.productPrice.setText(ctx.getResources().getString(R.string.rupee) + extra.getPrice());\r\n        holder.txtstatus.setText(extra.getServe_for());\r\n\r\n        if (extra.getDiscounted_price().equals(\"0\") || extra.getDiscounted_price().equals(\"\"))\r\n        {\r\n            holder.originalPrice.setText(\"\");\r\n            holder.showDiscount.setText(\"\");\r\n            holder.originalPrice.setVisibility(View.GONE);\r\n            holder.showDiscount.setVisibility(View.GONE);\r\n\r\n        }\r\n        else{\r\n            spannableString = new SpannableString(ctx.getResources().getString(R.string.mrp) + ctx.getResources().getString(R.string.rupee) + extra.getPrice());\r\n            spannableString.setSpan(new StrikethroughSpan(), 0, spannableString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\r\n            holder.originalPrice.setText(spannableString);\r\n            double diff = Double.parseDouble(extra.getPrice()) - Double.parseDouble(extra.getPrice());\r\n            holder.showDiscount.setText(ctx.getResources().getString(R.string.you_save) + ctx.getResources().getString(R.string.rupee) + diff + extra.getDiscountpercent());\r\n\r\n            holder.showDiscount.setVisibility(View.VISIBLE);\r\n            holder.originalPrice.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n        if (extra.getServe_for().equalsIgnoreCase(Constant.SOLDOUT_TEXT))\r\n        {\r\n            // product is sold out or not available\r\n            holder.txtstatus.setVisibility(View.VISIBLE);\r\n            holder.txtstatus.setTextColor(Color.RED);\r\n            holder.qtyLyt.setVisibility(View.GONE);\r\n        } else {\r\n            // product is available for sale\r\n            holder.txtstatus.setVisibility(View.GONE);\r\n            holder.qtyLyt.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n        holder.imgAdd.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (extra.getType().equals(\"loose\"))\r\n                {\r\n                    String measurement = extra.getMeasurement_unit_name();\r\n                    if (measurement.equals(\"kg\") || measurement.equals(\"ltr\") || measurement.equals(\"gm\") || measurement.equals(\"ml\")) {\r\n                        double totalKg;\r\n                        if (measurement.equals(\"kg\") || measurement.equals(\"ltr\"))\r\n                            totalKg = (Integer.parseInt(extra.getMeasurement()) * 1000);\r\n                        else\r\n                            totalKg = (Integer.parseInt(extra.getMeasurement()));\r\n                        double cartKg = ((databaseHelper.getTotalKG(product.getId()) + totalKg) / 1000);\r\n\r\n                        if (cartKg <= product.getGlobalStock()) {\r\n                            holder.txtqty.setText(databaseHelper.AddUpdateOrder(extra.getId(), product.getId(), extra.getProductId(),extra.getFranchiseId(), extra.getFrproductId(), extra.getId(),false, activity, false, Double.parseDouble(extra.getPrice()), extra.getMeasurement()+ \"@\" + extra.getMeasurement_unit_name() + \"==\" + product.getName() + \"==\" + extra.getPrice(),product.getProduct_img()).split(\"=\")[0]);\r\n                        } else {\r\n                            Toast.makeText(activity, activity.getResources().getString(R.string.kg_limit), Toast.LENGTH_LONG).show();\r\n                        }\r\n                    } else {\r\n                        RegularCartAdd(product, holder, extra);\r\n                    }\r\n\r\n                } else {\r\n                    RegularCartAdd(product, holder, extra);\r\n                }\r\n                activity.invalidateOptionsMenu();\r\n            }\r\n        });\r\n\r\n        holder.imgMinus.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                holder.txtqty.setText(databaseHelper.AddUpdateOrder(extra.getId(), extra.getProductId(), extra.getProductId(), extra.getFranchiseId(), extra.getFrproductId(),extra.getId(),false, activity, false, Double.parseDouble(extra.getPrice()), extra.getMeasurement() + \"@\" + extra.getMeasurement_unit_name() + \"==\" + product.getName() + \"==\" + extra.getPrice(), product.getProduct_img()).split(\"=\")[0]);\r\n                activity.invalidateOptionsMenu();\r\n            }\r\n        });\r\n\r\n        holder.txtqty.setText(databaseHelper.CheckOrderExists(extra.getId(), product.getId()));\r\n    }\r\n\r\n    public void RegularCartAdd(final ModelProduct product, final ProductViewHolder holder, final ModelProductVariation pricevariation)\r\n    {\r\n        // Log.d(\"productvar\",\"\"+pricevariation.getMeasurement()+ \"@\" + pricevariation.getMeasurement_unit_name() + \"==\" + product.getName() + \"==\" + pricevariation.getPrice() );\r\n        if (Double.parseDouble(databaseHelper.CheckOrderExists(pricevariation.getId(), pricevariation.getProductId())) < Double.parseDouble(String.valueOf(pricevariation.getStock())))\r\n            holder.txtqty.setText(databaseHelper.AddUpdateOrder(pricevariation.getId(), pricevariation.getProductId(), pricevariation.getProductId(),pricevariation.getFranchiseId(), pricevariation.getFrproductId(), pricevariation.getCatId(),true,activity, false, Double.parseDouble(pricevariation.getPrice()), pricevariation.getMeasurement()+ \"@\" + pricevariation.getMeasurement_unit_name() + \"==\" + product.getName() + \"==\" + pricevariation.getPrice(),product.getProduct_img()).split(\"=\")[0]);\r\n        else\r\n            Toast.makeText(ctx, ctx.getResources().getString(R.string.stock_limit), Toast.LENGTH_SHORT).show();\r\n    }\r\n    public void setLoaded() {\r\n        isLoading = false;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/ifresh/customer/adapter/ProductListAdapter_2.java	(revision ce16e6637b08175bfb1d14ad608a40eebd8108fe)
+++ app/src/main/java/com/ifresh/customer/adapter/ProductListAdapter_2.java	(date 1609130587746)
@@ -628,7 +628,7 @@
 
     public void RegularCartAdd(final ModelProduct product, final ProductViewHolder holder, final ModelProductVariation pricevariation)
     {
-        // Log.d("productvar",""+pricevariation.getMeasurement()+ "@" + pricevariation.getMeasurement_unit_name() + "==" + product.getName() + "==" + pricevariation.getPrice() );
+         Log.d("productvar",""+ pricevariation.getMeasurement()+ "@" + pricevariation.getMeasurement_unit_name() + "==" + product.getName() + "==" + pricevariation.getPrice() );
         if (Double.parseDouble(databaseHelper.CheckOrderExists(pricevariation.getId(), pricevariation.getProductId())) < Double.parseDouble(String.valueOf(pricevariation.getStock())))
             holder.txtqty.setText(databaseHelper.AddUpdateOrder(pricevariation.getId(), pricevariation.getProductId(), pricevariation.getProductId(),pricevariation.getFranchiseId(), pricevariation.getFrproductId(), pricevariation.getCatId(),true,activity, false, Double.parseDouble(pricevariation.getPrice()), pricevariation.getMeasurement()+ "@" + pricevariation.getMeasurement_unit_name() + "==" + product.getName() + "==" + pricevariation.getPrice(),product.getProduct_img()).split("=")[0]);
         else
Index: app/src/main/java/com/ifresh/customer/helper/Constant.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ifresh.customer.helper;\r\n\r\nimport com.android.volley.toolbox.ImageLoader;\r\n\r\n\r\npublic class Constant {\r\n   // public static String BASEPATH = \"http://ec2-65-0-127-124.ap-south-1.compute.amazonaws.com:3000/api/\";\r\n   // public static String IMAGEBASEPATH= \"http://ec2-65-0-127-124.ap-south-1.compute.amazonaws.com:3000/uploads/\";\r\n\r\n\r\n    public static String BASEPATH = \"http://192.168.1.7:3000/api/\";\r\n    public static String IMAGEBASEPATH= \"http://192.168.1.7:3000/uploads/\";\r\n\r\n    public static String BANNERIMAGEPATH = IMAGEBASEPATH+\"banner_img/\";\r\n    public static String CATEGORYIMAGEPATH = IMAGEBASEPATH+\"catagory_img/\";\r\n    public static String PRODUCTIMAGEPATH = IMAGEBASEPATH+\"product_img/\";\r\n    public static String FIRMIMAGEPATH = IMAGEBASEPATH+\"firm_img/\";\r\n    public static String SETTINGIMAGEPATH = IMAGEBASEPATH+\"setting_img/\";\r\n    public static String USERIMAGEPATH = IMAGEBASEPATH+\"user_img/\";\r\n    public static String OFFER_IMAGE = IMAGEBASEPATH + \"offer_banners/\";\r\n    public static String UPLOAD_IMAGE_SHOW = IMAGEBASEPATH + \"user_order/\";\r\n\r\n    public static String ALL_CATEGORYIMAGEPATH = IMAGEBASEPATH + \"all_catagory/\";\r\n    public static String CHECKADDRESS = \"address/checkaddress\";\r\n\r\n    public static String SECTIONPRODUCT =  \"franchise/getfranchiseproducts/\";\r\n    public static String GET_WALLET_BAL_URL = \"walletlog/gethistory/\";\r\n    public static String GET_FRIEND_URL = \"user/getmyfriends/\";\r\n\r\n    public static String UPLOAD_IMAGE = \"order/uploadorderimg\";\r\n    public static String PLACING_IMAGEORDER = \"order/palceimgorder\";\r\n    public static String ORDER_DELETE = \"order/deleteorderimg/\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n    public static String BANNERIMAGE = \"franchise/getfrbanner/\";\r\n    public static String GET_COUNTRY =  \"country/index/\";\r\n    public static String GET_STATE =  \"state/getstatebycid/\";\r\n    public static String GET_CITY =  \"city/getcitybystateid/\";\r\n    public static String GET_AREA =  \"area/index/\";\r\n    public static String GET_SUBAREA = \"subarea/index/\";\r\n    public static String LOGIN =  \"user/login\";\r\n    public static String GUEST =  \"user/getguest\";\r\n    public static String CHANGENO =  \"user/changeno\";\r\n    public static String SAVE_DELIVERYADDRESS =  \"address/save\";\r\n\r\n    public static String SETTINGS_PAGE =  \"settings/index\";\r\n    public static String CHANGEPASSWORD =  \"changepassword\";\r\n    public static String FORGETPASSWORD =  \"forgetpassword\";\r\n    public static String EDITPROFILE =  \"/user/edit\";\r\n    public static String VARIFYOTP = \"user/varifyOtp\";\r\n    public static String GETCATEGORY =  \"franchise/getfrcats/\";\r\n    public static String GETFRENCHISE = \"franchise/getfruser/\";\r\n    public static String ADDRESSSAVE = \"address/save\";\r\n    public static String GET_DEFULTADD = \"address/edit/\";\r\n    public static String SET_DEFULTADD=\"address/default/\";\r\n    public static String SET_DELETEADD=\"address/delete\";\r\n    public static String GET_USERDEFULTADD = \"address/wholeaddress\";\r\n    public static String GET_PRODUCTLIST = \"franchise/getsubcatsandproductbycat/\";\r\n    public static String GET_WALLETBAL = \"user/getwalletbalance/\";\r\n    public static String GET_ORDERSEND = \"order/placeorder\";\r\n    public static String GET_TRACKORDER = \"order/trackingorder\";\r\n    public static String GET_ORDERCANCEL = \"order/updatestatus\";\r\n    public static String GET_SEARCHPRODUCT = \"search/product\";\r\n    public static String GET_CMSPAGE = \"settings/cms/\";\r\n    public static String GET_ORDERPROCESS=\"orderprocess/detail\";\r\n    public static String GET_GETPRODUCTBYID =\"franchise/getincartproductdetail\";\r\n    public static String GET_CONFIGSETTING =  \"settings/getconfigs\";\r\n    public static String GET_OFFER = \"offer/index/\";\r\n    public static String GET_CHECKADDRESS =\"address/checkaddress\";\r\n    public static String GET_OFFERPRODUCT=\"list/offerChild/\";\r\n\r\n    public static String GET_NOTIFICATION=\"notify/getnotification/\";\r\n\r\n\r\n    public static String SUCESS = \"sucess\";\r\n\r\n\r\n\r\n\r\n    //public static String MAINBASEUrl = \"http://ifresh.justoprint.com/admin/\";\r\n    public static String MAINBASEUrl = \"http://ifresh.co.in/admin/\";\r\n    //public static String MAINBASEUrl = \"http://13.233.244.40/admin/\";\r\n    public static String BaseUrl = MAINBASEUrl + \"api-firebase/\";\r\n\r\n    public static ImageLoader imageLoader = AppController.getInstance().getImageLoader();\r\n    public static String FAQ_URL = MAINBASEUrl + \"pages_web/faq.php\";\r\n    public static String SETTINGHOME = BaseUrl + \"settinghome.php\";\r\n    public static String GETUSERINFO = BaseUrl + \"userprofile.php\";\r\n\r\n\r\n    public static String SliderUrl = BaseUrl + \"slider-images.php\";\r\n    public static String CategoryUrl = BaseUrl + \"get-categories.php\";\r\n    public static String Get_RazorPay_OrderId = BaseUrl + \"create-razorpay-order.php\";\r\n    public static String SubcategoryUrl = BaseUrl + \"get-subcategories-by-category-id.php\";\r\n    public static String FeaturedProductUrl = BaseUrl + \"sections.php\";\r\n    public static String GET_SECTION_URL = BaseUrl + \"sections.php\";\r\n\r\n\r\n    public static String RegisterUrl = BaseUrl + \"user-registration.php\";\r\n    public static String PAPAL_URL = MAINBASEUrl + \"paypal/create-payment.php\";\r\n    public static String LoginUrl = BaseUrl + \"login.php\";\r\n    public static String OFFER_URL = BaseUrl + \"offer-images.php\";\r\n    public static String PRODUCT_SEARCH_URL = BaseUrl + \"products-search.php\";\r\n    public static String SETTING_URL = BaseUrl + \"settings.php\";\r\n    public static String GET_PRODUCT_BY_SUB_CATE = BaseUrl + \"get-products-by-subcategory-id.php\";\r\n    public static String GET_PRODUCT_DETAIL_URL = BaseUrl + \"get-product-by-id.php\";\r\n    public static String CITY_URL = BaseUrl + \"get-cities.php\";\r\n    public static String GET_AREA_BY_CITY = BaseUrl + \"get-areas-by-city-id.php\";\r\n    public static String ORDERPROCESS_URL = BaseUrl + \"order-process.php\";\r\n    public static String USER_DATA_URL = BaseUrl + \"get-user-data.php\";\r\n\r\n    public static String PROMO_CODE_CHECK_URL = BaseUrl + \"validate-promo-code.php\";\r\n    public static String VALIDATE_PROMO_CODE = \"validate_promo_code\";\r\n    public static String DISCOUNTED_AMOUNT = \"discounted_amount\";\r\n    public static String REGISTER_DEVICE = \"register-device\";\r\n    public static String AccessKey = \"accesskey\";\r\n    public static String AccessKeyVal = \"90336\";\r\n    public static String GetVal = \"1\";\r\n\r\n    public static String AUTHORIZATION = \"Authorization\";\r\n    public static String GET_PRIVACY = \"get_privacy\";\r\n    public static String GET_TERMS = \"get_terms\";\r\n    public static String GET_CONTACT = \"get_contact\";\r\n    public static String GET_ABOUT_US = \"get_about_us\";\r\n    public static String GET_OFFER_IMAGE = \"get-offer-images\";\r\n    public static String GET_ALL_SECTIONS = \"get-all-sections\";\r\n    public static String CANCELLED = \"cancelled\";\r\n    public static String GET_NOTIFICATIONS = \"get-notifications\";\r\n    public static String GET_WALLETBALANCE = \"get-user-wallet\";\r\n\r\n    public static String SHORT_LINK=\"short_link\";\r\n    public static String EARN_MSG=\"earn_msg\";\r\n    public static String USER_REFER_AMT=\"use_refer_code_amount\";\r\n    public static String FRIEND_ONE=\"friend_one_earn\";\r\n    public static String FRIEND_SECOND=\"friend_two_earn\";\r\n    public static String EXPIRY_DAY=\"expiry_day\";\r\n\r\n    public static String MSG_1=\"msg_1\";\r\n    public static String MSG_2=\"msg_2\";\r\n    public static String MSG_3=\"msg_3\";\r\n    public static String SHARE_MSG = \"share_msg\";\r\n    public static String SETTING_HOME = \"settinghome\";\r\n    public static String PARENT_ID=\"parent_id\";\r\n    public static String KEY_FCM_ID=\"\";\r\n    public static String YOUTUBECODE=\"\";\r\n\r\n\r\n\r\n    public static String GET_TIME_SLOT = \"get_time_slots\";\r\n    public static String RETURNED = \"returned\";\r\n    public static String GET_USER_DATA = \"get_user_data\";\r\n    public static String KEY_BALANCE = \"balance\";\r\n    public static String KEY_REFER_EARN_BONUS = \"refer-earn-bonus\";\r\n    public static String KEY_REFER_EARN_STATUS = \"is-refer-earn-on\";\r\n    public static String KEY_MAX_EARN_AMOUNT = \"max-refer-earn-amount\";\r\n    public static String KEY_MIN_WIDRAWAL = \"minimum-withdrawal-amount\";\r\n    public static String KEY_WALLET_USED = \"wallet_used\";\r\n    public static String KEY_WALLET_BALANCE = \"wallet_balance\";\r\n    public static String KEY_VERSION_CODE = \"current_version\";\r\n    public static String KEY_VERSION_NAME = \"version_code_name\";\r\n    public static String KEY_MIN_VERSION_REQUIRED = \"minimum_version_required\";\r\n    public static String KEY_UPDATE_STATUS = \"is-version-system-on\";\r\n    public static String KEY_ORDER_RETURN_DAY_LIMIT = \"max-product-return-days\";\r\n    public static String FIRST_NAME = \"first_name\";\r\n    public static String LAST_NAME = \"last_name\";\r\n    public static String PAYER_EMAIL = \"payer_email\";\r\n    public static String COUNTRY_CODE = \"country_code\";\r\n    public static String TIME_SLOTS = \"time_slots\";\r\n    public static String LAST_ORDER_TIME = \"last_order_time\";\r\n    public static String ITEM_NAME = \"item_name\";\r\n    public static String ITEM_NUMBER = \"item_number\";\r\n    public static String UPDATE_ORDER_ITEM_STATUS = \"update_order_item_status\";\r\n    public static String ORDER_ITEM_ID = \"order_item_id\";\r\n    public static String PAYMENT_METHODS = \"payment_methods\";\r\n    public static String PAY_M_KEY = \"payumoney_merchant_key\";\r\n    public static String PAYU_M_ID = \"payumoney_merchant_id\";\r\n    public static String PAYU_SALT = \"payumoney_salt\";\r\n    public static String RAZOR_PAY_KEY = \"razorpay_key\";\r\n    public static String share_url = \"http://ifresh.co.in/\";\r\n    public static String REFER_EARN_BONUS = \"\";\r\n    public static String MAX_EARN_AMOUNT = \"\";\r\n    public static String MIN_EARN_ORDER = \"\";\r\n    public static String CITY_NAME = \"city_name\";\r\n    public static String AREA_NAME = \"area_name\";\r\n    public static String REFERRAL_CODE = \"referral_code\";\r\n    public static String FRIEND_CODE = \"friends_code\";\r\n    public static String VERSION_CODE;\r\n    public static String REQUIRED_VERSION;\r\n    public static String VERSION_STATUS;\r\n    public static String SOLDOUT_TEXT = \"Sold Out\";\r\n    public static int GRIDCOLUMN = 2;\r\n    public static String LOAD_ITEM_LIMIT = \"10\";\r\n\r\n    public static int MAX_PRODUCT_LIMIT = 25;\r\n    public static String SORT = \"sort\";\r\n    public static String TYPE = \"type\";\r\n    public static String IMAGE = \"image\";\r\n    public static String NAME = \"name\";\r\n\r\n\r\n\r\n\r\n    public static String MESSAGE_w = \"message\";\r\n    public static String AMOUNT_w = \"amount\";\r\n    public static String DATE_w = \"date_created\";\r\n    public static String DATE_e = \"expiry_date\";\r\n\r\n    public static String AC_w = \"type\";\r\n\r\n\r\n    public static String KEY_MEASUREMENT=\"key_measurment\";\r\n    public static String KEY_ADDRESS=\"key_address\";\r\n    public static String KEY_TIMESLOT=\"key_slot\";\r\n    public static String KEY_DAYSLOT=\"key_dslot\";\r\n    public static String KEY_PAYMENT_TYPE=\"key_payment_type\";\r\n    public static String KEY_PAYMENT_METHOD=\"key_payment_method\";\r\n    public static String KEY_STATUS=\"status\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    public static String TYPE_ID = \"type_id\";\r\n    public static String ID = \"_id\";\r\n    public static String FNAME = \"fname\";\r\n    public static String LNAME = \"lname\";\r\n\r\n\r\n    public static String SUBTITLE = \"subtitle\";\r\n    public static String PRODUCTS = \"products\";\r\n    public static String SUC_CATE_ID = \"subcategory_id\";\r\n    public static String DESCRIPTION = \"description\";\r\n    public static String STATUS = \"status\";\r\n    public static String DATE_ADDED = \"date_added\";\r\n    public static String TITLE = \"title\";\r\n    public static String SECTION_STYLE = \"style\";\r\n    public static String SHORT_DESC = \"short_description\";\r\n    public static String REGISTER = \"register\";\r\n    public static String EMAIL = \"email\";\r\n    public static String MOBILE = \"mobile\";\r\n    public static String PASSWORD = \"password\";\r\n    public static String FCM_ID = \"fcm_id\";\r\n    public static String CITY = \"city\";\r\n    public static String AREA = \"area\";\r\n    public static String STREET = \"street\";\r\n    public static String PINCODE = \"pincode\";\r\n    public static String ERROR = \"error\";\r\n    public static String VERIFY_USER = \"verify-user\";\r\n    public static String VERIFY_EMAIL = \"verify-user-email\";\r\n    public static String GET_SLIDER_IMAGE = \"get-slider-images\";\r\n    public static String USER_ID = \"user_id\";\r\n    public static String DOB = \"dob\";\r\n    public static String CREATEDATE = \"created_at\";\r\n    public static String DATE_CREATED = \"date_created\";\r\n    public static String APIKEY = \"apikey\";\r\n    public static String TAX_AMOUNT = \"tax_amount\";\r\n    public static String TAX_PERCENT = \"tax_percentage\";\r\n    public static String DELIVERY_TIME = \"delivery_time\";\r\n    public static String TXTN_DATE = \"transaction_date\";\r\n\r\n    public static String SELECTEDPRODUCT_POS = \"\";\r\n    public static String FORGOT_PSW_EMAIL = \"forgot-password-email\";\r\n    public static String FORGOT_PSW_MOBILE = \"forgot-password-mobile\";\r\n    public static String EDIT_PROFILE = \"edit-profile\";\r\n    public static String CHANGE_PASSWORD = \"change-password\";\r\n    public static String CATEGORY_ID = \"category_id\";\r\n    public static String SUB_CATEGORY_ID = \"subcategory_id\";\r\n    public static String CAT_ID = \"cat_id\";\r\n    public static String PRODUCT_SEARCH = \"products-search\";\r\n    public static String SEARCH = \"search\";\r\n    public static String FROMSEARCH = \"search\";\r\n    public static String Add_TRANSACTION = \"add_transaction\";\r\n    public static String GET_PAYMENT_METHOD = \"get_payment_methods\";\r\n    public static String CONTACT = \"contact\";\r\n    public static String DATA = \"data\";\r\n    public static String SECTIONS = \"sections\";\r\n    public static String VARIANT = \"variants\";\r\n    public static String PRODUCT_ID = \"product_id\";\r\n    public static String FRANCHISCID  =\"franchiseId\";\r\n    public static String FRANCHISEPID  =\"frProductId\";\r\n\r\n    public static String MEASUREMENT = \"measurement\";\r\n    public static String MEASUREMENT_UNIT_ID = \"measurement_unit_id\";\r\n    public static String PRICE = \"price\";\r\n    public static String DISCOUNT = \"discount\";\r\n    public static String DISCOUNTED_PRICE = \"discounted_price\";\r\n    public static String SERVE_FOR = \"serve_for\";\r\n    public static String STOCK = \"stock\";\r\n    public static String STOCK_UNIT_ID = \"stock_unit_id\";\r\n    public static String MEASUREMENT_UNIT_NAME = \"measurement_unit_name\";\r\n    public static String STOCK_UNIT_NAME = \"stock_unit_name\";\r\n    public static String SETTINGS = \"settings\";\r\n    public static String GET_SETTINGS = \"get_settings\";\r\n    public static String paypal_method = \"paypal_payment_method\";\r\n    public static String payu_method = \"payumoney_payment_method\";\r\n    public static String razor_pay_method = \"razorpay_payment_method\";\r\n    public static String KEY_REFER_EARN_METHOD = \"refer-earn-method\";\r\n    public static String KEY_MIN_REFER_ORDER_AMOUNT = \"min-refer-earn-order-amount\";\r\n    public static String REFER_EARN_ORDER_AMOUNT = \"\";\r\n    public static String REFER_EARN_METHOD = \"\";\r\n    public static String REFER_EARN_ACTIVE = \"\";\r\n\r\n\r\n    public static String AUTHTOKEN=\"authtoken\";\r\n    public static String COUNTRY_ID =\"country_id\";\r\n    public static String STATE_ID =\"state_id\";\r\n    public static String CITY_ID =\"city_id\";\r\n    public static String AREA_ID =\"area_id\";\r\n    public static String SUBAREA_ID =\"subarea_id\";\r\n    public static String COUNTRY_N =\"country_name\";\r\n    public static String STATE_N =\"state_name\";\r\n    public static String CITY_N=\"city_name\";\r\n    public static String AREA_N=\"area_name\";\r\n    public static String SUBAREA_N=\"subarea_name\";\r\n    public static String ADDRESS_SAVEMSG = \"Address Save Successfully\";\r\n    public static String PASSWORD_CHANGE_MSG=\"Password Change Successfully\";\r\n    public static String ADDRESS_DEFAULT_CHANGE_MSG = \"Your Default Address Has Been Changed\";\r\n    public static String ADDRESS_DELETE_MSG = \"Your Selected Address Has Been Deleted\";\r\n    public static String SELECT_DEFAULT_ADD = \"Please Select Default Address Among Three Address\";\r\n\r\n\r\n    public static String HOME_ADD=\"home_add\";\r\n    public static String HOME_ADD_ID=\"home_id\";\r\n\r\n    public static String OFFICE_ADD=\"office_add\";\r\n    public static String OFFICE_ADD_ID=\"office_id\";\r\n\r\n    public static String OTHER_ADD=\"other_add\";\r\n    public static String OTHER_ADD_ID=\"other_id\";\r\n\r\n    public static String DEFAULT_ADD=\"default_add\";\r\n\r\n    public static String NODEFAULT_ADD=\"No Address Found\";\r\n\r\n    public static String FEATUREPRODUCT = \"Feature Product\";\r\n    public static String SUBTITLE_1 = \"\";\r\n\r\n\r\n\r\n\r\n    //settings\r\n    public static Boolean ISACCEPTMINORDER =false;\r\n    public static Double SETTING_DELIVERY_CHARGE = 0.0;\r\n    public static Double SETTING_TAX = 0.0;\r\n    public static Double SETTING_MINIMUM_AMOUNT_FOR_FREE_DELIVERY = 0.0;\r\n    public static String SETTING_CURRENCY_SYMBOL = \"\\u20B9\";\r\n    public static String SETTING_MAIL_ID = \"\";\r\n    public static String free_delivery_message=\"\";\r\n    public static Double WALLET_BALANCE = 0.0;\r\n    public static Double MINIMUM_WITHDRAW_AMOUNT = 0.0;\r\n    public static int ORDER_DAY_LIMIT = 0;\r\n    public static String country_code = \"\";\r\n    public static String U_ID = \"\";\r\n    public static String REPLY_TO = \"reply_to\";\r\n    public static String MINIMUM_AMOUNT = \"min_amount\";\r\n    public static String DELIEVERY_CHARGE = \"delivery_charge\";\r\n    public static String CURRENCY = \"currency\";\r\n    public static String TAX = \"tax\";\r\n    public static String CAT = \"cat\";\r\n    public static String SUBCAT = \"subcat\";\r\n    public static String LIMIT = \"limit\";\r\n    public static String OFFSET = \"offset\";\r\n    public static String LATITUDE = \"latitude\";\r\n    public static String LONGITUDE = \"longitude\";\r\n    public static String ACTIVE_STATUS = \"active_status\";\r\n\r\n    public static String OTHER_IMAGES = \"other_images\";\r\n    public static String ADD_ORDER_TRANS = \"add_order_and_transaction\";\r\n    public static String AMOUNT = \"amount\";\r\n    public static String PROMO_DISCOUNT = \"promo_discount\";\r\n    public static String DISCOUNT_AMT = \"discount_rupees\";\r\n    public static String TOTAL = \"total\";\r\n    public static String PRODUCT_VARIANT_ID = \"product_variant_id\";\r\n    public static String PRODUCT_ID_2 = \"productId\";\r\n\r\n    public static String QUANTITY = \"quantity\";\r\n    public static String USER_NAME = \"user_name\";\r\n    public static String DELIVERY_CHARGE = \"delivery_charge\";\r\n    public static String PAYMENT_METHOD = \"payment_method\";\r\n    public static String ADDRESS = \"address\";\r\n    public static String TRANS_ID = \"txn_id\";\r\n    public static String MESSAGE = \"message\";\r\n    public static String FINAL_TOTAL = \"final_total\";\r\n    public static String GETORDERS = \"get_orders\";\r\n    public static String ORDER_ID = \"order_id\";\r\n    public static String UPDATE_ORDER_STATUS = \"update_order_status\";\r\n    public static String PLACE_ORDER = \"place_order\";\r\n\r\n    public static String NEW = \"new\";\r\n    public static String OLD = \"old\";\r\n    public static String HIGH = \"high\";\r\n    public static String LOW = \"low\";\r\n    public static String PRICE_L_H = \"1\";\r\n    public static String PRICE_H_L = \"-1\";\r\n    public static String PRODUCT_O_N = \"-1\";\r\n    public static String PRODUCT_N_O = \"-1\";\r\n    public static String ISAREACHAGE=\"\";\r\n\r\n\r\n\r\n    public static String SUB_TOTAL = \"sub_total\";\r\n    public static String DELIVER_BY = \"deliver_by\";\r\n    public static String UNIT = \"unit\";\r\n    public static String SLUG = \"slug\";\r\n    public static String PROMO_CODE = \"promo_code\";\r\n    public static String TOKEN = \"token\";\r\n    public static boolean isOrderCancelled;\r\n    public static CharSequence[] filtervalues = {\"Sort By A-Z\", \"Sort By Z-A\", \" Price Highest to Lowest \", \" Price Lowest to Highest \"};\r\n    public static String FRND_CODE = \"\";\r\n    public static String PLAY_STORE_LINK = \"http://shorturl.at/fhlvO\";\r\n    public static String ALPHA_NUMERIC_STRING = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjiklmnopqrstuvwxyz\";\r\n\r\n\r\n    //set your jwt secret key here...key must same in PHP and Android\r\n    public static String JWT_KEY = \"replace_with_your_strong_jwt_secret_key\";\r\n\r\n    public static String verificationCode;\r\n    public static String PAYPAL = \"\";\r\n    public static String PAYUMONEY = \"\";\r\n    public static String RAZORPAY = \"\";\r\n\r\n    public static String MERCHANT_ID = \"\";\r\n    public static String MERCHANT_KEY = \"\";\r\n    public static String MERCHANT_SALT = \"\";\r\n    public static String RAZOR_PAY_KEY_VALUE = \"\";\r\n\r\n\r\n\r\n\r\n    public static String randomAlphaNumeric(int count) {\r\n        StringBuilder builder = new StringBuilder();\r\n        while (count-- != 0) {\r\n            int character = (int) (Math.random() * ALPHA_NUMERIC_STRING.length());\r\n            builder.append(ALPHA_NUMERIC_STRING.charAt(character));\r\n        }\r\n        return builder.toString();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/ifresh/customer/helper/Constant.java	(revision ce16e6637b08175bfb1d14ad608a40eebd8108fe)
+++ app/src/main/java/com/ifresh/customer/helper/Constant.java	(date 1609130587746)
@@ -4,12 +4,16 @@
 
 
 public class Constant {
-   // public static String BASEPATH = "http://ec2-65-0-127-124.ap-south-1.compute.amazonaws.com:3000/api/";
-   // public static String IMAGEBASEPATH= "http://ec2-65-0-127-124.ap-south-1.compute.amazonaws.com:3000/uploads/";
+
+    //online path
 
+    public static String BASEPATH = "http://ec2-65-0-127-124.ap-south-1.compute.amazonaws.com:3000/api/";
+    public static String IMAGEBASEPATH= "http://ec2-65-0-127-124.ap-south-1.compute.amazonaws.com:3000/uploads/";
 
-    public static String BASEPATH = "http://192.168.1.7:3000/api/";
-    public static String IMAGEBASEPATH= "http://192.168.1.7:3000/uploads/";
+    //offline path
+
+    //public static String BASEPATH = "http://192.168.1.7:3000/api/";
+    //public static String IMAGEBASEPATH= "http://192.168.1.7:3000/uploads/";
 
     public static String BANNERIMAGEPATH = IMAGEBASEPATH+"banner_img/";
     public static String CATEGORYIMAGEPATH = IMAGEBASEPATH+"catagory_img/";
Index: app/src/main/res/layout/activity_view_uploadpres.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:focusableInTouchMode=\"true\"\r\n    tools:context=\"com.ifresh.customer.activity.ProfileActivity\">\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/lyttoolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\">\r\n\r\n        <androidx.appcompat.widget.Toolbar\r\n            android:id=\"@+id/toolbar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"?attr/actionBarSize\"\r\n            android:background=\"@color/colorPrimary\"\r\n            app:contentInsetLeft=\"0dp\"\r\n            app:contentInsetStart=\"0dp\"\r\n            app:contentInsetStartWithNavigation=\"0dp\"\r\n            app:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imglogout\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:onClick=\"OnClick\"\r\n            android:padding=\"5dp\"\r\n            android:visibility=\"gone\"\r\n            app:srcCompat=\"@drawable/ic_logout\" />\r\n\r\n    </RelativeLayout>\r\n\r\n  <ScrollView\r\n      android:layout_width=\"match_parent\"\r\n      android:layout_height=\"match_parent\"\r\n      android:layout_below=\"@+id/lyttoolbar\">\r\n\r\n      <LinearLayout\r\n          android:layout_width=\"match_parent\"\r\n          android:layout_height=\"wrap_content\"\r\n          android:orientation=\"vertical\">\r\n\r\n          <LinearLayout\r\n              android:id=\"@+id/linear_top_picmore\"\r\n              android:layout_width=\"match_parent\"\r\n              android:layout_height=\"wrap_content\"\r\n              android:layout_margin=\"@dimen/dimen_5dp\"\r\n              android:visibility=\"gone\">\r\n\r\n              <TextView\r\n                  android:id=\"@+id/txt_picmore\"\r\n                  android:layout_width=\"match_parent\"\r\n                  android:layout_height=\"wrap_content\"\r\n                  android:text=\"You Want To Upload More Please Click\"\r\n                  android:textColor=\"@color/colorPrimary\"\r\n                  android:fontFamily=\"@font/poppins_medium\"\r\n                  android:textSize=\"15sp\"\r\n                  android:padding=\"@dimen/dimen_5dp\"\r\n                  android:gravity=\"right\"\r\n                  tools:ignore=\"RtlHardcoded\" />\r\n          </LinearLayout>\r\n\r\n          <LinearLayout\r\n              android:layout_width=\"match_parent\"\r\n              android:layout_height=\"wrap_content\"\r\n              android:orientation=\"vertical\"\r\n              android:background=\"@drawable/card_shadow_light\"\r\n              android:padding=\"@dimen/dimen_5dp\"\r\n              android:layout_margin=\"@dimen/dimen_5dp\"\r\n              >\r\n\r\n              <LinearLayout\r\n                  android:id=\"@+id/linear1\"\r\n                  android:layout_width=\"match_parent\"\r\n                  android:layout_height=\"wrap_content\"\r\n                  android:layout_margin=\"@dimen/dimen_2dp\"\r\n                  android:orientation=\"horizontal\"\r\n                  android:weightSum=\"3\">\r\n\r\n                  <TextView\r\n                      android:layout_width=\"0sp\"\r\n                      android:layout_height=\"wrap_content\"\r\n                      android:layout_gravity=\"center_vertical\"\r\n                      android:layout_weight=\"1\"\r\n                      android:gravity=\"center\"\r\n                      android:text=\"Upload\\nPrescription\"\r\n                      android:textColor=\"@color/colorPrimary\"\r\n                      android:textSize=\"13sp\"\r\n                      android:layout_margin=\"@dimen/dimen_5dp\"\r\n                      android:textStyle=\"bold\" />\r\n\r\n                  <LinearLayout\r\n                      android:layout_width=\"0sp\"\r\n                      android:layout_height=\"100dp\"\r\n                      android:layout_weight=\"2\">\r\n\r\n                      <ImageView\r\n                          android:id=\"@+id/user_pic\"\r\n                          android:layout_width=\"match_parent\"\r\n                          android:layout_height=\"100dp\"\r\n                          android:scaleType=\"fitCenter\"\r\n                          app:srcCompat=\"@drawable/ic_image_upload\" />\r\n\r\n                  </LinearLayout>\r\n\r\n              </LinearLayout>\r\n              <LinearLayout\r\n                  android:layout_width=\"wrap_content\"\r\n                  android:layout_height=\"wrap_content\"\r\n                  android:layout_gravity=\"right\"\r\n                  android:layout_marginTop=\"@dimen/dimen_5dp\"\r\n                  android:layout_marginBottom=\"@dimen/dimen_5dp\">\r\n\r\n                  <LinearLayout\r\n                      android:layout_width=\"wrap_content\"\r\n                      android:layout_height=\"wrap_content\"\r\n                      android:layout_gravity=\"center_vertical\"\r\n                      android:layout_marginEnd=\"@dimen/dimen_10dp\"\r\n                      android:gravity=\"right\"\r\n                      android:orientation=\"horizontal\"\r\n                      android:weightSum=\"100\">\r\n\r\n\r\n                      <Button\r\n                          android:id=\"@+id/btn_del\"\r\n                          android:background=\"@color/gray\"\r\n                          android:layout_width=\"0dp\"\r\n                          android:layout_height=\"40dp\"\r\n                          android:layout_weight=\"50\"\r\n                          android:layout_gravity=\"center_vertical\"\r\n                          android:text=\"@string/btn_delete\"\r\n                          android:textColor=\"@color/white\"\r\n                          android:enabled=\"false\"\r\n                          android:layout_marginEnd=\"@dimen/dimen_5dp\"/>\r\n\r\n                      <Button\r\n                          android:id=\"@+id/btn_pic\"\r\n                          android:background=\"@color/colorPrimary\"\r\n                          android:layout_width=\"0dp\"\r\n                          android:layout_height=\"40dp\"\r\n                          android:layout_weight=\"50\"\r\n                          android:layout_gravity=\"center_vertical\"\r\n                          android:text=\"@string/upload\"\r\n                          android:textColor=\"@color/white\"\r\n                          android:layout_marginStart=\"@dimen/dimen_5dp\"/>\r\n\r\n\r\n\r\n\r\n                  </LinearLayout>\r\n\r\n              </LinearLayout>\r\n\r\n\r\n          </LinearLayout>\r\n\r\n\r\n\r\n          <LinearLayout\r\n              android:id=\"@+id/linear2\"\r\n              android:layout_width=\"match_parent\"\r\n              android:layout_height=\"wrap_content\"\r\n              android:orientation=\"vertical\"\r\n              android:background=\"@drawable/card_shadow_light\"\r\n              android:padding=\"@dimen/dimen_5dp\"\r\n              android:layout_margin=\"@dimen/dimen_5dp\"\r\n              android:visibility=\"gone\"\r\n              >\r\n\r\n              <LinearLayout\r\n\r\n                  android:layout_width=\"match_parent\"\r\n                  android:layout_height=\"wrap_content\"\r\n                  android:layout_margin=\"@dimen/dimen_2dp\"\r\n                  android:orientation=\"horizontal\"\r\n                  android:weightSum=\"3\">\r\n\r\n                  <TextView\r\n                      android:layout_width=\"0sp\"\r\n                      android:layout_height=\"wrap_content\"\r\n                      android:layout_gravity=\"center_vertical\"\r\n                      android:layout_weight=\"1\"\r\n                      android:gravity=\"center\"\r\n                      android:text=\"Upload\\nPrescription\"\r\n                      android:textColor=\"@color/colorPrimary\"\r\n                      android:textSize=\"13sp\"\r\n                      android:layout_margin=\"@dimen/dimen_5dp\"\r\n                      android:textStyle=\"bold\" />\r\n\r\n                  <LinearLayout\r\n                      android:layout_width=\"0sp\"\r\n                      android:layout_height=\"100dp\"\r\n                      android:layout_weight=\"2\">\r\n\r\n                      <ImageView\r\n                          android:id=\"@+id/user_pic_2\"\r\n                          android:layout_width=\"match_parent\"\r\n                          android:layout_height=\"100dp\"\r\n                          android:scaleType=\"fitCenter\"\r\n                          app:srcCompat=\"@drawable/ic_image_upload\" />\r\n\r\n                  </LinearLayout>\r\n\r\n              </LinearLayout>\r\n              <LinearLayout\r\n                  android:layout_width=\"wrap_content\"\r\n                  android:layout_height=\"wrap_content\"\r\n                  android:layout_gravity=\"right\"\r\n                  android:layout_marginTop=\"@dimen/dimen_5dp\"\r\n                  android:layout_marginBottom=\"@dimen/dimen_5dp\">\r\n\r\n                  <LinearLayout\r\n                      android:layout_width=\"wrap_content\"\r\n                      android:layout_height=\"wrap_content\"\r\n                      android:layout_gravity=\"center_vertical\"\r\n                      android:layout_marginEnd=\"@dimen/dimen_10dp\"\r\n                      android:gravity=\"right\"\r\n                      android:orientation=\"horizontal\"\r\n                      android:weightSum=\"100\">\r\n\r\n\r\n                      <Button\r\n                          android:id=\"@+id/btn_del_2\"\r\n                          android:background=\"@color/gray\"\r\n                          android:layout_width=\"0dp\"\r\n                          android:layout_height=\"40dp\"\r\n                          android:layout_weight=\"50\"\r\n                          android:layout_gravity=\"center_vertical\"\r\n                          android:text=\"@string/btn_delete\"\r\n                          android:textColor=\"@color/white\"\r\n                          android:enabled=\"false\"\r\n                          android:layout_marginEnd=\"@dimen/dimen_5dp\"/>\r\n\r\n                      <Button\r\n                          android:id=\"@+id/btn_pic_2\"\r\n                          android:background=\"@color/colorPrimary\"\r\n                          android:layout_width=\"0dp\"\r\n                          android:layout_height=\"40dp\"\r\n                          android:layout_weight=\"50\"\r\n                          android:layout_gravity=\"center_vertical\"\r\n                          android:text=\"@string/upload\"\r\n                          android:textColor=\"@color/white\"\r\n                          android:layout_marginStart=\"@dimen/dimen_5dp\"/>\r\n\r\n\r\n\r\n\r\n                  </LinearLayout>\r\n\r\n              </LinearLayout>\r\n\r\n\r\n          </LinearLayout>\r\n\r\n          <LinearLayout\r\n              android:id=\"@+id/linear3\"\r\n              android:layout_width=\"match_parent\"\r\n              android:layout_height=\"wrap_content\"\r\n              android:orientation=\"vertical\"\r\n              android:background=\"@drawable/card_shadow_light\"\r\n              android:padding=\"@dimen/dimen_5dp\"\r\n              android:layout_margin=\"@dimen/dimen_5dp\"\r\n              android:visibility=\"gone\"\r\n              >\r\n\r\n              <LinearLayout\r\n\r\n                  android:layout_width=\"match_parent\"\r\n                  android:layout_height=\"wrap_content\"\r\n                  android:layout_margin=\"@dimen/dimen_2dp\"\r\n                  android:orientation=\"horizontal\"\r\n                  android:weightSum=\"3\">\r\n\r\n                  <TextView\r\n                      android:layout_width=\"0sp\"\r\n                      android:layout_height=\"wrap_content\"\r\n                      android:layout_gravity=\"center_vertical\"\r\n                      android:layout_weight=\"1\"\r\n                      android:gravity=\"center\"\r\n                      android:text=\"Upload\\nPrescription\"\r\n                      android:textColor=\"@color/colorPrimary\"\r\n                      android:textSize=\"13sp\"\r\n                      android:layout_margin=\"@dimen/dimen_5dp\"\r\n                      android:textStyle=\"bold\" />\r\n\r\n                  <LinearLayout\r\n                      android:layout_width=\"0sp\"\r\n                      android:layout_height=\"100dp\"\r\n                      android:layout_weight=\"2\">\r\n\r\n                      <ImageView\r\n                          android:id=\"@+id/user_pic_3\"\r\n                          android:layout_width=\"match_parent\"\r\n                          android:layout_height=\"100dp\"\r\n                          android:scaleType=\"fitCenter\"\r\n                          app:srcCompat=\"@drawable/ic_image_upload\" />\r\n\r\n                  </LinearLayout>\r\n\r\n              </LinearLayout>\r\n              <LinearLayout\r\n                  android:layout_width=\"wrap_content\"\r\n                  android:layout_height=\"wrap_content\"\r\n                  android:layout_gravity=\"right\"\r\n                  android:layout_marginTop=\"@dimen/dimen_5dp\"\r\n                  android:layout_marginBottom=\"@dimen/dimen_5dp\">\r\n\r\n                  <LinearLayout\r\n                      android:layout_width=\"wrap_content\"\r\n                      android:layout_height=\"wrap_content\"\r\n                      android:layout_gravity=\"center_vertical\"\r\n                      android:layout_marginEnd=\"@dimen/dimen_10dp\"\r\n                      android:gravity=\"right\"\r\n                      android:orientation=\"horizontal\"\r\n                      android:weightSum=\"100\">\r\n\r\n\r\n                      <Button\r\n                          android:id=\"@+id/btn_del_3\"\r\n                          android:background=\"@color/gray\"\r\n                          android:layout_width=\"0dp\"\r\n                          android:layout_height=\"40dp\"\r\n                          android:layout_weight=\"50\"\r\n                          android:layout_gravity=\"center_vertical\"\r\n                          android:text=\"@string/btn_delete\"\r\n                          android:textColor=\"@color/white\"\r\n                          android:enabled=\"false\"\r\n                          android:layout_marginEnd=\"@dimen/dimen_5dp\"/>\r\n\r\n                      <Button\r\n                          android:id=\"@+id/btn_pic_3\"\r\n                          android:background=\"@color/colorPrimary\"\r\n                          android:layout_width=\"0dp\"\r\n                          android:layout_height=\"40dp\"\r\n                          android:layout_weight=\"50\"\r\n                          android:layout_gravity=\"center_vertical\"\r\n                          android:text=\"@string/upload\"\r\n                          android:textColor=\"@color/white\"\r\n                          android:layout_marginStart=\"@dimen/dimen_5dp\"/>\r\n\r\n\r\n                  </LinearLayout>\r\n\r\n              </LinearLayout>\r\n\r\n\r\n          </LinearLayout>\r\n\r\n          <LinearLayout\r\n              android:id=\"@+id/linear4\"\r\n              android:layout_width=\"match_parent\"\r\n              android:layout_height=\"wrap_content\"\r\n              android:orientation=\"vertical\"\r\n              android:background=\"@drawable/card_shadow_light\"\r\n              android:padding=\"@dimen/dimen_5dp\"\r\n              android:layout_margin=\"@dimen/dimen_5dp\"\r\n              android:visibility=\"gone\"\r\n              >\r\n\r\n              <LinearLayout\r\n\r\n                  android:layout_width=\"match_parent\"\r\n                  android:layout_height=\"wrap_content\"\r\n                  android:layout_margin=\"@dimen/dimen_2dp\"\r\n                  android:orientation=\"horizontal\"\r\n                  android:weightSum=\"3\">\r\n\r\n                  <TextView\r\n                      android:layout_width=\"0sp\"\r\n                      android:layout_height=\"wrap_content\"\r\n                      android:layout_gravity=\"center_vertical\"\r\n                      android:layout_weight=\"1\"\r\n                      android:gravity=\"center\"\r\n                      android:text=\"Upload\\nPrescription\"\r\n                      android:textColor=\"@color/colorPrimary\"\r\n                      android:textSize=\"13sp\"\r\n                      android:layout_margin=\"@dimen/dimen_5dp\"\r\n                      android:textStyle=\"bold\" />\r\n\r\n                  <LinearLayout\r\n                      android:layout_width=\"0sp\"\r\n                      android:layout_height=\"100dp\"\r\n                      android:layout_weight=\"2\">\r\n\r\n                      <ImageView\r\n                          android:id=\"@+id/user_pic_4\"\r\n                          android:layout_width=\"match_parent\"\r\n                          android:layout_height=\"100dp\"\r\n                          android:scaleType=\"fitCenter\"\r\n                          app:srcCompat=\"@drawable/ic_image_upload\" />\r\n\r\n                  </LinearLayout>\r\n\r\n              </LinearLayout>\r\n              <LinearLayout\r\n                  android:layout_width=\"wrap_content\"\r\n                  android:layout_height=\"wrap_content\"\r\n                  android:layout_gravity=\"right\"\r\n                  android:layout_marginTop=\"@dimen/dimen_5dp\"\r\n                  android:layout_marginBottom=\"@dimen/dimen_5dp\">\r\n\r\n                  <LinearLayout\r\n                      android:layout_width=\"wrap_content\"\r\n                      android:layout_height=\"wrap_content\"\r\n                      android:layout_gravity=\"center_vertical\"\r\n                      android:layout_marginEnd=\"@dimen/dimen_10dp\"\r\n                      android:gravity=\"right\"\r\n                      android:orientation=\"horizontal\"\r\n                      android:weightSum=\"100\">\r\n\r\n\r\n                      <Button\r\n                          android:id=\"@+id/btn_del_4\"\r\n                          android:background=\"@color/gray\"\r\n                          android:layout_width=\"0dp\"\r\n                          android:layout_height=\"40dp\"\r\n                          android:layout_weight=\"50\"\r\n                          android:layout_gravity=\"center_vertical\"\r\n                          android:text=\"@string/btn_delete\"\r\n                          android:textColor=\"@color/white\"\r\n                          android:enabled=\"false\"\r\n                          android:layout_marginEnd=\"@dimen/dimen_5dp\"/>\r\n\r\n                      <Button\r\n                          android:id=\"@+id/btn_pic_4\"\r\n                          android:background=\"@color/colorPrimary\"\r\n                          android:layout_width=\"0dp\"\r\n                          android:layout_height=\"40dp\"\r\n                          android:layout_weight=\"50\"\r\n                          android:layout_gravity=\"center_vertical\"\r\n                          android:text=\"@string/upload\"\r\n                          android:textColor=\"@color/white\"\r\n                          android:layout_marginStart=\"@dimen/dimen_5dp\"/>\r\n\r\n\r\n\r\n\r\n                  </LinearLayout>\r\n\r\n              </LinearLayout>\r\n\r\n\r\n          </LinearLayout>\r\n\r\n          <com.google.android.material.textfield.TextInputLayout\r\n              android:layout_width=\"match_parent\"\r\n              android:layout_height=\"wrap_content\"\r\n              android:layout_margin=\"@dimen/dimen_5dp\">\r\n\r\n              <EditText\r\n                  android:id=\"@+id/txt\"\r\n                  android:layout_width=\"match_parent\"\r\n                  android:layout_height=\"100dp\"\r\n\r\n                  android:gravity=\"start\"\r\n                  android:hint=\"@string/write_text_message\"\r\n                  android:imeOptions=\"actionDone\"\r\n                  android:textColor=\"@color/black\"\r\n                  android:textAppearance=\"@style/TextAppearance.AppCompat.Small\" />\r\n\r\n          </com.google.android.material.textfield.TextInputLayout>\r\n\r\n\r\n\r\n\r\n\r\n          <RelativeLayout\r\n              android:layout_width=\"match_parent\"\r\n              android:layout_height=\"wrap_content\"\r\n              android:padding=\"@dimen/dimen_5dp\"\r\n              android:layout_margin=\"@dimen/dimen_5dp\"\r\n              android:layout_marginTop=\"@dimen/dimen_5dp\">\r\n\r\n              <TextView\r\n                  android:id=\"@+id/type1\"\r\n                  android:layout_width=\"wrap_content\"\r\n                  android:layout_height=\"wrap_content\"\r\n                  android:textSize=\"16sp\"\r\n                  android:textStyle=\"bold\"\r\n                  android:textColor=\"@color/primary_green\"/>\r\n\r\n              <TextView\r\n                  android:id=\"@+id/tvnoAddress\"\r\n                  android:layout_width=\"wrap_content\"\r\n                  android:layout_height=\"wrap_content\"\r\n                  android:layout_marginTop=\"3dp\"\r\n                  android:padding=\"@dimen/dimen_5dp\"\r\n                  android:layout_centerInParent=\"true\"\r\n                  android:text=\"No Address\"\r\n                  android:textColor=\"@color/white\"\r\n                  android:textSize=\"@dimen/dimen_12sp\"\r\n                  android:background=\"@drawable/bg_button\"\r\n                  android:visibility=\"gone\"\r\n                  />\r\n\r\n              <LinearLayout\r\n                  android:id=\"@+id/linear_home\"\r\n                  android:layout_width=\"wrap_content\"\r\n                  android:layout_height=\"wrap_content\"\r\n                  android:orientation=\"horizontal\"\r\n                  android:layout_alignParentEnd=\"true\">\r\n\r\n\r\n                  <ImageView\r\n                      android:id=\"@+id/imgedit\"\r\n                      android:layout_width=\"wrap_content\"\r\n                      android:layout_height=\"wrap_content\"\r\n                      android:layout_marginTop=\"@dimen/dimen_5dp\"\r\n                      app:srcCompat=\"@drawable/ic_edit\" />\r\n\r\n              </LinearLayout>\r\n\r\n\r\n              <com.google.android.material.textfield.TextInputLayout\r\n                  android:layout_width=\"match_parent\"\r\n                  android:layout_height=\"wrap_content\"\r\n                  android:layout_below=\"@+id/type1\">\r\n\r\n                  <TextView\r\n                      android:id=\"@+id/txtaddress\"\r\n                      android:layout_width=\"match_parent\"\r\n                      android:layout_height=\"wrap_content\"\r\n                      android:gravity=\"start\"\r\n                      android:minLines=\"3\"\r\n                      android:textAppearance=\"@style/TextAppearance.AppCompat.Small\" />\r\n\r\n              </com.google.android.material.textfield.TextInputLayout>\r\n\r\n\r\n          </RelativeLayout>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <Button\r\n              android:id=\"@+id/btn_save\"\r\n              android:background=\"@color/colorPrimary\"\r\n              android:layout_width=\"match_parent\"\r\n              android:layout_height=\"wrap_content\"\r\n              android:layout_margin=\"20dp\"\r\n              android:text=\"Place Order\"\r\n              android:textColor=\"@color/white\" />\r\n\r\n      </LinearLayout>\r\n\r\n  </ScrollView>\r\n\r\n    <ProgressBar\r\n        android:id=\"@+id/progressBar\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerInParent=\"true\"\r\n        android:visibility=\"gone\" />\r\n\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_view_uploadpres.xml	(revision ce16e6637b08175bfb1d14ad608a40eebd8108fe)
+++ app/src/main/res/layout/activity_view_uploadpres.xml	(date 1609130587762)
@@ -88,11 +88,13 @@
                       android:layout_gravity="center_vertical"
                       android:layout_weight="1"
                       android:gravity="center"
-                      android:text="Upload\nPrescription"
+                      android:text="Upload Prescription"
+                      android:padding="@dimen/dimen_2dp"
                       android:textColor="@color/colorPrimary"
                       android:textSize="13sp"
-                      android:layout_margin="@dimen/dimen_5dp"
-                      android:textStyle="bold" />
+                      android:textStyle="bold"
+
+                       />
 
                   <LinearLayout
                       android:layout_width="0sp"
@@ -186,11 +188,11 @@
                       android:layout_gravity="center_vertical"
                       android:layout_weight="1"
                       android:gravity="center"
-                      android:text="Upload\nPrescription"
+                      android:text="Upload Prescription"
+                      android:padding="@dimen/dimen_2dp"
                       android:textColor="@color/colorPrimary"
                       android:textSize="13sp"
-                      android:layout_margin="@dimen/dimen_5dp"
-                      android:textStyle="bold" />
+                      android:textStyle="bold"/>
 
                   <LinearLayout
                       android:layout_width="0sp"
@@ -282,10 +284,10 @@
                       android:layout_gravity="center_vertical"
                       android:layout_weight="1"
                       android:gravity="center"
-                      android:text="Upload\nPrescription"
+                      android:text="Upload Prescription"
+                      android:padding="@dimen/dimen_2dp"
                       android:textColor="@color/colorPrimary"
                       android:textSize="13sp"
-                      android:layout_margin="@dimen/dimen_5dp"
                       android:textStyle="bold" />
 
                   <LinearLayout
@@ -376,10 +378,10 @@
                       android:layout_gravity="center_vertical"
                       android:layout_weight="1"
                       android:gravity="center"
-                      android:text="Upload\nPrescription"
+                      android:text="Upload Prescription"
+                      android:padding="@dimen/dimen_2dp"
                       android:textColor="@color/colorPrimary"
                       android:textSize="13sp"
-                      android:layout_margin="@dimen/dimen_5dp"
                       android:textStyle="bold" />
 
                   <LinearLayout
Index: app/src/main/java/com/ifresh/customer/activity/CheckoutActivity_2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ifresh.customer.activity;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.Vibrator;\r\nimport android.text.Html;\r\nimport android.text.format.DateFormat;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptor;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.CameraPosition;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.ifresh.customer.R;\r\nimport com.ifresh.customer.helper.ApiConfig;\r\nimport com.ifresh.customer.helper.Constant;\r\nimport com.ifresh.customer.helper.DatabaseHelper;\r\nimport com.ifresh.customer.helper.PaymentModelClass;\r\nimport com.ifresh.customer.helper.Session;\r\nimport com.ifresh.customer.helper.StorePrefrence;\r\nimport com.ifresh.customer.helper.VolleyCallback;\r\nimport com.ifresh.customer.kotlin.FillAddress;\r\nimport com.ifresh.customer.model.Mesurrment;\r\nimport com.ifresh.customer.model.PaymentType;\r\nimport com.ifresh.customer.model.Slot;\r\nimport com.razorpay.Checkout;\r\nimport com.razorpay.PaymentResultListener;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\n\r\n;\r\n\r\n@SuppressLint(\"SetTextI18n\")\r\npublic class CheckoutActivity_2 extends AppCompatActivity implements OnMapReadyCallback, PaymentResultListener {\r\n    Context ctx = CheckoutActivity_2.this;\r\n    private String TAG = CheckoutActivity_2.class.getSimpleName();\r\n    public Toolbar toolbar;\r\n    public TextView tvTaxPercent, tvTaxAmt, tvDelivery, tvPayment, tvLocation, tvAlert, tvWltBalance, tvCity, tvName, tvTotal, tvDeliveryCharge, tvSubTotal, tvCurrent, tvWallet, tvPromoCode, tvPCAmount, tvPlaceOrder, tvConfirmOrder, tvPreTotal,txt_default_add;\r\n    LinearLayout lytPayOption, lytTax, lytOrderList, lytWallet, lytCLocation, paymentLyt, deliveryLyt, lytPayU, lytPayPal, lytRazorPay, dayLyt,linear_adtype,linear_view;\r\n    Button btnApply;\r\n    EditText edtPromoCode;\r\n    public ProgressBar prgLoading;\r\n    Session session;\r\n    StorePrefrence storePrefrence;\r\n    JSONArray qtyList, variantIdList, nameList, frencid, frenpid, prodvIdList, priceList,imagenameList;\r\n    DatabaseHelper databaseHelper;\r\n    Double total, subtotal;\r\n    String deliveryCharge = \"0\",address_id,send_address_param=\"\";\r\n    PaymentModelClass paymentModelClass;\r\n    SupportMapFragment mapFragment;\r\n    CheckBox chWallet, chHome, chWork,chOther;\r\n    public RadioButton rToday, rTomorrow;\r\n    public Activity activity = CheckoutActivity_2.this;\r\n\r\n\r\n    String deliveryTime = \"\", deliveryTime_id,deliveryDay = \"\", pCode = \"\", paymentMethod = \"\", label = \"\", appliedCode = \"\", deliveryDay_val=\"\";\r\n    String paymentMethod_id;\r\n    RadioButton rbCod, rbPayU, rbPayPal, rbRazorPay;\r\n    ProgressDialog mProgressDialog;\r\n    RelativeLayout walletLyt, mainLayout;\r\n    Map<String, String> razorParams;\r\n    public String razorPayId;\r\n    double usedBalance = 0;\r\n    RecyclerView recyclerView;\r\n    ArrayList<Slot> slotList;\r\n    ArrayList<PaymentType> payment_typeList;\r\n\r\n    SlotAdapter adapter;\r\n    ProgressBar pBar;\r\n    public boolean isApplied;\r\n    double taxAmt = 0.0;\r\n    double dCharge = 0.0, pCodeDiscount = 0.0;\r\n    TextView msgtxt,tvnoAddress;\r\n    ImageView imgedit;\r\n    JSONArray order_arr;\r\n\r\n    JSONObject obj_sendParam;\r\n\r\n    Boolean is_address_save=false, is_default_address_save=false;\r\n    ArrayList<Mesurrment> measurement_list;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState)\r\n    {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_checkout);\r\n        mainLayout = findViewById(R.id.mainLayout);\r\n\r\n        toolbar = findViewById(R.id.toolbar);\r\n\r\n        setSupportActionBar(toolbar);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n        paymentModelClass = new PaymentModelClass(CheckoutActivity_2.this);\r\n        databaseHelper = new DatabaseHelper(CheckoutActivity_2.this);\r\n        session = new Session(CheckoutActivity_2.this);\r\n        storePrefrence = new StorePrefrence(CheckoutActivity_2.this);\r\n        //Log.d(\"KEYID\",session.getData(Session.KEY_ID));\r\n        txt_default_add = findViewById(R.id.txt_default_add);\r\n        linear_view = findViewById(R.id.linear_view);\r\n        linear_adtype = findViewById(R.id.linear_adtype);\r\n        imgedit = findViewById(R.id.imgedit);\r\n        tvnoAddress = findViewById(R.id.tvnoAddress);\r\n        recyclerView = findViewById(R.id.recyclerView);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(getApplicationContext()));\r\n        msgtxt = findViewById(R.id.msgtxt);\r\n        pBar = findViewById(R.id.pBar);\r\n        lytTax = findViewById(R.id.lytTax);\r\n        tvTaxAmt = findViewById(R.id.tvTaxAmt);\r\n        tvTaxPercent = findViewById(R.id.tvTaxPercent);\r\n        dayLyt = findViewById(R.id.dayLyt);\r\n        rbCod = findViewById(R.id.rbcod);\r\n        rbPayU = findViewById(R.id.rbPayU);\r\n        rbPayPal = findViewById(R.id.rbPayPal);\r\n        rbRazorPay = findViewById(R.id.rbRazorPay);\r\n        tvLocation = findViewById(R.id.tvLocation);\r\n        tvDelivery = findViewById(R.id.tvDelivery);\r\n        tvPayment = findViewById(R.id.tvPayment);\r\n        tvPCAmount = findViewById(R.id.tvPCAmount);\r\n        tvPromoCode = findViewById(R.id.tvPromoCode);\r\n        tvAlert = findViewById(R.id.tvAlert);\r\n        edtPromoCode = findViewById(R.id.edtPromoCode);\r\n        lytPayPal = findViewById(R.id.lytPayPal);\r\n        lytRazorPay = findViewById(R.id.lytRazorPay);\r\n        lytPayU = findViewById(R.id.lytPayU);\r\n        chWallet = findViewById(R.id.chWallet);\r\n        chHome = findViewById(R.id.chHome);\r\n        chWork = findViewById(R.id.chWork);\r\n        chOther = findViewById(R.id.chOther);\r\n        tvSubTotal = findViewById(R.id.tvSubTotal);\r\n        tvDeliveryCharge = findViewById(R.id.tvDeliveryCharge);\r\n        tvTotal = findViewById(R.id.tvTotal);\r\n        tvName = findViewById(R.id.tvName);\r\n        tvCity = findViewById(R.id.tvCity);\r\n        tvCurrent = findViewById(R.id.tvCurrent);\r\n        lytPayOption = findViewById(R.id.lytPayOption);\r\n        lytOrderList = findViewById(R.id.lytOrderList);\r\n        lytCLocation = findViewById(R.id.lytCLocation);\r\n        lytWallet = findViewById(R.id.lytWallet);\r\n        walletLyt = findViewById(R.id.walletLyt);\r\n        paymentLyt = findViewById(R.id.paymentLyt);\r\n        deliveryLyt = findViewById(R.id.deliveryLyt);\r\n        tvWallet = findViewById(R.id.tvWallet);\r\n        prgLoading = findViewById(R.id.prgLoading);\r\n        tvPlaceOrder = findViewById(R.id.tvPlaceOrder);\r\n        tvConfirmOrder = findViewById(R.id.tvConfirmOrder);\r\n        lytWallet.setVisibility(View.GONE);\r\n        rToday = findViewById(R.id.rToday);\r\n        rTomorrow = findViewById(R.id.rTomorrow);\r\n        tvWltBalance = findViewById(R.id.tvWltBalance);\r\n        tvPreTotal = findViewById(R.id.tvPreTotal);\r\n        btnApply = findViewById(R.id.btnApply);\r\n        tvLocation.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_my_location, 0, 0, 0);\r\n        tvCurrent.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_address, 0, 0, 0);\r\n        tvDelivery.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_next_process, 0, 0, 0);\r\n        tvPayment.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_next_process_gray, 0, 0, 0);\r\n        tvConfirmOrder.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.ic_confirm, 0);\r\n        tvPlaceOrder.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.ic_process, 0);\r\n        tvPreTotal.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_info, 0, 0, 0);\r\n\r\n        ApiConfig.getWalletBalance(activity, session);\r\n        callSettingApi_messurment();\r\n        GetTimeSlots_2();\r\n        GetPayment_methodtype();\r\n        setPaymentMethod();\r\n        try {\r\n            qtyList = new JSONArray(session.getData(Session.KEY_Orderqty));\r\n            variantIdList = new JSONArray(session.getData(Session.KEY_Ordervid));\r\n            frencid = new JSONArray(session.getData(Session.KEY_Frencid));\r\n            frenpid = new JSONArray(session.getData(Session.KEY_Frenpid));\r\n            priceList = new JSONArray(session.getData(Session.KEY_Price));\r\n            nameList = new JSONArray(session.getData(Session.KEY_Ordername));\r\n            prodvIdList = new JSONArray(session.getData(Session.KEY_Prodvid));\r\n            imagenameList = new JSONArray(session.getData(Session.KEY_Imagename));\r\n\r\n            JSONObject data ;\r\n            order_arr = new JSONArray();\r\n            for(int i=0; i<variantIdList.length();i++)\r\n            {\r\n                data = new JSONObject();\r\n                try{\r\n                    data.put(\"productId\", prodvIdList.get(i));\r\n                    data.put(\"frproductvarId\", frenpid.get(i));\r\n                    data.put(\"franchiseId\", frencid.get(i));\r\n                    data.put(\"price\", priceList.get(i));\r\n                    data.put(\"frproductId\",frenpid.get(i));\r\n                    data.put(\"qty\", qtyList.get(i));\r\n                    data.put(\"image_url\", imagenameList.get(i));\r\n\r\n                    String[] name_0 = nameList.getString(i).split(\"@\");\r\n\r\n\r\n                    String measurmentId=\"\";\r\n                    for(int p = 0; p<measurement_list.size(); p++)\r\n                    {\r\n                        Mesurrment mesurrment1 = measurement_list.get(p);\r\n                        if(mesurrment1.getAbv().equalsIgnoreCase(name_0[0]))\r\n                        {\r\n                            measurmentId = mesurrment1.getId();\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    //Log.d(\"measurmentId=>\",measurmentId);\r\n\r\n                    /*if(name_0[0].equalsIgnoreCase(\"kg\"))\r\n                    {\r\n                        measurmentId=\"1\";\r\n                    }\r\n                    else if(name_0[0].equalsIgnoreCase(\"gm\"))\r\n                    {\r\n                        measurmentId=\"2\";\r\n                    }\r\n                    else if(name_0[0].equalsIgnoreCase(\"ltr\"))\r\n                    {\r\n                        measurmentId=\"3\";\r\n                    }\r\n                    else if(name_0[0].equalsIgnoreCase(\"ml\"))\r\n                    {\r\n                        measurmentId=\"4\";\r\n                    }\r\n                    else if(name_0[0].equalsIgnoreCase(\"pack\"))\r\n                    {\r\n                        measurmentId=\"5\";\r\n                    }\r\n                    else if(name_0[0].equalsIgnoreCase(\"pcs\"))\r\n                    {\r\n                        measurmentId=\"6\";\r\n                    }\r\n                    else if(name_0[0].equalsIgnoreCase(\"m\"))\r\n                    {\r\n                        measurmentId=\"7\";\r\n                    }\r\n                    else if(name_0[0].equalsIgnoreCase(\"x\"))\r\n                    {\r\n                        measurmentId=\"8\";\r\n                    }*/\r\n\r\n                    //data.put(\"measurement\",measurmentId);\r\n\r\n                    String[] name_1 =  name_0[1].split(\"==\");\r\n                    data.put(\"measurement\",name_1[0]);\r\n                    data.put(\"unit\",  measurmentId);\r\n                    //data.put(\"unit\",  name_1[0]);\r\n\r\n                    String[] name_list = nameList.getString(i).split(\"@\");\r\n                    String[] name = name_list[1].split(\"==\");\r\n                    data.put(\"title\",  name[1]);\r\n                    order_arr.put(data);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    ex.printStackTrace();\r\n                }\r\n            }\r\n\r\n            for (int i = 0; i < nameList.length(); i++)\r\n            {\r\n                LinearLayout linearLayout = new LinearLayout(this);\r\n                linearLayout.setWeightSum(4f);\r\n                String[] name_0 = nameList.getString(i).split(\"@\");\r\n\r\n                String[] name = name_0[1].split(\"==\");\r\n\r\n                TextView tv1 = new TextView(this);\r\n\r\n\r\n                tv1.setText(name[1] + \" (\" + name[0]  + name_0[0] + \")\");\r\n                LinearLayout.LayoutParams lp = new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT);\r\n                lp.weight = 1.5f;\r\n                tv1.setLayoutParams(lp);\r\n                tv1.setTextAlignment(View.TEXT_ALIGNMENT_VIEW_START);\r\n                linearLayout.addView(tv1);\r\n\r\n                TextView tv2 = new TextView(this);\r\n                tv2.setText(qtyList.getString(i));\r\n                LinearLayout.LayoutParams lp1 = new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT);\r\n                lp1.weight = 0.7f;\r\n                tv2.setLayoutParams(lp1);\r\n                tv2.setGravity(Gravity.CENTER);\r\n                linearLayout.addView(tv2);\r\n\r\n                TextView tv3 = new TextView(this);\r\n                tv3.setText(Constant.SETTING_CURRENCY_SYMBOL + name[2]);\r\n                LinearLayout.LayoutParams lp2 = new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT);\r\n                lp2.weight = 0.8f;\r\n                tv3.setLayoutParams(lp2);\r\n                tv3.setGravity(Gravity.CENTER);\r\n                linearLayout.addView(tv3);\r\n\r\n                TextView tv4 = new TextView(this);\r\n                tv4.setText(Constant.SETTING_CURRENCY_SYMBOL + name[3]);\r\n                LinearLayout.LayoutParams lp3 = new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT);\r\n                lp3.weight = 1f;\r\n                tv4.setLayoutParams(lp3);\r\n                tv4.setTextAlignment(View.TEXT_ALIGNMENT_VIEW_END);\r\n                linearLayout.addView(tv4);\r\n                lytOrderList.addView(linearLayout);\r\n            }\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);\r\n        mapFragment.getMapAsync(this);\r\n\r\n        SetDataTotal();\r\n\r\n        if(total<Constant.SETTING_MINIMUM_AMOUNT_FOR_FREE_DELIVERY)\r\n        {\r\n            //delivery charge will include\r\n            msgtxt.setText(storePrefrence.getString(\"msg_below_300\"));\r\n            msgtxt.setTextColor(CheckoutActivity_2.this.getResources().getColor(R.color.red));\r\n        }\r\n        else if(total>=Constant.SETTING_MINIMUM_AMOUNT_FOR_FREE_DELIVERY)\r\n        {\r\n            //delivery charge will exclude\r\n            msgtxt.setText(storePrefrence.getString(\"msg_above_300\"));\r\n            msgtxt.setTextColor(CheckoutActivity_2.this.getResources().getColor(R.color.colorPrimary));\r\n        }\r\n\r\n        chWallet.setTag(\"false\");\r\n        ApiConfig.getWalletBalance(activity,session);\r\n\r\n        tvWltBalance.setText(getString(R.string.total_balance) + Constant.SETTING_CURRENCY_SYMBOL + Constant.WALLET_BALANCE);\r\n\r\n        if (Constant.WALLET_BALANCE == 0)\r\n        {\r\n            chWallet.setEnabled(false);\r\n            walletLyt.setEnabled(false);\r\n        }\r\n        //Log.d(\"bal\", \"\"+Constant.WALLET_BALANCE);\r\n        chWallet.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (chWallet.getTag().equals(\"false\"))\r\n                {\r\n                    chWallet.setChecked(true);\r\n                    lytWallet.setVisibility(View.VISIBLE);\r\n                    Log.d(\"WALLET_BALANCE\", \"\"+Constant.WALLET_BALANCE);\r\n                    Log.d(\"Total\", \"\"+total);\r\n\r\n                        if(total<Constant.SETTING_MINIMUM_AMOUNT_FOR_FREE_DELIVERY)\r\n                        {\r\n                            //delivery charge will include\r\n                            msgtxt.setText(storePrefrence.getString(\"msg_below_300\"));\r\n                            msgtxt.setTextColor(CheckoutActivity_2.this.getResources().getColor(R.color.red));\r\n                        }\r\n                        else if(total>=Constant.SETTING_MINIMUM_AMOUNT_FOR_FREE_DELIVERY)\r\n                        {\r\n                            //delivery charge will exclude\r\n                            msgtxt.setText(storePrefrence.getString(\"msg_above_300\"));\r\n                            msgtxt.setTextColor(CheckoutActivity_2.this.getResources().getColor(R.color.colorPrimary));\r\n                        }\r\n\r\n                    if (Constant.WALLET_BALANCE >= total)\r\n                    {\r\n                        usedBalance = total;\r\n                        tvWltBalance.setText(getString(R.string.remaining_wallet_balance) + Constant.SETTING_CURRENCY_SYMBOL + (Constant.WALLET_BALANCE - usedBalance));\r\n                        paymentMethod = \"wallet\";\r\n                        paymentMethod_id = \"5\";\r\n                        lytPayOption.setVisibility(View.GONE);\r\n                    } else {\r\n                        usedBalance = Constant.WALLET_BALANCE;\r\n                        tvWltBalance.setText(getString(R.string.remaining_wallet_balance) + Constant.SETTING_CURRENCY_SYMBOL + \"0.0\");\r\n                        lytPayOption.setVisibility(View.VISIBLE);\r\n                    }\r\n                    subtotal = (subtotal - usedBalance);\r\n                    tvWallet.setText(\"-\" + Constant.SETTING_CURRENCY_SYMBOL + usedBalance);\r\n                    tvSubTotal.setText(Constant.SETTING_CURRENCY_SYMBOL + DatabaseHelper.decimalformatData.format(subtotal));\r\n                    chWallet.setTag(\"true\");\r\n                } else {\r\n                    walletUncheck();\r\n                }\r\n            }\r\n        });\r\n\r\n        tvnoAddress.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent;\r\n                if(is_address_save)\r\n                {\r\n                    intent = new Intent(CheckoutActivity_2.this, SetDefaultAddress_2.class);\r\n                }\r\n                else{\r\n                    intent = new Intent(CheckoutActivity_2.this, FillAddress.class);\r\n                    intent.putExtra(\"userId\", session.getData(session.KEY_id));\r\n                }\r\n                //intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        });\r\n\r\n\r\n        imgedit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(CheckoutActivity_2.this, FillAddress.class);\r\n                intent.putExtra(\"userId\", session.getData(session.KEY_id));\r\n                startActivity(intent);\r\n\r\n            }\r\n        });\r\n\r\n        //PromoCodeCheck();\r\n\r\n    }\r\n\r\n    private void GetPayment_methodtype()\r\n    {\r\n        try{\r\n            String str_paymenttype = session.getData(Constant.KEY_PAYMENT_TYPE);\r\n            JSONArray jsonArray = new JSONArray(str_paymenttype);\r\n            payment_typeList = new ArrayList<>();\r\n            for (int i = 0; i < jsonArray.length(); i++) {\r\n                JSONObject object1 = jsonArray.getJSONObject(i);\r\n                payment_typeList.add(new PaymentType(object1.getString(\"id\"), object1.getString(\"title\"), object1.getString(\"abv\")));\r\n            }\r\n        }\r\n        catch (JSONException ex)\r\n        {\r\n            ex.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void walletUncheck() {\r\n        lytPayOption.setVisibility(View.VISIBLE);\r\n        tvWltBalance.setText(getString(R.string.total_balance) + Constant.SETTING_CURRENCY_SYMBOL + Constant.WALLET_BALANCE);\r\n        lytWallet.setVisibility(View.GONE);\r\n        chWallet.setChecked(false);\r\n        chWallet.setTag(\"false\");\r\n        SetDataTotal();\r\n    }\r\n\r\n    public void setPaymentMethod()\r\n    {\r\n        lytPayPal.setVisibility(View.GONE);\r\n        lytPayU.setVisibility(View.GONE);\r\n        lytRazorPay.setVisibility(View.VISIBLE);\r\n\r\n\r\n        rbCod.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                rbCod.setChecked(true);\r\n                rbPayU.setChecked(false);\r\n                rbPayPal.setChecked(false);\r\n                rbRazorPay.setChecked(false);\r\n                paymentMethod = rbCod.getTag().toString();\r\n                paymentMethod_id =  \"1\";\r\n            }\r\n        });\r\n        rbPayU.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                rbPayU.setChecked(true);\r\n                rbCod.setChecked(false);\r\n                rbPayPal.setChecked(false);\r\n                rbRazorPay.setChecked(false);\r\n                paymentMethod = rbPayU.getTag().toString();\r\n                paymentMethod_id =  \"2\";\r\n\r\n            }\r\n        });\r\n\r\n        rbPayPal.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                rbPayPal.setChecked(true);\r\n                rbCod.setChecked(false);\r\n                rbPayU.setChecked(false);\r\n                rbRazorPay.setChecked(false);\r\n                paymentMethod = rbPayPal.getTag().toString();\r\n                paymentMethod_id =  \"3\";\r\n\r\n            }\r\n        });\r\n\r\n        rbRazorPay.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                rbRazorPay.setChecked(true);\r\n                rbPayPal.setChecked(false);\r\n                rbCod.setChecked(false);\r\n                rbPayU.setChecked(false);\r\n                paymentMethod = rbRazorPay.getTag().toString();\r\n                paymentMethod_id =  \"4\";\r\n                Checkout.preload(getApplicationContext());\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private String getTime() {\r\n        String delegate = \"HH:mm aaa\";\r\n        return (String) DateFormat.format(delegate, Calendar.getInstance().getTime());\r\n    }\r\n\r\n\r\n    public void SetDataTotal() {\r\n        //Log.d(\"minamount\", \"\"+Constant.SETTING_MINIMUM_AMOUNT_FOR_FREE_DELIVERY);\r\n        //Log.d(\"delivery charge\", \"\"+Constant.SETTING_MINIMUM_AMOUNT_FOR_FREE_DELIVERY);\r\n\r\n        total = databaseHelper.getTotalCartAmt(session);\r\n        tvTotal.setText(Constant.SETTING_CURRENCY_SYMBOL + DatabaseHelper.decimalformatData.format(total));\r\n        subtotal = total;\r\n        if (total <= Constant.SETTING_MINIMUM_AMOUNT_FOR_FREE_DELIVERY)\r\n        {\r\n            tvDeliveryCharge.setText(Constant.SETTING_CURRENCY_SYMBOL + Constant.SETTING_DELIVERY_CHARGE);\r\n            subtotal = subtotal + Constant.SETTING_DELIVERY_CHARGE;\r\n            deliveryCharge = Constant.SETTING_DELIVERY_CHARGE + \"\";\r\n        } else {\r\n            tvDeliveryCharge.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n            tvDeliveryCharge.setText(getResources().getString(R.string.free));\r\n            deliveryCharge = \"0\";\r\n        }\r\n        Log.d(\"tax\", \"\"+Constant.SETTING_TAX);\r\n        taxAmt = ((Constant.SETTING_TAX * total) / 100);\r\n\r\n        if (pCode.isEmpty()) {\r\n            subtotal = (subtotal + taxAmt);\r\n        } else\r\n            subtotal = (subtotal + taxAmt - pCodeDiscount);\r\n\r\n        tvTaxPercent.setText(\"Tax(\" + Constant.SETTING_TAX + \"%)\");\r\n        tvTaxAmt.setText(\"+ \" + Constant.SETTING_CURRENCY_SYMBOL + DatabaseHelper.decimalformatData.format(taxAmt));\r\n        tvSubTotal.setText(Constant.SETTING_CURRENCY_SYMBOL + DatabaseHelper.decimalformatData.format(subtotal));\r\n    }\r\n\r\n\r\n    public void OnBtnClick(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.tvConfirmOrder:\r\n                if(subtotal >= Constant.SETTING_MINIMUM_AMOUNT_FOR_FREE_DELIVERY)\r\n                {\r\n                    tvPayment.setTextColor(ContextCompat.getColor(getApplicationContext(), R.color.colorPrimary));\r\n                    tvPayment.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_next_process, 0, 0, 0);\r\n                    tvDelivery.setTextColor(ContextCompat.getColor(getApplicationContext(), R.color.light_green));\r\n                    tvDelivery.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_check, 0, 0, 0);\r\n                    tvConfirmOrder.setVisibility(View.GONE);\r\n                    tvPlaceOrder.setVisibility(View.VISIBLE);\r\n                    paymentLyt.setVisibility(View.VISIBLE);\r\n                    deliveryLyt.setVisibility(View.GONE);\r\n                }\r\n                else{\r\n\r\n                    tvPayment.setTextColor(ContextCompat.getColor(getApplicationContext(), R.color.gray));\r\n                    tvPayment.setEnabled(false);\r\n                }\r\n\r\n\r\n\r\n\r\n                break;\r\n            case R.id.tvLocation:\r\n                if (tvLocation.getTag().equals(\"hide\")) {\r\n                    tvLocation.setTag(\"show\");\r\n                    lytCLocation.setVisibility(View.VISIBLE);\r\n                } else {\r\n                    tvLocation.setTag(\"hide\");\r\n                    lytCLocation.setVisibility(View.GONE);\r\n                }\r\n                break;\r\n            case R.id.tvPlaceOrder:\r\n                PlaceOrderProcess();\r\n                break;\r\n            case R.id.imgedit: {\r\n\r\n                if(databaseHelper.getTotalCartAmt(session) > 0)\r\n                {\r\n                    if(is_default_address_save)\r\n                    {\r\n                        Intent intent = new Intent(CheckoutActivity_2.this, FillAddress.class);\r\n                        intent.putExtra(\"userId\", session.getData(Session.KEY_id));\r\n                        startActivity(intent);\r\n                    }\r\n                }\r\n            }\r\n                break;\r\n            case R.id.tvUpdate:\r\n                if (ApiConfig.isGPSEnable(CheckoutActivity_2.this))\r\n                    //startActivity(new Intent(CheckoutActivity.this, MapActivity.class));\r\n                    startActivity(new Intent(CheckoutActivity_2.this, MapsActivity.class));\r\n                else\r\n                    ApiConfig.displayLocationSettingsRequest(CheckoutActivity_2.this);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    public void PlaceOrderProcess() {\r\n        if (deliveryDay.length() == 0) {\r\n            Toast.makeText(CheckoutActivity_2.this, getString(R.string.select_delivery_day), Toast.LENGTH_SHORT).show();\r\n            return;\r\n        } else if (deliveryTime.length() == 0) {\r\n            Toast.makeText(CheckoutActivity_2.this, getString(R.string.select_delivery_time), Toast.LENGTH_SHORT).show();\r\n            return;\r\n        } else if (paymentMethod.isEmpty()) {\r\n            Toast.makeText(CheckoutActivity_2.this, getString(R.string.select_payment_method), Toast.LENGTH_SHORT).show();\r\n            return;\r\n        }\r\n\r\n        final Map<String, String> sendparams = new HashMap<String, String>();\r\n        obj_sendParam = new JSONObject();\r\n        try{\r\n            obj_sendParam.put(\"userId\", session.getData(Session.KEY_id));\r\n            obj_sendParam.put(\"franchiseId\", frencid.get(0));\r\n            obj_sendParam.put(\"delivery_address\", send_address_param);\r\n            obj_sendParam.put(\"delivery_day\", deliveryDay_val);\r\n            obj_sendParam.put(\"delivery_time_id\", deliveryTime_id);\r\n            obj_sendParam.put(\"delivery_time\", deliveryTime);\r\n            obj_sendParam.put(\"version_code\", String.valueOf(storePrefrence.getInt(\"version_code\")));\r\n            obj_sendParam.put(\"tax_percent\", String.valueOf(Constant.SETTING_TAX));\r\n            obj_sendParam.put(\"tax_amount\", DatabaseHelper.decimalformatData.format(taxAmt));\r\n            obj_sendParam.put(\"total\",  DatabaseHelper.decimalformatData.format(total));\r\n            obj_sendParam.put(\"final_total\",  DatabaseHelper.decimalformatData.format(subtotal));\r\n            obj_sendParam.put(\"phone_no\", session.getData(Session.KEY_mobile));\r\n            obj_sendParam.put(\"delivery_charge\", deliveryCharge);\r\n            obj_sendParam.put(\"key_wallet_used\", chWallet.getTag().toString());\r\n            obj_sendParam.put(\"key_wallet_balance\", String.valueOf(usedBalance));\r\n            obj_sendParam.put(\"payment_method\", paymentMethod_id);\r\n            obj_sendParam.put(\"pincode\", session.getData(\"pincode\"));\r\n            obj_sendParam.put(\"latitude\", session.getData(Session.KEY_LATITUDE));\r\n            obj_sendParam.put(\"longitude\", session.getData(Session.KEY_LONGITUDE));\r\n            obj_sendParam.put(\"email\", session.getData(Session.KEY_email));\r\n            obj_sendParam.put(\"order_val\", order_arr);\r\n            obj_sendParam.put(\"razorpay_payment_id\", \"\");\r\n            obj_sendParam.put(\"razorpay_amt\", \"\");\r\n\r\n            String order_param = obj_sendParam.toString();\r\n            sendparams.put(\"order_param\", order_param);\r\n\r\n            System.out.println(\"=====param\" + sendparams.toString());\r\n\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            ex.printStackTrace();\r\n        }\r\n\r\n        final AlertDialog.Builder alertDialog = new AlertDialog.Builder(CheckoutActivity_2.this);\r\n        LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        final View dialogView = inflater.inflate(R.layout.dialog_order_confirm, null);\r\n        alertDialog.setView(dialogView);\r\n        alertDialog.setCancelable(true);\r\n        final AlertDialog dialog = alertDialog.create();\r\n\r\n        Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        TextView tvCancel, tvConfirm, tvItemTotal, tvTaxPercent1, tvTaxAmt1, tvDeliveryCharge1, tvTotal1, tvPromoCode1, tvPCAmount1, tvWallet1, tvFinalTotal1;\r\n        LinearLayout lytPromo, lytWallet;\r\n\r\n        lytPromo = dialogView.findViewById(R.id.lytPromo);\r\n        lytWallet = dialogView.findViewById(R.id.lytWallet);\r\n        tvItemTotal = dialogView.findViewById(R.id.tvItemTotal);\r\n        tvTaxPercent1 = dialogView.findViewById(R.id.tvTaxPercent);\r\n        tvTaxAmt1 = dialogView.findViewById(R.id.tvTaxAmt);\r\n        tvDeliveryCharge1 = dialogView.findViewById(R.id.tvDeliveryCharge);\r\n        tvTotal1 = dialogView.findViewById(R.id.tvTotal);\r\n        tvPromoCode1 = dialogView.findViewById(R.id.tvPromoCode);\r\n        tvPCAmount1 = dialogView.findViewById(R.id.tvPCAmount);\r\n        tvWallet1 = dialogView.findViewById(R.id.tvWallet);\r\n        tvFinalTotal1 = dialogView.findViewById(R.id.tvFinalTotal);\r\n        tvCancel = dialogView.findViewById(R.id.tvCancel);\r\n        tvConfirm = dialogView.findViewById(R.id.tvConfirm);\r\n        String orderMessage = \"\";\r\n        if (!pCode.isEmpty())\r\n            lytPromo.setVisibility(View.VISIBLE);\r\n        else\r\n            lytPromo.setVisibility(View.GONE);\r\n\r\n        if (chWallet.getTag().toString().equals(\"true\"))\r\n            lytWallet.setVisibility(View.VISIBLE);\r\n        else\r\n            lytWallet.setVisibility(View.GONE);\r\n\r\n        dCharge = tvDeliveryCharge.getText().toString().equalsIgnoreCase(\"free\") ? 0.0 : Constant.SETTING_DELIVERY_CHARGE;\r\n\r\n        double totalAfterTax = (total + dCharge + taxAmt);\r\n        tvItemTotal.setText(Constant.SETTING_CURRENCY_SYMBOL + total);\r\n        tvDeliveryCharge1.setText(tvDeliveryCharge.getText().toString());\r\n\r\n        tvTaxPercent1.setText(getString(R.string.tax) + \"(\" + Constant.SETTING_TAX + \"%) :\");\r\n        tvTaxAmt1.setText(tvTaxAmt.getText().toString());\r\n        tvTotal1.setText(Constant.SETTING_CURRENCY_SYMBOL + totalAfterTax);\r\n        tvPCAmount1.setText(tvPCAmount.getText().toString());\r\n        tvWallet1.setText(\"- \" + Constant.SETTING_CURRENCY_SYMBOL + usedBalance);\r\n        tvFinalTotal1.setText(Constant.SETTING_CURRENCY_SYMBOL + subtotal);\r\n\r\n        tvConfirm.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v)\r\n            {\r\n                //vibrate phone\r\n                final Vibrator vibe = (Vibrator) CheckoutActivity_2.this.getSystemService(Context.VIBRATOR_SERVICE);\r\n                vibe.vibrate(80);\r\n\r\n                if (paymentMethod.equals(getResources().getString(R.string.codpaytype)) || paymentMethod.equals(\"wallet\"))\r\n                {\r\n                    ApiConfig.RequestToVolley_POST(new VolleyCallback()\r\n                    {\r\n                        @Override\r\n                        public void onSuccess(boolean result, String response) {\r\n                            if (result) {\r\n                                try {\r\n                                    System.out.println(\"====place order res \" + response);\r\n                                    JSONObject object = new JSONObject(response);\r\n                                    if (object.getInt(Constant.SUCESS)==200)\r\n                                    {\r\n                                        Toast.makeText(getApplicationContext(), object.getString(\"msg\"), Toast.LENGTH_SHORT).show();\r\n                                        if (chWallet.getTag().toString().equals(\"true\"))\r\n                                            ApiConfig.getWalletBalance(CheckoutActivity_2.this, session);\r\n                                        dialog.dismiss();\r\n                                        startActivity(new Intent(CheckoutActivity_2.this, OrderPlacedActivity.class));\r\n                                        finish();\r\n\r\n                                    } else {\r\n                                        Toast.makeText(getApplicationContext(), object.getString(\"msg\"), Toast.LENGTH_SHORT).show();\r\n                                    }\r\n                                } catch (JSONException e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                            }\r\n                            //  System.out.println(\"========order=======\" + response);\r\n                            Log.d(\"url\", Constant.BASEPATH + Constant.GET_ORDERSEND);\r\n                        }\r\n                    }, CheckoutActivity_2.this, Constant.BASEPATH + Constant.GET_ORDERSEND, sendparams, true);\r\n\r\n\r\n                    dialog.dismiss();\r\n                }\r\n                /*else if (paymentMethod.equals(getString(R.string.pay_u))) {\r\n                    dialog.dismiss();\r\n                    sendparams.put(Constant.USER_NAME, session.getData(Session.KEY_FIRSTNAME) +\" \"+ session.getData(Session.KEY_LASTNAME));\r\n                    paymentModelClass.OnPayClick(CheckoutActivity_2.this, sendparams);\r\n\r\n                }\r\n                else if (paymentMethod.equals(getString(R.string.paypal)))\r\n                {\r\n                    dialog.dismiss();\r\n                    sendparams.put(Constant.USER_NAME, session.getData(Session.KEY_FIRSTNAME) +\" \"+ session.getData(Session.KEY_LASTNAME));\r\n\r\n                    StartPayPalPayment(sendparams);\r\n                }*/\r\n                else if (paymentMethod.equals(getString(R.string.razor_pay)))\r\n                {\r\n                    dialog.dismiss();\r\n                    //sendparams.put(Constant.USER_NAME, session.getData(Session.KEY_FIRSTNAME) +\" \"+ session.getData(Session.KEY_LASTNAME));\r\n                    razorParams = sendparams;\r\n                    CreateOrderId();\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        tvCancel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n        dialog.show();\r\n    }\r\n\r\n\r\n    public void CreateOrderId() {\r\n        showProgressDialog(getString(R.string.loading));\r\n        Map<String, String> params = new HashMap<>();\r\n        final String[] amount = String.valueOf(subtotal*100).split(\"\\\\.\");\r\n        //params.put(\"amount\", \"\" + amount[0]);\r\n        //System.out.println(\"====params \" + params.toString());\r\n        final Handler handler = new Handler();\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                //Do something after 100ms\r\n                startPayment(String.valueOf(System.currentTimeMillis()), amount[0]);\r\n                hideProgressDialog();\r\n            }\r\n        }, 2000);\r\n\r\n    }\r\n\r\n    public void startPayment(String orderId, String payAmount)\r\n    {\r\n        Checkout checkout = new Checkout();\r\n        Log.d(\"Value=====>\", Constant.RAZOR_PAY_KEY_VALUE);\r\n\r\n        checkout.setKeyID(Constant.RAZOR_PAY_KEY_VALUE);\r\n        checkout.setImage(R.drawable.ic_launcher);\r\n        //Log.d(\"orderId\",orderId);\r\n        try {\r\n            JSONObject options = new JSONObject();\r\n            options.put(Constant.NAME, session.getData(Session.KEY_FIRSTNAME) + \" \"+ session.getData(Session.KEY_LASTNAME));\r\n            options.put(Constant.CURRENCY, \"INR\");\r\n            options.put(Constant.AMOUNT, payAmount);\r\n\r\n            JSONObject preFill = new JSONObject();\r\n            preFill.put(Constant.EMAIL, session.getData(Session.KEY_email));\r\n            preFill.put(Constant.CONTACT, session.getData(Session.KEY_mobile));\r\n            options.put(\"prefill\", preFill);\r\n            checkout.open(CheckoutActivity_2.this, options);\r\n        } catch (Exception e) {\r\n            Log.d(TAG, \"Error in starting Razorpay Checkout\", e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onPaymentSuccess(String razorpayPaymentID) {\r\n        try {\r\n            razorPayId = razorpayPaymentID;\r\n            PlaceOrder(paymentMethod, razorPayId, true, razorParams, \"Success\");\r\n\r\n        } catch (Exception e) {\r\n            Log.d(TAG, \"onPaymentSuccess  \", e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onPaymentError(int code, String response) {\r\n        try {\r\n            Toast.makeText(this, response, Toast.LENGTH_LONG).show();\r\n            Toast.makeText(this, \"Payment Failed\", Toast.LENGTH_SHORT).show();\r\n        } catch (Exception e) {\r\n            Log.d(TAG, \"onPaymentError  \", e);\r\n        }\r\n    }\r\n\r\n    public void PlaceOrder(final String paymentType, final String txnid, boolean issuccess, final Map<String, String> sendparams, final String status) {\r\n\r\n        showProgressDialog(getString(R.string.processing));\r\n        if (issuccess)\r\n        {\r\n            try{\r\n                obj_sendParam.put(\"razorpay_payment_id\", txnid);\r\n                obj_sendParam.put(\"razorpay_amt\", DatabaseHelper.decimalformatData.format(subtotal));\r\n                sendparams.put(\"order_param\", obj_sendParam.toString());\r\n               }\r\n            catch (Exception ex)\r\n            {\r\n                ex.printStackTrace();\r\n            }\r\n\r\n            ApiConfig.RequestToVolley_POST(new VolleyCallback() {\r\n                @Override\r\n                public void onSuccess(boolean result, String response)\r\n                {\r\n                    if (result) {\r\n                        try {\r\n                            JSONObject object = new JSONObject(response);\r\n                            if (object.getInt(Constant.SUCESS)==200)\r\n                            {\r\n                                Toast.makeText(getApplicationContext(), object.getString(\"msg\"), Toast.LENGTH_SHORT).show();\r\n                                if (chWallet.getTag().toString().equals(\"true\"))\r\n                                    ApiConfig.getWalletBalance(CheckoutActivity_2.this, session);\r\n                                startActivity(new Intent(CheckoutActivity_2.this, OrderPlacedActivity.class));\r\n                                finish();\r\n\r\n                            }\r\n                            hideProgressDialog();\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                }\r\n            }, CheckoutActivity_2.this, Constant.BASEPATH + Constant.GET_ORDERSEND,  sendparams, false);\r\n\r\n        }\r\n\r\n\r\n        else {\r\n              Intent intent = new Intent(activity, FailedRazaorPay.class);\r\n              intent.putExtra(\"txnid\", txnid);\r\n              intent.putExtra(\"status\", status);\r\n              intent.putExtra(\"razorpay_amt\", DatabaseHelper.decimalformatData.format(subtotal));\r\n              intent.putExtra(\"msg\", getString(R.string.order_failed));\r\n              startActivity(intent);\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public void AddTransaction(String orderId, String paymentType, String txnid, final String status, String message, Map<String, String> sendparams) {\r\n        try{\r\n            obj_sendParam.put(\"razorpay_payment_id\", txnid);\r\n            obj_sendParam.put(\"razorpay_amt\", DatabaseHelper.decimalformatData.format(subtotal));\r\n            sendparams.put(\"order_param\", obj_sendParam.toString());\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            ex.printStackTrace();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void StartPayPalPayment(final Map<String, String> sendParams) {\r\n        showProgressDialog(getString(R.string.processing));\r\n        Map<String, String> params = new HashMap<>();\r\n        params.put(Constant.FIRST_NAME, sendParams.get(Constant.USER_NAME));\r\n        params.put(Constant.LAST_NAME, sendParams.get(Constant.USER_NAME));\r\n        params.put(Constant.PAYER_EMAIL, sendParams.get(Constant.EMAIL));\r\n        params.put(Constant.ITEM_NAME, \"Cart Order\");\r\n        params.put(Constant.ITEM_NUMBER, \"1\");\r\n        params.put(Constant.AMOUNT, sendParams.get(Constant.FINAL_TOTAL));\r\n        ApiConfig.RequestToVolley(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                hideProgressDialog();\r\n                Intent intent = new Intent(getApplicationContext(), PayPalWebActivity.class);\r\n                intent.putExtra(\"url\", response);\r\n                intent.putExtra(\"params\", (Serializable) sendParams);\r\n                startActivity(intent);\r\n            }\r\n        }, CheckoutActivity_2.this, Constant.PAPAL_URL, params, true);\r\n    }\r\n\r\n    public void RefreshPromoCode(View view) {\r\n        if (isApplied) {\r\n            btnApply.setBackgroundColor(ContextCompat.getColor(getApplicationContext(), R.color.colorAccent));\r\n            btnApply.setText(getString(R.string.apply));\r\n            edtPromoCode.setText(\"\");\r\n            tvPromoCode.setVisibility(View.GONE);\r\n            tvPCAmount.setVisibility(View.GONE);\r\n            isApplied = false;\r\n            appliedCode = \"\";\r\n            pCode = \"\";\r\n            SetDataTotal();\r\n        }\r\n    }\r\n\r\n    public void PromoCodeCheck() {\r\n        btnApply.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                final String promoCode = edtPromoCode.getText().toString().trim();\r\n                if (promoCode.isEmpty()) {\r\n                    tvAlert.setVisibility(View.VISIBLE);\r\n                    tvAlert.setText(getString(R.string.enter_promo_code));\r\n                } else if (isApplied && promoCode.equals(appliedCode)) {\r\n                    Toast.makeText(getApplicationContext(), getString(R.string.promo_code_already_applied), Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    if (isApplied && !promoCode.equals(appliedCode)) {\r\n                        SetDataTotal();\r\n                    }\r\n                    tvAlert.setVisibility(View.GONE);\r\n                    btnApply.setVisibility(View.INVISIBLE);\r\n                    pBar.setVisibility(View.VISIBLE);\r\n                    Map<String, String> params = new HashMap<String, String>();\r\n                    params.put(Constant.VALIDATE_PROMO_CODE, Constant.GetVal);\r\n                    params.put(Constant.USER_ID, session.getData(Session.KEY_ID));\r\n                    params.put(Constant.PROMO_CODE, promoCode);\r\n                    params.put(Constant.TOTAL, String.valueOf(total));\r\n\r\n                    ApiConfig.RequestToVolley(new VolleyCallback() {\r\n                        @Override\r\n                        public void onSuccess(boolean result, String response) {\r\n                            if (result) {\r\n                                try {\r\n                                    JSONObject object = new JSONObject(response);\r\n                                    //   System.out.println(\"===res \" + response);\r\n                                    if (!object.getBoolean(Constant.ERROR)) {\r\n                                        pCode = object.getString(Constant.PROMO_CODE);\r\n                                        tvPromoCode.setText(getString(R.string.promo_code) + \"(\" + pCode + \")\");\r\n                                        btnApply.setBackgroundColor(ContextCompat.getColor(getApplicationContext(), R.color.light_green));\r\n                                        btnApply.setText(getString(R.string.applied));\r\n                                        isApplied = true;\r\n                                        appliedCode = edtPromoCode.getText().toString();\r\n                                        tvPCAmount.setVisibility(View.VISIBLE);\r\n                                        tvPromoCode.setVisibility(View.VISIBLE);\r\n                                        dCharge = tvDeliveryCharge.getText().toString().equalsIgnoreCase(\"free\") ? 0.0 : Constant.SETTING_DELIVERY_CHARGE;\r\n                                        subtotal = (Double.parseDouble(object.getString(Constant.DISCOUNTED_AMOUNT)) + taxAmt + dCharge);\r\n                                        pCodeDiscount = (Double.parseDouble(object.getString(Constant.DISCOUNT)));\r\n                                        tvPCAmount.setText(\"- \" + Constant.SETTING_CURRENCY_SYMBOL + pCodeDiscount);\r\n                                        tvSubTotal.setText(Constant.SETTING_CURRENCY_SYMBOL + subtotal);\r\n                                    } else {\r\n                                        btnApply.setBackgroundColor(ContextCompat.getColor(getApplicationContext(), R.color.colorAccent));\r\n                                        btnApply.setText(getString(R.string.apply));\r\n                                        tvAlert.setVisibility(View.VISIBLE);\r\n                                        tvAlert.setText(object.getString(\"message\"));\r\n                                    }\r\n                                    pBar.setVisibility(View.GONE);\r\n                                    btnApply.setVisibility(View.VISIBLE);\r\n                                } catch (JSONException e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                            }\r\n                        }\r\n                    }, CheckoutActivity_2.this, Constant.PROMO_CODE_CHECK_URL, params, false);\r\n\r\n                }\r\n                try {\r\n                    InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);\r\n                    assert imm != null;\r\n                    imm.hideSoftInputFromWindow(mainLayout.getWindowToken(), 0);\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public void showProgressDialog(String message) {\r\n        if (mProgressDialog == null) {\r\n            mProgressDialog = new ProgressDialog(this);\r\n            mProgressDialog.setMessage(message);\r\n            mProgressDialog.setIndeterminate(true);\r\n            mProgressDialog.setCancelable(false);\r\n        }\r\n        mProgressDialog.show();\r\n    }\r\n\r\n    public void hideProgressDialog() {\r\n        if (mProgressDialog != null && mProgressDialog.isShowing()) {\r\n            mProgressDialog.dismiss();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (data != null)\r\n            paymentModelClass.TrasactionMethod(data, CheckoutActivity_2.this);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap)\r\n    {\r\n        /*if (ContextCompat.checkSelfPermission(CheckoutActivity_2.this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED\r\n                || (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED))\r\n        {\r\n            if (ActivityCompat.shouldShowRequestPermissionRationale(this,\r\n                    Manifest.permission.ACCESS_FINE_LOCATION)) {\r\n                new AlertDialog.Builder(this)\r\n                        .setTitle(getString(R.string.location_permission))\r\n                        .setMessage(getString(R.string.location_permission_message))\r\n                        .setPositiveButton(getString(R.string.ok), new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialogInterface, int i) {\r\n                                ActivityCompat.requestPermissions(CheckoutActivity_2.this,\r\n                                        new String[]{Manifest.permission.ACCESS_FINE_LOCATION},\r\n                                        0);\r\n                            }\r\n                        })\r\n                        .create()\r\n                        .show();\r\n            } else {\r\n                ActivityCompat.requestPermissions(this,\r\n                        new String[]{Manifest.permission.ACCESS_FINE_LOCATION},\r\n                        0);\r\n            }\r\n        }\r\n\r\n\r\n        final GoogleMap mMap = googleMap;\r\n        mMap.clear();\r\n        LatLng latLng;\r\n        if(session.getData(Session.KEY_LATITUDE).equalsIgnoreCase(\"0.0\"))\r\n        {\r\n            latLng = new LatLng(Double.parseDouble(\"26.29491372551038\"), Double.parseDouble(\"73.04615241284515\"));\r\n        }\r\n        else{\r\n            latLng = new LatLng(Double.parseDouble(session.getData(Session.KEY_LATITUDE)), Double.parseDouble(session.getData(Session.KEY_LONGITUDE)));\r\n        }\r\n\r\n        BitmapDescriptor icon = BitmapDescriptorFactory.fromResource(R.drawable.location);\r\n        MarkerOptions marker = new MarkerOptions().position(new LatLng(latLng.latitude, latLng.longitude)).draggable(true).title(getString(R.string.current_location));\r\n        marker.icon(icon);\r\n        mMap.addMarker(marker);\r\n\r\n        mMap.addMarker(new MarkerOptions()\r\n                .position(latLng)\r\n                .draggable(true)\r\n                .title(getString(R.string.current_location)));\r\n        mMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));\r\n\r\n        mMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);\r\n        CameraPosition cameraPosition = new CameraPosition.Builder()\r\n                .target(latLng).zoom(15f).tilt(60).build();\r\n        mMap.setMyLocationEnabled(true);\r\n        mMap.getUiSettings().setMyLocationButtonEnabled(true);\r\n        mMap.animateCamera(CameraUpdateFactory\r\n                .newCameraPosition(cameraPosition));\r\n\r\n        */\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onSupportNavigateUp() {\r\n        onBackPressed();\r\n        return super.onSupportNavigateUp();\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        callApi_fillAdd(makeurl_filldefultAdd());\r\n        callApidefaultAdd(Constant.BASEPATH+Constant.GET_USERDEFULTADD);\r\n        check_minamount();\r\n        mapFragment.getMapAsync(this);\r\n\r\n    }\r\n\r\n\r\n    public void callApi_fillAdd(String url)\r\n    {\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        params.put(\"userId\", session.getData(Session.KEY_id));\r\n        params.put(\"areaId\", session.getData(Constant.AREA_ID));\r\n\r\n        ApiConfig.RequestToVolley_POST(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        System.out.println(\"====>\" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        if(jsonObject.has(Constant.SUCESS))\r\n                        {\r\n                            if(jsonObject.getInt(Constant.SUCESS) == 200)\r\n                            {\r\n                                if(jsonObject.getBoolean(\"noAddress_flag\"))\r\n                                {\r\n                                    //no address save\r\n                                    tvnoAddress.setText(\"Please Add Address\");\r\n                                    is_address_save=false;\r\n                                }\r\n                                else{\r\n                                    //address is save\r\n                                    tvnoAddress.setText(\"No Address Save As Default Address Please Add Default Address\");\r\n                                    is_address_save=true;\r\n                                }\r\n                                if(jsonObject.getBoolean(\"defaultAddress_flag\"))\r\n                                {\r\n                                    // no default address\r\n                                    is_default_address_save=false;\r\n                                }\r\n                                else{\r\n                                    //default address save\r\n                                    is_default_address_save=true;\r\n                                }\r\n\r\n                            }\r\n                            else{\r\n                                tvnoAddress.setText(\"No Address Save Please Click\");\r\n                                is_address_save=false;\r\n                                is_default_address_save=false;\r\n                            }\r\n                        }\r\n\r\n                    } catch (JSONException e) {\r\n                        tvnoAddress.setText(\"No Address Save Please Click\");\r\n                        is_address_save=false;\r\n                        is_default_address_save=false;\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, url, params, true);\r\n\r\n    }\r\n\r\n    public String makeurl_filldefultAdd() {\r\n        String url = Constant.BASEPATH + Constant.GET_CHECKADDRESS ;\r\n        Log.d(\"url\", url);\r\n        return url;\r\n    }\r\n\r\n    private void callApidefaultAdd(String url) {\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        params.put(\"userId\", session.getData(Session.KEY_id));\r\n        ApiConfig.RequestToVolley_POST(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        //System.out.println(\"====res area=>\" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        if(jsonObject.has(Constant.SUCESS))\r\n                        {\r\n                            if (jsonObject.getInt(Constant.SUCESS) == 200)\r\n                            {\r\n                                //fill  Default address\r\n                                JSONObject jsonObject_data = jsonObject.getJSONObject(\"data\");\r\n                                if(jsonObject_data.length() > 0)\r\n                                {\r\n                                    //fill Default Address\r\n                                    linear_view.setVisibility(View.VISIBLE);\r\n                                    tvnoAddress.setVisibility(View.GONE);\r\n                                    linear_adtype.setVisibility(View.GONE);\r\n                                    tvPlaceOrder.setEnabled(true);\r\n                                    tvPlaceOrder.setBackground(ctx.getResources().getDrawable(R.drawable.process_bg));\r\n\r\n                                    JSONObject jsonObject_address = jsonObject_data.getJSONObject(\"address\");\r\n                                    address_id = jsonObject_address.getString(\"_id\");\r\n                                    tvName.setVisibility(View.VISIBLE);\r\n                                    tvCity.setVisibility(View.VISIBLE);\r\n                                    imgedit.setVisibility(View.VISIBLE);\r\n                                    Log.d(\"last name\", session.getData(Session.KEY_LASTNAME));\r\n                                    Log.d(\"first name\", session.getData(Session.KEY_LASTNAME));\r\n\r\n\r\n                                    String send_address_param_2 = \"Address:\"+\" \"+jsonObject_data.getString(\"complete_address\")+\"<br>\"+\r\n                                            \"State:\"+\" \"+session.getData(Constant.STATE_N)+\"<br>\"+\r\n                                            \"City:\"+\" \"+session.getData(Constant.CITY_N)+\"<br>\"+\r\n                                            \"Area:\"+\" \"+session.getData(Constant.AREA_N)+\"<br>\"+\r\n                                            \"Mobile:\"+\" \" + session.getData(Session.KEY_mobile)+\"<br>\"+\r\n                                            \"Deliver to :\"+\" \"+session.getData(Session.KEY_FIRSTNAME)+\" \"+session.getData(Session.KEY_LASTNAME);\r\n\r\n\r\n                                    tvName.setText(session.getData(Session.KEY_FIRSTNAME)+\" \"+session.getData(Session.KEY_LASTNAME));\r\n                                    tvCity.setText(Html.fromHtml(send_address_param_2));\r\n\r\n                                    send_address_param = \"Address:\"+\" \"+jsonObject_data.getString(\"complete_address\")+\"\\n\"+\r\n                                            \"State:\"+\" \"+session.getData(Constant.STATE_N)+\"\\n\"+\r\n                                            \"City:\"+\" \"+session.getData(Constant.CITY_N)+\"\\n\"+\r\n                                            \"Area:\"+\" \"+session.getData(Constant.AREA_N)+\"\\n\"+\r\n                                            \"Mobile:\"+\" \" + session.getData(Session.KEY_mobile)+\"\\n\"+\r\n                                            \"Deliver to :\"+\" \"+tvName.getText();\r\n\r\n                                    //send_address_param = jsonObject_data.getString(\"complete_address\");\r\n                                    int address_type = jsonObject_address.getInt(\"address_type\");\r\n                                    if(address_type == 1)\r\n                                    {\r\n                                      txt_default_add.setText(\"Home Default Address\");\r\n                                    }\r\n                                    else if(address_type == 2)\r\n                                    {\r\n                                      txt_default_add.setText(\"Work Default Address\");\r\n                                    }\r\n                                    else if(address_type == 3)\r\n                                    {\r\n                                     txt_default_add.setText(\"Other Default Address\");\r\n                                    }\r\n                                }\r\n\r\n                                if(subtotal >= Constant.SETTING_MINIMUM_AMOUNT_FOR_FREE_DELIVERY)\r\n                                {\r\n                                    tvConfirmOrder.setEnabled(true);\r\n                                    tvConfirmOrder.setBackground(ctx.getResources().getDrawable(R.drawable.confirm_bg));\r\n\r\n                                }\r\n                                else{\r\n                                    tvConfirmOrder.setEnabled(false);\r\n                                    tvConfirmOrder.setBackground(ctx.getResources().getDrawable(R.drawable.gray_bg));\r\n\r\n                                }\r\n\r\n\r\n\r\n                            }\r\n                            else{\r\n                                tvnoAddress.setVisibility(View.VISIBLE);\r\n                                linear_view.setVisibility(View.GONE);\r\n                                tvName.setVisibility(View.GONE);\r\n                                tvCity.setVisibility(View.GONE);\r\n                                linear_adtype.setVisibility(View.GONE);\r\n                                imgedit.setVisibility(View.GONE);\r\n\r\n                                tvConfirmOrder.setEnabled(false);\r\n                                tvConfirmOrder.setBackgroundColor(ctx.getResources().getColor(R.color.gray));\r\n\r\n                                Toast.makeText(ctx, Constant.NODEFAULT_ADD, Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }\r\n                        else{\r\n                            tvnoAddress.setVisibility(View.VISIBLE);\r\n                            linear_view.setVisibility(View.GONE);\r\n                            tvName.setVisibility(View.GONE);\r\n                            tvCity.setVisibility(View.GONE);\r\n                            linear_adtype.setVisibility(View.GONE);\r\n                            imgedit.setVisibility(View.GONE);\r\n\r\n                            tvConfirmOrder.setEnabled(false);\r\n                            tvConfirmOrder.setBackgroundColor(ctx.getResources().getColor(R.color.gray));\r\n                            Toast.makeText(ctx, Constant.NODEFAULT_ADD, Toast.LENGTH_SHORT).show();\r\n\r\n                        }\r\n\r\n\r\n                    } catch (JSONException e) {\r\n                        tvnoAddress.setVisibility(View.VISIBLE);\r\n                        linear_view.setVisibility(View.GONE);\r\n                        tvName.setVisibility(View.GONE);\r\n                        tvCity.setVisibility(View.GONE);\r\n                        linear_adtype.setVisibility(View.GONE);\r\n                        imgedit.setVisibility(View.GONE);\r\n\r\n\r\n\r\n                        tvConfirmOrder.setEnabled(false);\r\n                        tvConfirmOrder.setBackgroundColor(ctx.getResources().getColor(R.color.gray));\r\n\r\n                        Toast.makeText(ctx, Constant.NODEFAULT_ADD, Toast.LENGTH_SHORT).show();\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, url, params, false);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        if (paymentLyt.getVisibility() == View.VISIBLE) {\r\n            walletUncheck();\r\n            tvPayment.setTextColor(ContextCompat.getColor(getApplicationContext(), R.color.gray));\r\n            tvPayment.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_next_process_gray, 0, 0, 0);\r\n            tvDelivery.setTextColor(ContextCompat.getColor(getApplicationContext(), R.color.colorPrimary));\r\n            tvDelivery.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_next_process, 0, 0, 0);\r\n            tvConfirmOrder.setVisibility(View.VISIBLE);\r\n            tvPlaceOrder.setVisibility(View.GONE);\r\n            paymentLyt.setVisibility(View.GONE);\r\n            deliveryLyt.setVisibility(View.VISIBLE);\r\n        } else\r\n            super.onBackPressed();\r\n    }\r\n\r\n    private void callSettingApi_messurment()\r\n    {\r\n        try{\r\n            String str_measurment = session.getData(Constant.KEY_MEASUREMENT);\r\n            if(str_measurment.length() == 0)\r\n            {\r\n                ApiConfig.GetSettingConfigApi(activity, session);// to call measurement data\r\n            }\r\n            JSONArray jsonArray = new JSONArray(str_measurment);\r\n            measurement_list = new ArrayList<>();\r\n            for (int i = 0; i < jsonArray.length(); i++)\r\n            {\r\n                JSONObject object1 = jsonArray.getJSONObject(i);\r\n                measurement_list.add(new Mesurrment(object1.getString(\"id\"), object1.getString(\"title\"), object1.getString(\"abv\")));\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            ex.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public void GetTimeSlots_2()\r\n    {\r\n        try{\r\n            String str_timeslot = session.getData(Constant.KEY_TIMESLOT);\r\n            JSONArray jsonArray = new JSONArray(str_timeslot);\r\n            slotList = new ArrayList<>();\r\n            dayLyt.setVisibility(View.VISIBLE);\r\n\r\n            for (int i = 0; i < jsonArray.length(); i++) {\r\n                JSONObject object1 = jsonArray.getJSONObject(i);\r\n                slotList.add(new Slot(object1.getString(\"id\"), object1.getString(\"title\"), \"\"));\r\n            }\r\n            adapter = new SlotAdapter(slotList);\r\n            recyclerView.setAdapter(adapter);\r\n          }\r\n        catch (JSONException ex)\r\n        {\r\n            ex.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public class SlotAdapter extends RecyclerView.Adapter<SlotAdapter.ViewHolder> {\r\n        public ArrayList<Slot> categorylist;\r\n        int selectedPosition = -1;\r\n\r\n        public SlotAdapter(ArrayList<Slot> categorylist) {\r\n            this.categorylist = categorylist;\r\n        }\r\n\r\n        @NonNull\r\n        @Override\r\n        public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.lyt_time_slot, parent, false);\r\n            return new ViewHolder(view);\r\n        }\r\n\r\n        @NonNull\r\n        @Override\r\n        public void onBindViewHolder(@NonNull final ViewHolder holder, final int position) {\r\n            //holder.setIsRecyclable(false);\r\n            final Slot model = categorylist.get(position);\r\n            holder.rdBtn.setText(model.getTitle());\r\n            holder.rdBtn.setTag(position);\r\n            if(position == selectedPosition){\r\n                holder.rdBtn.setChecked(position == selectedPosition);\r\n            }\r\n            else\r\n            {\r\n                holder.rdBtn.setChecked(false);\r\n            }\r\n\r\n            if (deliveryDay.equals(getString(R.string.tomorrow)))\r\n            {\r\n                model.setSlotAvailable(true);\r\n                deliveryDay_val=\"2\";\r\n                //deliveryTime = model.getTitle();\r\n            }\r\n            if (model.isSlotAvailable()) {\r\n                holder.rdBtn.setClickable(true);\r\n                holder.rdBtn.setTextColor(ContextCompat.getColor(getApplicationContext(), R.color.black));\r\n\r\n            } else {\r\n                holder.rdBtn.setChecked(false);\r\n                holder.rdBtn.setClickable(false);\r\n                holder.rdBtn.setTextColor(ContextCompat.getColor(getApplicationContext(), R.color.gray));\r\n            }\r\n            if (getTime().compareTo(slotList.get(slotList.size() - 1).getLastOrderTime()) > 0) {\r\n                rToday.setClickable(false);\r\n                rToday.setTextColor(ContextCompat.getColor(getApplicationContext(), R.color.gray));\r\n            } else {\r\n                rToday.setClickable(true);\r\n                rToday.setTextColor(ContextCompat.getColor(getApplicationContext(), R.color.black));\r\n            }\r\n            System.out.println(\"======time slote valdation \" + getTime().compareTo(slotList.get(slotList.size() - 1).getLastOrderTime()));\r\n            rToday.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    if (getTime().compareTo(slotList.get(slotList.size() - 1).getLastOrderTime()) > 0) {\r\n                        rToday.setClickable(false);\r\n                        rToday.setChecked(false);\r\n                        rToday.setTextColor(ContextCompat.getColor(getApplicationContext(), R.color.gray));\r\n                    } else {\r\n                        rToday.setChecked(true);\r\n                        rTomorrow.setChecked(false);\r\n                        deliveryDay = getString(R.string.today);\r\n                        deliveryDay_val=\"1\";\r\n                        for (Slot s : slotList) {\r\n                            if (getTime().compareTo(s.getLastOrderTime()) > 0) {\r\n                                s.setSlotAvailable(false);\r\n                            } else\r\n                                s.setSlotAvailable(true);\r\n                        }\r\n                        notifyDataSetChanged();\r\n                    }\r\n                }\r\n            });\r\n\r\n            rTomorrow.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    deliveryDay = getString(R.string.tomorrow);\r\n                    deliveryDay_val=\"2\";\r\n                    rToday.setChecked(false);\r\n                    rTomorrow.setChecked(true);\r\n                    notifyDataSetChanged();\r\n                }\r\n\r\n            });\r\n            holder.rdBtn.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    deliveryTime_id = model.getId();\r\n                    deliveryTime = model.getTitle();\r\n                    selectedPosition = (Integer) v.getTag();\r\n                    notifyDataSetChanged();\r\n                }\r\n            });\r\n        }\r\n\r\n        @Override\r\n        public int getItemCount() {\r\n            return categorylist.size();\r\n        }\r\n\r\n        public class ViewHolder extends RecyclerView.ViewHolder {\r\n            RadioButton rdBtn;\r\n            public ViewHolder(View itemView) {\r\n                super(itemView);\r\n                rdBtn = itemView.findViewById(R.id.rdBtn);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    private void check_minamount()\r\n    {\r\n        if(subtotal >= Constant.SETTING_MINIMUM_AMOUNT_FOR_FREE_DELIVERY)\r\n        {\r\n            tvConfirmOrder.setBackgroundResource(R.drawable.confirm_bg);\r\n            tvConfirmOrder.setEnabled(true);\r\n        }\r\n        else{\r\n            tvConfirmOrder.setBackgroundResource(R.drawable.gray_bg);\r\n            tvConfirmOrder.setEnabled(false);\r\n\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/ifresh/customer/activity/CheckoutActivity_2.java	(revision ce16e6637b08175bfb1d14ad608a40eebd8108fe)
+++ app/src/main/java/com/ifresh/customer/activity/CheckoutActivity_2.java	(date 1609130587746)
@@ -500,7 +500,7 @@
                 paymentMethod_id =  "1";
             }
         });
-        rbPayU.setOnClickListener(new View.OnClickListener() {
+        /*rbPayU.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 rbPayU.setChecked(true);
@@ -524,7 +524,7 @@
                 paymentMethod_id =  "3";
 
             }
-        });
+        });*/
 
         rbRazorPay.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -534,7 +534,7 @@
                 rbCod.setChecked(false);
                 rbPayU.setChecked(false);
                 paymentMethod = rbRazorPay.getTag().toString();
-                paymentMethod_id =  "4";
+                paymentMethod_id =  "2";
                 Checkout.preload(getApplicationContext());
             }
         });
Index: .idea/markdown-navigator.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"MarkdownProjectSettings\">\r\n    <PreviewSettings splitEditorLayout=\"SPLIT\" splitEditorPreview=\"PREVIEW\" useGrayscaleRendering=\"false\" zoomFactor=\"1.0\" maxImageWidth=\"0\" synchronizePreviewPosition=\"true\" highlightPreviewType=\"NONE\" highlightFadeOut=\"5\" highlightOnTyping=\"true\" synchronizeSourcePosition=\"true\" verticallyAlignSourceAndPreviewSyncPosition=\"true\" showSearchHighlightsInPreview=\"false\" showSelectionInPreview=\"true\" lastLayoutSetsDefault=\"false\">\r\n      <PanelProvider>\r\n        <provider providerId=\"com.vladsch.md.nav.editor.swing.html.panel\" providerName=\"Default - Swing\" />\r\n      </PanelProvider>\r\n    </PreviewSettings>\r\n    <ParserSettings gitHubSyntaxChange=\"false\" correctedInvalidSettings=\"false\" emojiShortcuts=\"1\" emojiImages=\"0\">\r\n      <PegdownExtensions>\r\n        <option name=\"ATXHEADERSPACE\" value=\"true\" />\r\n        <option name=\"FENCED_CODE_BLOCKS\" value=\"true\" />\r\n        <option name=\"INTELLIJ_DUMMY_IDENTIFIER\" value=\"true\" />\r\n        <option name=\"RELAXEDHRULES\" value=\"true\" />\r\n        <option name=\"STRIKETHROUGH\" value=\"true\" />\r\n        <option name=\"TABLES\" value=\"true\" />\r\n        <option name=\"TASKLISTITEMS\" value=\"true\" />\r\n      </PegdownExtensions>\r\n      <ParserOptions>\r\n        <option name=\"COMMONMARK_LISTS\" value=\"true\" />\r\n        <option name=\"EMOJI_SHORTCUTS\" value=\"true\" />\r\n        <option name=\"GFM_TABLE_RENDERING\" value=\"true\" />\r\n        <option name=\"PRODUCTION_SPEC_PARSER\" value=\"true\" />\r\n        <option name=\"SIM_TOC_BLANK_LINE_SPACER\" value=\"true\" />\r\n      </ParserOptions>\r\n    </ParserSettings>\r\n    <HtmlSettings headerTopEnabled=\"false\" headerBottomEnabled=\"false\" bodyTopEnabled=\"false\" bodyBottomEnabled=\"false\" addPageHeader=\"true\" addAnchorLinks=\"true\" anchorLinksWrapText=\"false\" imageUriSerials=\"false\" addDocTypeHtml=\"true\" noParaTags=\"false\" defaultUrlTitle=\"false\" migratedPlantUml=\"true\" migratedAnchorLinks=\"true\" plantUmlConversion=\"0\">\r\n      <GeneratorProvider>\r\n        <provider providerId=\"com.vladsch.md.nav.editor.swing.html.generator\" providerName=\"Default Swing HTML Generator\" />\r\n      </GeneratorProvider>\r\n      <headerTop />\r\n      <headerBottom />\r\n      <bodyTop />\r\n      <bodyBottom />\r\n      <fencedCodeConversions>\r\n        <option name=\"c4plantuml\" value=\"NONE\" />\r\n        <option name=\"ditaa\" value=\"NONE\" />\r\n        <option name=\"erd\" value=\"NONE\" />\r\n        <option name=\"graphviz\" value=\"NONE\" />\r\n        <option name=\"latex\" value=\"KATEX\" />\r\n        <option name=\"math\" value=\"KATEX\" />\r\n        <option name=\"mermaid\" value=\"NONE\" />\r\n        <option name=\"nomnoml\" value=\"NONE\" />\r\n        <option name=\"plantuml\" value=\"NONE\" />\r\n        <option name=\"puml\" value=\"NONE\" />\r\n        <option name=\"svgbob\" value=\"NONE\" />\r\n        <option name=\"umlet\" value=\"NONE\" />\r\n        <option name=\"vega\" value=\"NONE\" />\r\n        <option name=\"vegalite\" value=\"NONE\" />\r\n        <option name=\"wavedrom\" value=\"NONE\" />\r\n      </fencedCodeConversions>\r\n    </HtmlSettings>\r\n    <CssSettings previewScheme=\"UI_SCHEME\" cssUri=\"\" isCssUriEnabled=\"false\" isCssUriSerial=\"true\" isCssTextEnabled=\"false\" isDynamicPageWidth=\"true\">\r\n      <StylesheetProvider>\r\n        <provider providerId=\"com.vladsch.md.nav.editor.swing.html.css\" providerName=\"Default Swing Stylesheet\" />\r\n      </StylesheetProvider>\r\n      <ScriptProviders />\r\n      <cssText />\r\n      <cssUriHistory />\r\n    </CssSettings>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/markdown-navigator.xml	(revision ce16e6637b08175bfb1d14ad608a40eebd8108fe)
+++ .idea/markdown-navigator.xml	(date 1609130587762)
@@ -1,7 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="MarkdownProjectSettings">
+<<<<<<< HEAD
     <PreviewSettings splitEditorLayout="SPLIT" splitEditorPreview="PREVIEW" useGrayscaleRendering="false" zoomFactor="1.0" maxImageWidth="0" synchronizePreviewPosition="true" highlightPreviewType="NONE" highlightFadeOut="5" highlightOnTyping="true" synchronizeSourcePosition="true" verticallyAlignSourceAndPreviewSyncPosition="true" showSearchHighlightsInPreview="false" showSelectionInPreview="true" lastLayoutSetsDefault="false">
+=======
+    <PreviewSettings splitEditorLayout="SPLIT" splitEditorPreview="PREVIEW" useGrayscaleRendering="false" zoomFactor="1.0" maxImageWidth="0" synchronizePreviewPosition="true" highlightPreviewType="LINE" highlightFadeOut="5" highlightOnTyping="true" synchronizeSourcePosition="true" verticallyAlignSourceAndPreviewSyncPosition="true" showSearchHighlightsInPreview="true" showSelectionInPreview="true" lastLayoutSetsDefault="false">
+>>>>>>> dev1
       <PanelProvider>
         <provider providerId="com.vladsch.md.nav.editor.swing.html.panel" providerName="Default - Swing" />
       </PanelProvider>
@@ -24,9 +28,15 @@
         <option name="SIM_TOC_BLANK_LINE_SPACER" value="true" />
       </ParserOptions>
     </ParserSettings>
+<<<<<<< HEAD
     <HtmlSettings headerTopEnabled="false" headerBottomEnabled="false" bodyTopEnabled="false" bodyBottomEnabled="false" addPageHeader="true" addAnchorLinks="true" anchorLinksWrapText="false" imageUriSerials="false" addDocTypeHtml="true" noParaTags="false" defaultUrlTitle="false" migratedPlantUml="true" migratedAnchorLinks="true" plantUmlConversion="0">
       <GeneratorProvider>
         <provider providerId="com.vladsch.md.nav.editor.swing.html.generator" providerName="Default Swing HTML Generator" />
+=======
+    <HtmlSettings headerTopEnabled="false" headerBottomEnabled="false" bodyTopEnabled="false" bodyBottomEnabled="false" addPageHeader="false" addAnchorLinks="false" anchorLinksWrapText="false" imageUriSerials="false" addDocTypeHtml="true" noParaTags="false" defaultUrlTitle="false" migratedPlantUml="true" migratedAnchorLinks="true" plantUmlConversion="0">
+      <GeneratorProvider>
+        <provider providerId="com.vladsch.md.nav.editor.text.html.generator" providerName="Unmodified HTML Generator" />
+>>>>>>> dev1
       </GeneratorProvider>
       <headerTop />
       <headerBottom />
@@ -52,7 +62,11 @@
     </HtmlSettings>
     <CssSettings previewScheme="UI_SCHEME" cssUri="" isCssUriEnabled="false" isCssUriSerial="true" isCssTextEnabled="false" isDynamicPageWidth="true">
       <StylesheetProvider>
+<<<<<<< HEAD
         <provider providerId="com.vladsch.md.nav.editor.swing.html.css" providerName="Default Swing Stylesheet" />
+=======
+        <provider providerId="com.vladsch.md.nav.editor.text.html.css" providerName="No Stylesheet" />
+>>>>>>> dev1
       </StylesheetProvider>
       <ScriptProviders />
       <cssText />
Index: app/src/main/java/com/ifresh/customer/kotlin/SignUpActivity_K.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ifresh.customer.kotlin\r\n\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.ifresh.customer.R\r\nimport com.ifresh.customer.helper.*\r\nimport com.ifresh.customer.helper.Constant.*\r\n\r\nimport kotlinx.android.synthetic.main.activity_view_signup.*\r\nimport org.json.JSONObject\r\nimport java.util.*\r\nimport java.util.regex.Pattern\r\n\r\n\r\nclass SignUpActivity_K : AppCompatActivity()\r\n{\r\n    private val mContext:Context = this@SignUpActivity_K\r\n    private val activity = this\r\n    private lateinit var session: Session\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_view_signup)\r\n        session = Session(mContext)\r\n\r\n        btnsignup.setOnClickListener(){\r\n            val phoneNo = edtsignupMobile.text.toString()\r\n            if(edtLoginMobile.text.isEmpty())\r\n            {\r\n                ApiConfig.setSnackBar(getString(R.string.empty_phone), \"RETRY\", activity)\r\n            }\r\n            else{\r\n                if(isValidMobile(edtsignupMobile.text.toString()))\r\n                {\r\n                    if(edtfirstname.text.isEmpty())\r\n                    {\r\n                      ApiConfig.setSnackBar(getString(R.string.invalid_firstname), \"RETRY\", activity)\r\n                    }\r\n                    else{\r\n                        if(edtlastname.text.isEmpty())\r\n                        {\r\n                            ApiConfig.setSnackBar(getString(R.string.invalid_lastname), \"RETRY\", activity)\r\n                        }\r\n                        else{\r\n                            // all field have data\r\n                            callaSighup(activity, phoneNo)\r\n                        }\r\n                    }\r\n\r\n                }\r\n                else{\r\n                    ApiConfig.setSnackBar(getString(R.string.invalid_phone), \"RETRY\", activity)\r\n                }\r\n            }\r\n        }\r\n\r\n        tvlogin.setOnClickListener(){\r\n            val mainIntent = Intent(mContext, SignInActivity_K::class.java)\r\n            startActivity(mainIntent);\r\n        }\r\n\r\n    }\r\n\r\n    private fun callaSighup(activity: SignUpActivity_K, phone_no: String) {\r\n        val params: MutableMap<String, String> = HashMap()\r\n        params[\"phone\"] = phone_no\r\n        params[\"fname\"] = edtfirstname.text.toString()\r\n        params[\"lname\"] = edtlastname.text.toString()\r\n        params[\"reqForm\"] = \"signup\"\r\n        params[\"device_id\"]= ApiConfig.getDeviceId(mContext)\r\n        params[\"token\"]= session.getData(\"token\")\r\n        params[FRIEND_CODE]= edtRefer.text.toString().trim()\r\n        //params[REFERRAL_CODE]= randomAlphaNumeric(8)\r\n\r\n        ApiConfig.RequestToVolley_POST({ result, response ->\r\n            if (result) {\r\n                try {\r\n                    println(\"===n response $response\")\r\n                    val jsonObject = JSONObject(response)\r\n                    if (jsonObject.getInt(Constant.SUCESS) == 200)\r\n                    {\r\n                        //session.setData(MOBILE, phone_no)\r\n                        //val otp = jsonObject.getString(\"data\")\r\n                        val mainIntent = Intent(mContext, OtpActivity_K::class.java)\r\n                        //mainIntent.putExtra(\"otp\", otp)\r\n                        mainIntent.putExtra(\"reqForm\", \"signup\")\r\n                        mainIntent.putExtra(\"phone\", phone_no)\r\n                        //session.setData(\"refer_code\",jsonObject.getString(\"referCode\"))\r\n\r\n                        mainIntent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK\r\n                        startActivity(mainIntent);\r\n                        finish()\r\n\r\n                    } else if (jsonObject.getInt(Constant.SUCESS) == 400) {\r\n                        Toast.makeText(mContext, jsonObject.getString(\"msg\"), Toast.LENGTH_SHORT)\r\n                                .show()\r\n                        val mainIntent = Intent(mContext, SignInActivity_K::class.java)\r\n                        startActivity(mainIntent);\r\n\r\n                    } else {\r\n                        Toast.makeText(mContext, jsonObject.getString(\"msg\"), Toast.LENGTH_SHORT)\r\n                                .show()\r\n                    }\r\n\r\n                } catch (e: java.lang.Exception) {\r\n\r\n                    e.printStackTrace()\r\n                }\r\n            }\r\n        }, activity, BASEPATH + LOGIN, params, true)\r\n    }\r\n\r\n\r\n    private fun isValidMobile(phone: String): Boolean\r\n    {\r\n        if(!Pattern.matches(\"[a-zA-Z]+\", phone)) {\r\n            return phone.length > 6 && phone.length == 10;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/ifresh/customer/kotlin/SignUpActivity_K.kt	(revision ce16e6637b08175bfb1d14ad608a40eebd8108fe)
+++ app/src/main/java/com/ifresh/customer/kotlin/SignUpActivity_K.kt	(date 1609130587746)
@@ -83,19 +83,17 @@
                     val jsonObject = JSONObject(response)
                     if (jsonObject.getInt(Constant.SUCESS) == 200)
                     {
-                        //session.setData(MOBILE, phone_no)
-                        //val otp = jsonObject.getString("data")
+
                         val mainIntent = Intent(mContext, OtpActivity_K::class.java)
-                        //mainIntent.putExtra("otp", otp)
+
                         mainIntent.putExtra("reqForm", "signup")
                         mainIntent.putExtra("phone", phone_no)
                         //session.setData("refer_code",jsonObject.getString("referCode"))
-
                         mainIntent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK
                         startActivity(mainIntent);
                         finish()
 
-                    } else if (jsonObject.getInt(Constant.SUCESS) == 400) {
+                    } else if (jsonObject.getInt(SUCESS) == 400) {
                         Toast.makeText(mContext, jsonObject.getString("msg"), Toast.LENGTH_SHORT)
                                 .show()
                         val mainIntent = Intent(mContext, SignInActivity_K::class.java)
Index: app/src/main/java/com/ifresh/customer/activity/SetDefaultAddress_2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ifresh.customer.activity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport com.ifresh.customer.R;\r\nimport com.ifresh.customer.adapter.CategoryAdapter;\r\nimport com.ifresh.customer.adapter.DefaultAddressAdapter;\r\nimport com.ifresh.customer.helper.ApiConfig;\r\nimport com.ifresh.customer.helper.Constant;\r\nimport com.ifresh.customer.helper.DatabaseHelper;\r\nimport com.ifresh.customer.helper.Session;\r\nimport com.ifresh.customer.helper.StorePrefrence;\r\nimport com.ifresh.customer.helper.VolleyCallback;\r\nimport com.ifresh.customer.kotlin.FillAddress;\r\nimport com.ifresh.customer.model.Category;\r\nimport com.ifresh.customer.model.Default_Add_model;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\n\r\nimport static com.ifresh.customer.helper.Constant.ADDRESS_DEFAULT_CHANGE_MSG;\r\nimport static com.ifresh.customer.helper.Constant.ADDRESS_DELETE_MSG;\r\nimport static com.ifresh.customer.helper.Constant.AREA_ID;\r\nimport static com.ifresh.customer.helper.Constant.AREA_N;\r\nimport static com.ifresh.customer.helper.Constant.BASEPATH;\r\nimport static com.ifresh.customer.helper.Constant.CITY_ID;\r\nimport static com.ifresh.customer.helper.Constant.CITY_N;\r\n\r\nimport static com.ifresh.customer.helper.Constant.GETFRENCHISE;\r\nimport static com.ifresh.customer.helper.Constant.SUBAREA_ID;\r\nimport static com.ifresh.customer.helper.Constant.SUBAREA_N;\r\nimport static com.ifresh.customer.helper.Session.KEY_id;\r\n\r\npublic class SetDefaultAddress_2 extends AppCompatActivity {\r\n    Context mContext = SetDefaultAddress_2.this;\r\n    Activity activity = SetDefaultAddress_2.this;\r\n    ArrayList<Default_Add_model> default_add_models_list;\r\n    Session session;\r\n    StorePrefrence storeinfo;\r\n    Toolbar toolbar;\r\n    RecyclerView recyclerView;\r\n    ProgressBar progressbar;\r\n    SwipeRefreshLayout swipeLayout;\r\n    LinearLayout msgView;\r\n    DatabaseHelper databaseHelper;\r\n    private Menu menu;\r\n    String city_id=\"\",area_id=\"\",subarea_id=\"\";\r\n    String franchiseId=\"\";\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState)\r\n    {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_addresstype_2);\r\n        session=new Session(mContext);\r\n        storeinfo = new StorePrefrence(mContext);\r\n        databaseHelper= new DatabaseHelper(mContext);\r\n\r\n        toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        getSupportActionBar().setTitle(getString(R.string.defaultaddress));\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n\r\n        msgView = findViewById(R.id.msgView);\r\n        swipeLayout = findViewById(R.id.swipeLayout);\r\n        progressbar = findViewById(R.id.progressBar);\r\n        recyclerView = findViewById(R.id.recyclerView);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(SetDefaultAddress_2.this));\r\n    }\r\n\r\n    public String makeurl_filldefultAdd() {\r\n        String url = Constant.BASEPATH + Constant.GET_DEFULTADD + session.getData(Session.KEY_id);\r\n        Log.d(\"url\", url);\r\n        return url;\r\n    }\r\n\r\n\r\n    public void callApi_fillAdd(String url, final Boolean is_gotocart, final String area_id_get) {\r\n        progressbar.setVisibility(View.VISIBLE);\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        ApiConfig.RequestToVolley_GET(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        System.out.println(\"====res area \" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n\r\n                        if(jsonObject.has(Constant.SUCESS))\r\n                        {\r\n                            if (jsonObject.getInt(Constant.SUCESS) == 200)\r\n                            {\r\n                                msgView.setVisibility(View.GONE);\r\n                                swipeLayout.setVisibility(View.VISIBLE);\r\n\r\n                                default_add_models_list = new ArrayList<>();\r\n                                JSONArray jsonArray = jsonObject.getJSONArray(\"data\");\r\n                                if(jsonArray.length() > 0)\r\n                                {\r\n                                    for(int i = 0; i<jsonArray.length(); i++)\r\n                                    {\r\n                                        JSONObject jsonObject1 =  jsonArray.getJSONObject(i);\r\n                                        Default_Add_model default_add_model = new Default_Add_model();\r\n                                        default_add_model.setAddress_id(jsonObject1.getString(\"_id\"));\r\n                                        default_add_model.setAddress_type(jsonObject1.getString(\"address_type\"));\r\n                                        default_add_model.setAddress1(jsonObject1.getString(\"address1\"));\r\n                                        default_add_model.setAddress2(jsonObject1.getString(\"address2\"));\r\n                                        default_add_model.setPincode(jsonObject1.getString(\"pincode\"));\r\n                                        default_add_model.setDefault_address(jsonObject1.getBoolean(\"default_address\"));\r\n                                        default_add_model.setArea_id(jsonObject1.getString(\"areaId\"));\r\n\r\n                                        if(jsonObject1.getBoolean(\"default_address\"))\r\n                                        {\r\n                                            /*if(!area_id_get.equals(jsonObject1.getString(\"areaId\")))\r\n                                            {\r\n                                                city_id = jsonObject1.getString(\"cityId\");\r\n                                                area_id = jsonObject1.getString(\"areaId\");\r\n                                                subarea_id = jsonObject1.getString(\"sub_areaId\");\r\n\r\n                                            }*/\r\n                                            city_id = jsonObject1.getString(\"cityId\");\r\n                                            area_id = jsonObject1.getString(\"areaId\");\r\n                                            subarea_id = jsonObject1.getString(\"sub_areaId\");\r\n                                        }\r\n\r\n                                        default_add_models_list.add(default_add_model);\r\n                                    }\r\n                                    progressbar.setVisibility(View.GONE);\r\n                                    DefaultAddressAdapter defaultAddressAdapter = new DefaultAddressAdapter(activity, mContext ,default_add_models_list, session);\r\n                                    recyclerView.setAdapter(defaultAddressAdapter);\r\n                                    if(is_gotocart)\r\n                                    {\r\n                                        try{\r\n                                          if(databaseHelper.getTotalCartAmt(session) > 0)\r\n                                          {\r\n                                              Log.d(\"area_id_get\",area_id_get);\r\n                                              Log.d(\"AREA_ID\",session.getData(AREA_ID));\r\n\r\n                                            //call frenchise api\r\n                                            GetFrenchise_id(area_id_get);\r\n\r\n\r\n\r\n\r\n                                          }\r\n                                          else{\r\n                                              //else change location\r\n                                              call_city_api(storeinfo.getString(\"state_id\"), city_id);\r\n\r\n                                          }\r\n                                        }\r\n                                        catch (Exception ex)\r\n                                        {\r\n                                            ex.printStackTrace();\r\n                                        }\r\n\r\n                                    }\r\n                                    else{\r\n\r\n                                    }\r\n\r\n                                }\r\n                                else{\r\n                                    progressbar.setVisibility(View.GONE);\r\n                                    msgView.setVisibility(View.VISIBLE);\r\n                                    swipeLayout.setVisibility(View.GONE);\r\n                                }\r\n                            }\r\n                            else\r\n                            {\r\n                                progressbar.setVisibility(View.GONE);\r\n                                msgView.setVisibility(View.VISIBLE);\r\n                                swipeLayout.setVisibility(View.GONE);\r\n                            }\r\n                        }\r\n                        else{\r\n                            progressbar.setVisibility(View.GONE);\r\n                            msgView.setVisibility(View.VISIBLE);\r\n                            swipeLayout.setVisibility(View.GONE);\r\n                        }\r\n\r\n\r\n\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, url, params, true);\r\n\r\n    }\r\n\r\n    private void call_city_api(String state_id, final String city_id) {\r\n        Log.d(\"city_id\",city_id);\r\n\r\n        Map<String, String> params = new HashMap<String, String>();\r\n\r\n        ApiConfig.RequestToVolley_GET(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        System.out.println(\"====res area \" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        JSONArray jsonArray = jsonObject.getJSONArray(\"data\");\r\n                        for(int i=0; i<jsonArray.length();i++)\r\n                        {\r\n                            JSONObject obj = jsonArray.getJSONObject(i);\r\n                            if(obj.getString(\"_id\").equalsIgnoreCase(city_id))\r\n                            {\r\n                                String city_name = obj.getString(\"title\");\r\n                                String city_id = obj.getString(\"_id\");\r\n                                Log.d(\"CITY_N\",city_name);//Log.d(\"CITY_ID\",city_id);\r\n                                session.setData(CITY_ID, city_id);\r\n                                session.setData(CITY_N, city_name);\r\n\r\n                                call_area_api(city_id, area_id);\r\n                                break;\r\n                            }\r\n\r\n                        }\r\n\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH + Constant.GET_CITY + state_id, params, false);\r\n\r\n\r\n\r\n    }\r\n\r\n    private void call_area_api(String city_id, final String area_id) {\r\n\r\n        Map<String, String> params = new HashMap<String, String>();\r\n\r\n        ApiConfig.RequestToVolley_GET(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        System.out.println(\"====res area \" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        JSONArray jsonArray = jsonObject.getJSONArray(\"data\");\r\n                        for(int i=0; i<jsonArray.length();i++)\r\n                        {\r\n                            JSONObject obj = jsonArray.getJSONObject(i);\r\n                            if(obj.getString(\"_id\").equalsIgnoreCase(area_id))\r\n                            {\r\n                                String area_name = obj.getString(\"title\");\r\n                                String area_id = obj.getString(\"_id\");\r\n                                session.setData(AREA_ID, area_id);\r\n                                session.setData(AREA_N, area_name);\r\n\r\n                                session.setBoolean(\"area_change\", true);\r\n                                storeinfo.setBoolean(\"is_locchange\",true);\r\n\r\n                                Log.d(\"Area_name\",area_name);\r\n                                //call_subarea_api(area_id, subarea_id);\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH + Constant.GET_AREA + city_id, params, false);\r\n\r\n\r\n\r\n    }\r\n\r\n    /*private void call_subarea_api(String areaId, final String subarea_id)\r\n    {\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        ApiConfig.RequestToVolley_GET(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        System.out.println(\"====res area \" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        JSONArray jsonArray = jsonObject.getJSONArray(\"data\");\r\n                        for(int i=0; i<jsonArray.length();i++)\r\n                        {\r\n                            JSONObject obj = jsonArray.getJSONObject(i);\r\n                            if(obj.getString(\"_id\").equalsIgnoreCase(subarea_id))\r\n                            {\r\n                                String subarea_name = obj.getString(\"title\");\r\n                                String subarea_id = obj.getString(\"_id\");\r\n                                session.setData(SUBAREA_ID, subarea_id);\r\n                                session.setData(SUBAREA_N, subarea_name);\r\n\r\n                                Log.d(\"subarea_name\",subarea_name);\r\n                                //Area is Changed Now\r\n                                session.setBoolean(\"area_change\", true);\r\n                                storeinfo.setBoolean(\"is_locchange\",true);\r\n                                break;\r\n                            }\r\n                            else{\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n\r\n\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH + Constant.GET_SUBAREA + areaId, params, false);\r\n   }*/\r\n\r\n\r\n    private void callApi_deleteadd(String address_id, final String area_id) {\r\n        progressbar.setVisibility(View.VISIBLE);\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        Log.d(\"val1\", address_id);\r\n        params.put(\"address_id\", address_id);\r\n        //params.put(\"user_id\", session.getData(Session.KEY_id));\r\n\r\n        ApiConfig.RequestToVolley_POST(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        System.out.println(\"====res area \" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        if (jsonObject.getInt(Constant.SUCESS) == 200) {\r\n                            progressbar.setVisibility(View.GONE);\r\n                            Toast.makeText(activity, ADDRESS_DELETE_MSG, Toast.LENGTH_SHORT).show();\r\n                            callApi_fillAdd(makeurl_filldefultAdd(),false,area_id);\r\n                        } else {\r\n                            Toast.makeText(activity, jsonObject.getString(\"msg\"), Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH + Constant.SET_DELETEADD, params, false);\r\n    }\r\n\r\n\r\n    public void callApi_updatedefultAdd(String address_id, final String chkstatus, final String area_id)\r\n    {\r\n        progressbar.setVisibility(View.VISIBLE);\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        Log.d(\"val1\", address_id);\r\n        Log.d(\"val3\", session.getData(Session.KEY_id));\r\n        Log.d(\"chkstatus\", chkstatus);\r\n        params.put(\"address_id\", address_id);\r\n        params.put(\"default_address\", chkstatus);\r\n        params.put(\"user_id\", session.getData(Session.KEY_id));\r\n\r\n        ApiConfig.RequestToVolley_POST(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                if (result) {\r\n                    try {\r\n                        System.out.println(\"====res area \" + response);\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        if(jsonObject.getInt(Constant.SUCESS) == 200)\r\n                        {\r\n                            progressbar.setVisibility(View.GONE);\r\n                            Toast.makeText(mContext, ADDRESS_DEFAULT_CHANGE_MSG, Toast.LENGTH_SHORT).show();\r\n                            String url = makeurl_filldefultAdd();\r\n\r\n                            Boolean isgotocart=false;\r\n                            if(chkstatus.equalsIgnoreCase(\"true\"))\r\n                            {\r\n                                isgotocart=true;\r\n                            }\r\n                            else if(chkstatus.equalsIgnoreCase(\"false\"))\r\n                            {\r\n                                isgotocart=false;\r\n                            }\r\n                            callApi_fillAdd(url,isgotocart, area_id);\r\n                        }\r\n\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH + Constant.SET_DEFULTADD, params, false);\r\n    }\r\n\r\n\r\n    public void ConformationView(final String address_id, final String area_id)\r\n    {\r\n        final AlertDialog.Builder alertDialog = new AlertDialog.Builder(activity);\r\n        LayoutInflater inflater = (LayoutInflater) activity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        final View dialogView = inflater.inflate(R.layout.msg_view_4, null);\r\n        alertDialog.setView(dialogView);\r\n        alertDialog.setCancelable(true);\r\n        final AlertDialog dialog = alertDialog.create();\r\n\r\n        Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        TextView tvremove,tvclose,txt_msg;\r\n\r\n        tvremove = dialogView.findViewById(R.id.tvcancel);\r\n        tvclose = dialogView.findViewById(R.id.tvclose);\r\n        txt_msg = dialogView.findViewById(R.id.txt_msg);\r\n\r\n        tvclose.setText(\"CANCEL\");\r\n        tvremove.setText(\"REMOVE\");\r\n        txt_msg.setText(activity.getResources().getString(R.string.delete_add));\r\n\r\n        tvremove.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.dismiss();\r\n                callApi_deleteadd(address_id,area_id);\r\n            }\r\n        });\r\n\r\n        tvclose.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n        dialog.show();\r\n    }\r\n\r\n\r\n    public void GoToCheckout_Alert()\r\n    {\r\n        final AlertDialog.Builder alertDialog = new AlertDialog.Builder(activity);\r\n        LayoutInflater inflater = (LayoutInflater) activity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        final View dialogView = inflater.inflate(R.layout.msg_view_7, null);\r\n        alertDialog.setView(dialogView);\r\n        alertDialog.setCancelable(false);\r\n        final AlertDialog dialog = alertDialog.create();\r\n\r\n        Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n        TextView tvcart,txt_msg;\r\n\r\n        tvcart = dialogView.findViewById(R.id.tvcart);\r\n        txt_msg = dialogView.findViewById(R.id.txt_msg);\r\n        tvcart.setText(\"Delete Cart\");\r\n        txt_msg.setText(activity.getResources().getString(R.string.deleteproductmsg));\r\n\r\n        tvcart.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.dismiss();\r\n                databaseHelper.DeleteAllOrderData();\r\n\r\n                call_city_api(storeinfo.getString(\"state_id\"), city_id);\r\n\r\n                Intent intent = new Intent(mContext,MainActivity.class);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        dialog.show();\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        callApi_fillAdd(makeurl_filldefultAdd(),false, session.getData(AREA_ID));\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        this.menu = menu;\r\n        getMenuInflater().inflate(R.menu.main_menu, menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId())\r\n        {\r\n            case R.id.home:\r\n                onBackPressed();\r\n                return true;\r\n\r\n            case R.id.menu_add:\r\n                openSetAddress();\r\n                return true;\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    private void openSetAddress() {\r\n        Intent intent = new Intent(SetDefaultAddress_2.this, FillAddress.class);\r\n        intent.putExtra(\"userId\",\"\");\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n        startActivity(intent);\r\n    }\r\n\r\n    @Override\r\n    public boolean onPrepareOptionsMenu(Menu menu) {\r\n        menu.findItem(R.id.menu_search).setVisible(false);\r\n        menu.findItem(R.id.menu_sort).setVisible(false);\r\n        menu.findItem(R.id.menu_add).setVisible(true);\r\n        menu.findItem(R.id.menu_cart).setVisible(false);\r\n\r\n        return super.onPrepareOptionsMenu(menu);\r\n    }\r\n\r\n    @Override\r\n    public boolean onSupportNavigateUp() {\r\n        onBackPressed();\r\n        return super.onSupportNavigateUp();\r\n    }\r\n\r\n\r\n    private String GetFrenchise_id(String Area_ID) {\r\n        String FrenchiseUrl = BASEPATH + GETFRENCHISE + Area_ID;\r\n        Map<String, String> params = new HashMap<String, String>();\r\n        ApiConfig.RequestToVolley_GET(new VolleyCallback() {\r\n            @Override\r\n            public void onSuccess(boolean result, String response) {\r\n                //System.out.println(\"frenchise==>\" + response);\r\n                if (result)\r\n                {\r\n                    try {\r\n                        JSONObject object = new JSONObject(response);\r\n                        if (object.getInt(Constant.SUCESS) == 200)\r\n                        {\r\n                            JSONArray jsonArray = object.getJSONArray(Constant.DATA);\r\n                            if(jsonArray.length() > 0)\r\n                            {\r\n                                JSONObject jsonObject =  jsonArray.getJSONObject(0);\r\n                                franchiseId = jsonObject.getString(\"franchiseId\");\r\n                                //Log.d(\"save_id1\", storeinfo.getString(\"franch\"));\r\n                                //Log.d(\"get_frenchiseid\", franchiseId);\r\n\r\n                                //method\r\n                                if(storeinfo.getString(\"franch\").equalsIgnoreCase(franchiseId))\r\n                                {\r\n                                    if(session.getBoolean(\"is_upload\"))\r\n                                    {\r\n                                        session.setBoolean(\"is_upload\", false);\r\n                                        Intent intent = new Intent(mContext,UploadMedicine.class);\r\n                                        startActivity(intent);\r\n                                    }\r\n                                    else{\r\n                                        Intent intent = new Intent(mContext,CheckoutActivity_2.class);\r\n                                        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                                        startActivity(intent);\r\n\r\n                                    }\r\n                                    finish();\r\n                                }\r\n\r\n                                else{\r\n                                    //show alert view if franchise is different from current franchise\r\n                                    GoToCheckout_Alert();\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                  } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n\r\n            }\r\n        }, SetDefaultAddress_2.this, FrenchiseUrl, params, true);\r\n        return franchiseId;\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/ifresh/customer/activity/SetDefaultAddress_2.java	(revision ce16e6637b08175bfb1d14ad608a40eebd8108fe)
+++ app/src/main/java/com/ifresh/customer/activity/SetDefaultAddress_2.java	(date 1609130587746)
@@ -164,12 +164,8 @@
                                               Log.d("area_id_get",area_id_get);
                                               Log.d("AREA_ID",session.getData(AREA_ID));
 
-                                            //call frenchise api
-                                            GetFrenchise_id(area_id_get);
-
-
-
-
+                                              //call frenchise api
+                                              GetFrenchise_id(area_id_get);
                                           }
                                           else{
                                               //else change location
@@ -207,8 +203,6 @@
                             swipeLayout.setVisibility(View.GONE);
                         }
 
-
-
                     } catch (JSONException e) {
                         e.printStackTrace();
                     }
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.ifresh.customer\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.READ_PRIVILEGED_PHONE_STATE\"\r\n        tools:ignore=\"ProtectedPermissions\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\"/>\r\n    <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\r\n    <uses-permission android:name=\"android.permission.VIBRATE\"/>\r\n    <uses-feature android:name=\"android.hardware.camera\"/>\r\n    <uses-feature android:name=\"android.hardware.camera.autofocus\"/>\r\n\r\n\r\n    <application\r\n        android:name=\"com.ifresh.customer.helper.AppController\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        android:requestLegacyExternalStorage=\"true\"\r\n        tools:replace=\"android:usesCleartextTraffic,android:allowBackup\">\r\n\r\n        <meta-data\r\n            android:name=\"com.facebook.sdk.ApplicationId\"\r\n            android:value=\"@string/facebook_app_id\" />\r\n        <meta-data\r\n            android:name=\"com.facebook.sdk.AutoLogAppEventsEnabled\"\r\n            android:value=\"false\" />\r\n        <meta-data\r\n            android:name=\"com.facebook.sdk.AdvertiserIDCollectionEnabled\"\r\n            android:value=\"false\" />\r\n        <meta-data\r\n            android:name=\"firebase_crashlytics_collection_enabled\"\r\n            android:value=\"${crashlyticsCollectionEnabled}\" />\r\n\r\n        <!-- Kotlin Classes Deceleration -->\r\n\r\n        <activity android:name=\"com.ifresh.customer.kotlin.LocationSelection_K\" />\r\n        <activity android:name=\"com.ifresh.customer.kotlin.OtpActivity_K\" />\r\n        <activity android:name=\"com.ifresh.customer.kotlin.SignUpActivity_K\" />\r\n        <activity android:name=\"com.ifresh.customer.kotlin.SignInActivity_K\" />\r\n        <activity android:name=\"com.ifresh.customer.kotlin.ChangePassword\" />\r\n        <activity android:name=\"com.ifresh.customer.kotlin.EditProfile_K\" />\r\n        <activity android:name=\"com.ifresh.customer.kotlin.ForgetPassword_K\" />\r\n        <activity android:name=\"com.ifresh.customer.kotlin.PhoneUpdate_K\" />\r\n        <activity android:name=\"com.ifresh.customer.kotlin.FillAddress\" />\r\n\r\n\r\n        <activity android:name=\"com.ifresh.customer.kotlin.SplashActivity_KT\" /> <!-- Java Classes Deceleration -->\r\n        <activity android:name=\"com.ifresh.customer.activity.ProductListActivity_2\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.MedicalListActivity_2\" />\r\n\r\n\r\n        <activity android:name=\"com.ifresh.customer.activity.OfferProductListActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.OrderListActivity_2\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.OfferImageDetail\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.ImageFullView\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.MapsActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.WalletBalanceList\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.FriendCodeList\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.NotificationList\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.DrawerActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.WebViewActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.MapActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.OrderListActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.TrackerDetailActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.OrderPlacedActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.MedicalOrderPlacedActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.CheckoutActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.CheckoutActivity_2\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.SetDefaultAddress_2\"/>\r\n        <activity android:name=\"com.ifresh.customer.activity.FailedRazaorPay\"/>\r\n        <activity android:name=\"com.ifresh.customer.activity.SearchActivity_2\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.FullScreenViewActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.UploadMedicine\"/>\r\n\r\n\r\n        <activity android:name=\"com.ifresh.customer.activity.ProductDetailActivity\">\r\n            <meta-data\r\n                android:name=\"android.support.PARENT_ACTIVITY\"\r\n                android:value=\"com.ifresh.customer.activity.SplashActivity\" />\r\n        </activity>\r\n        <activity android:name=\"com.ifresh.customer.activity.ProductDetailActivity_2\">\r\n            <meta-data\r\n                android:name=\"android.support.PARENT_ACTIVITY\"\r\n                android:value=\"com.ifresh.customer.activity.SplashActivity\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\"com.ifresh.customer.activity.SearchActivity\"\r\n            android:launchMode=\"singleTop\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.ProfileActivity\" /> <!-- LAUNCHER ClASS Deceleration -->\r\n        <activity android:name=\"com.ifresh.customer.activity.SplashActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n\r\n            <!--\r\n            <intent-filter\r\n                android:autoVerify=\"true\"\r\n                tools:targetApi=\"m\">\r\n                <action android:name=\"android.intent.action.VIEW\" />\r\n                <category android:name=\"android.intent.category.DEFAULT\" />\r\n                <category android:name=\"android.intent.category.BROWSABLE\" />\r\n                <data\r\n                    android:host=\"ekart.wrteam.in\"\r\n                    android:pathPrefix=\"/refer\"\r\n                    android:scheme=\"https\" />\r\n                <data\r\n                    android:host=\"ekart.wrteam.in\"\r\n                    android:pathPrefix=\"/itemdetail\"\r\n                    android:scheme=\"https\" />\r\n            </intent-filter>\r\n            -->\r\n\r\n        </activity>\r\n        <activity android:name=\"com.ifresh.customer.activity.MainActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.ReferEarnActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.SubCategoryActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.FavouriteActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.CartActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.CartActivity_2\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.ProductListActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.CategoryActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.PayPalWebActivity\" />\r\n        <activity android:name=\"com.ifresh.customer.activity.ProductCategory\"/>\r\n\r\n\r\n        <provider\r\n            android:name=\"androidx.core.content.FileProvider\"\r\n            android:authorities=\"${applicationId}.provider\"\r\n            android:exported=\"false\"\r\n            android:grantUriPermissions=\"true\">\r\n            <meta-data\r\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\r\n                android:resource=\"@xml/provider_paths\" />\r\n        </provider>\r\n\r\n\r\n\r\n        <receiver android:name=\"com.ifresh.customer.helper.SMSBroadcastReceiver\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.android.gms.auth.api.phone.SMS_RETRIEVED\" />\r\n            </intent-filter>\r\n        </receiver>\r\n\r\n        <service android:name=\"com.ifresh.customer.helper.MyFirebaseMessagingService\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n        <service android:name=\"com.ifresh.customer.helper.GPSTracker\" />\r\n\r\n        <meta-data\r\n            android:name=\"com.google.firebase.messaging.default_notification_icon\"\r\n            android:resource=\"@drawable/ic_launcher\" />\r\n        <meta-data\r\n            android:name=\"com.google.firebase.messaging.default_notification_color\"\r\n            android:resource=\"@color/colorPrimary\" />\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"@string/google_api_key\" />\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.version\"\r\n            android:value=\"@integer/google_play_services_version\" />\r\n\r\n        <meta-data\r\n            android:name=\"com.facebook.sdk.CodelessDebugLogEnabled\"\r\n            android:value=\"true\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision ce16e6637b08175bfb1d14ad608a40eebd8108fe)
+++ app/src/main/AndroidManifest.xml	(date 1609130587746)
@@ -10,6 +10,7 @@
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
     <uses-permission android:name="android.permission.READ_PRIVILEGED_PHONE_STATE"
         tools:ignore="ProtectedPermissions" />
+    <uses-permission android:name="android.permission.VIBRATE" />
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.CAMERA"/>
Index: app/src/main/java/com/ifresh/customer/kotlin/LocationSelection_K.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ifresh.customer.kotlin\r\n\r\nimport android.app.Activity\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.AdapterView\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.ifresh.customer.R\r\nimport com.ifresh.customer.activity.MainActivity\r\nimport com.ifresh.customer.adapter.*\r\nimport com.ifresh.customer.helper.*\r\nimport com.ifresh.customer.helper.Constant.*\r\nimport com.ifresh.customer.model.*\r\nimport kotlinx.android.synthetic.main.activity_location_selection.*\r\nimport org.json.JSONObject\r\nimport java.util.*\r\n\r\nclass LocationSelection_K : AppCompatActivity() {\r\n    private var activity = this\r\n    private val mContext: Context = this@LocationSelection_K\r\n\r\n    //private lateinit var storePrefrence: StorePrefrence\r\n    private lateinit var session: Session\r\n    private lateinit var storeinfo: StorePrefrence\r\n\r\n    private lateinit var gps: GPSTracker\r\n\r\n    private val arrayListCity = arrayListOf<CityName>()\r\n    private val arrayListArea = arrayListOf<Area>()\r\n    private val arrayListSubArea = arrayListOf<SubArea>()\r\n    private val arrayListCountry = arrayListOf<Country>()\r\n    private val arrayListState = arrayListOf<State>()\r\n\r\n    private var areaAdapter: AreaAdapter? = null\r\n    private var subareaAdapter: SubAreaAdapter? = null\r\n    private var cityAdapter: CityAdapter? = null\r\n    private var countryAdapter: CountryAdapter? = null\r\n    private var stateAdapter: StateAdapter? = null\r\n    private var countryid: String = \"\"\r\n    private var stateid: String = \"\"\r\n    private var cityid: String = \"\"\r\n    private var areaid: String = \"\"\r\n    private var subareaid: String = \"\"\r\n    private var str_country = \"\"\r\n    private var str_state = \"\"\r\n    private var str_city = \"\"\r\n    private var str_area = \"\"\r\n    private var str_subarea = \"\"\r\n\r\n    private var is_user_action:Boolean = false\r\n    var count_city:Int = 0\r\n    var count_area:Int = 0\r\n    var count_subarea:Int = 0\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_location_selection)\r\n        session = Session(mContext)\r\n        storeinfo = StorePrefrence(mContext)\r\n\r\n        activity = this@LocationSelection_K\r\n        gps = GPSTracker(this@LocationSelection_K)\r\n\r\n        ApiConfig.displayLocationSettingsRequest(this@LocationSelection_K)\r\n        ApiConfig.getLocation(this@LocationSelection_K)\r\n\r\n        val saveLatitude = session.getCoordinates(Session.KEY_LATITUDE).toDouble()\r\n        val saveLongitude = session.getCoordinates(Session.KEY_LONGITUDE).toDouble()\r\n\r\n        if (saveLatitude.equals(0.0) || saveLongitude.equals(0.0)) {\r\n            SaveLocation(gps.latitude.toString(), gps.longitude.toString())\r\n        } else {\r\n            SaveLocation(session.getCoordinates(Session.KEY_LATITUDE), session.getCoordinates(Session.KEY_LONGITUDE))\r\n        }\r\n\r\n        init_country()\r\n        init_state()\r\n        init_city()\r\n        init_area()\r\n        //init_subarea()\r\n        callApi_country(activity)\r\n\r\n\r\n\r\n\r\n        btnsubmit.setOnClickListener(View.OnClickListener {\r\n            when {\r\n                countryid.isEmpty() || countryid == \"-1\" ->\r\n                {\r\n                    Toast.makeText(mContext, getString(R.string.selectcountry), Toast.LENGTH_SHORT).show()\r\n                }\r\n                stateid.isEmpty() || stateid == \"-1\" -> {\r\n                    Toast.makeText(mContext, getString(R.string.selectstate), Toast.LENGTH_SHORT).show()\r\n                }\r\n                cityid.isEmpty() || cityid == \"-1\"  -> {\r\n                    Toast.makeText(mContext, getString(R.string.selectcitym), Toast.LENGTH_SHORT).show()\r\n                }\r\n                areaid.isEmpty() || areaid == \"-1\" -> {\r\n                    Toast.makeText(mContext, getString(R.string.selectaream), Toast.LENGTH_SHORT).show()\r\n                }\r\n\r\n                /*subareaid.isEmpty() || subareaid == \"-1\"  -> {\r\n                    Toast.makeText(mContext, getString(R.string.selectsubarea), Toast.LENGTH_SHORT).show()\r\n                }*/\r\n                else -> {\r\n                    session.setData(COUNTRY_ID, countryid)\r\n                    session.setData(COUNTRY_N, str_country)\r\n\r\n                    session.setData(STATE_ID, stateid)\r\n                    session.setData(STATE_N, str_state)\r\n\r\n                    storeinfo.setString(\"state_id\", stateid)\r\n                    storeinfo.setString(\"state_name\", str_state)\r\n\r\n                    session.setData(CITY_ID, cityid)\r\n                    session.setData(CITY_N, str_city)\r\n\r\n                    session.setData(AREA_ID, areaid)\r\n                    session.setData(AREA_N, str_area)\r\n\r\n                    //session.setData(SUBAREA_ID, subareaid)\r\n                    //session.setData(SUBAREA_N, str_subarea)\r\n\r\n\r\n                    if(storeinfo.getBoolean(\"is_locchange\"))\r\n                    {\r\n                        session.setBoolean(\"area_change\", true)\r\n                        storeinfo.setBoolean(\"is_locchange\", false)\r\n                    }\r\n                    if (session.isUserLoggedIn)\r\n                    {\r\n                        //user already login\r\n                        val mainIntent = Intent(mContext, MainActivity::class.java)\r\n                        startActivity(mainIntent);\r\n                        finish()\r\n                    } else {\r\n                        // user is type of guest\r\n                        callGuestUserApi();\r\n                    }\r\n\r\n                }\r\n            }\r\n        })\r\n\r\n        // spinner country\r\n        spin_country.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {\r\n            override fun onItemSelected(parent: AdapterView<*>?, p1: View?, pos: Int, p3: Long) {\r\n                if (pos > 0) {\r\n                    is_user_action=true\r\n                    val country: Country = arrayListCountry[pos]\r\n                    //Log.d(\"id==>\", \"\" + country.country_id)\r\n                    str_country = country.country_name.toString()\r\n                    countryid = country.country_id.toString()\r\n\r\n                    callApi_state(activity, countryid)\r\n                }\r\n                else{\r\n                    if(countryid != \"-1\")\r\n                    {\r\n                        callApi_state(activity, countryid)\r\n                    }\r\n                }\r\n            }\r\n            override fun onNothingSelected(p0: AdapterView<*>?) {\r\n                countryid = \"-1\"\r\n                str_country = \"\"\r\n                is_user_action=false\r\n            }\r\n        }\r\n\r\n        // spinner state\r\n        spin_state.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {\r\n            override fun onItemSelected(parent: AdapterView<*>?, p1: View?, pos: Int, p3: Long) {\r\n\r\n                if (pos > 0)\r\n                {\r\n                    is_user_action=true\r\n                    val state: State = arrayListState[pos]\r\n                    //Log.d(\"id==>\", \"\" + state.state_id)\r\n                    str_state = state.state_name.toString()\r\n                    stateid = state.state_id.toString()\r\n\r\n\r\n                    last_city.text = \"\"\r\n                    last_area.visibility = View.GONE\r\n\r\n                    last_area.text = \"\"\r\n                    last_area.visibility = View.GONE\r\n\r\n                    last_subarea.text = \"\"\r\n                    last_subarea.visibility = View.GONE\r\n\r\n                    callApi_city(activity, stateid)\r\n                }\r\n                else{\r\n                    if(stateid != \"-1\")\r\n                    {\r\n                        is_user_action=true\r\n                        callApi_city(activity, stateid)\r\n                    }\r\n                    is_user_action=false\r\n                }\r\n\r\n\r\n            }\r\n\r\n            override fun onNothingSelected(p0: AdapterView<*>?) {\r\n                stateid = \"-1\"\r\n                str_state = \"\"\r\n                is_user_action=false\r\n            }\r\n        }\r\n\r\n\r\n        //spinner city\r\n        spin_city.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {\r\n            override fun onItemSelected(parent: AdapterView<*>?, p1: View?, pos: Int, p3: Long) {\r\n                Log.d(\"postion\", pos.toString());\r\n                if (pos >= 0)\r\n                {\r\n                    val city: CityName = arrayListCity[pos]\r\n                    //Log.d(\"id==>\", \"\" + city.city_id)\r\n                    cityid = city.city_id.toString()\r\n                    str_city = city.city_name.toString()\r\n                     if(count_city > 0)\r\n                     {\r\n                         last_city.text = \"\"\r\n                         last_area.visibility = View.GONE\r\n\r\n                         last_area.text = \"\"\r\n                         last_area.visibility = View.GONE\r\n\r\n                         last_subarea.text = \"\"\r\n                         last_subarea.visibility = View.GONE\r\n                     }\r\n                    is_user_action=true\r\n                    callApi_area(activity, cityid)\r\n                }\r\n                else{\r\n                    if(cityid != \"-1\")\r\n                    {\r\n                        is_user_action=true\r\n                        callApi_area(activity, cityid)\r\n\r\n                    }\r\n                    is_user_action=false\r\n                }\r\n\r\n\r\n            }\r\n\r\n            override fun onNothingSelected(p0: AdapterView<*>?) {\r\n                cityid = \"-1\"\r\n                str_city = \"\"\r\n                is_user_action=false\r\n            }\r\n\r\n        }\r\n\r\n        //spinner area\r\n        spin_area.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {\r\n            override fun onItemSelected(parent: AdapterView<*>?, p1: View?, pos: Int, p3: Long) {\r\n                if (pos > 0) {\r\n                    val area: Area = arrayListArea[pos]\r\n                    //Log.d(\"id==>\", \"\" + area.area_id)\r\n                    areaid = area.area_id.toString()\r\n                    str_area = area.area_name.toString()\r\n                    if(count_area > 0)\r\n                    {\r\n                        last_area.text = \"\"\r\n                        last_area.visibility = View.GONE\r\n\r\n                        last_subarea.text = \"\"\r\n                        last_subarea.visibility = View.GONE\r\n                    }\r\n                    //callApi_subarea(activity, areaid)\r\n                    is_user_action=true\r\n                }\r\n                else{\r\n                    if(areaid != \"-1\")\r\n                    {\r\n                        is_user_action=true\r\n                        //callApi_subarea(activity, areaid)\r\n                    }\r\n                    is_user_action=false\r\n                }\r\n\r\n            }\r\n\r\n            override fun onNothingSelected(p0: AdapterView<*>?) {\r\n                areaid = \"-1\"\r\n                str_area = \"\"\r\n                is_user_action=false\r\n            }\r\n        }\r\n\r\n        /*spin_area_sub.onItemSelectedListener = object : AdapterView.OnItemSelectedListener\r\n        {\r\n            override fun onItemSelected(parent: AdapterView<*>?, p1: View?, pos: Int, p3: Long) {\r\n                if (pos > 0)\r\n                {\r\n                    val subArea: SubArea = arrayListSubArea[pos]\r\n                    //Log.d(\"id==>\", \"\" + subArea.subarea_id)\r\n                    subareaid = subArea.subarea_id.toString()\r\n                    str_subarea = subArea.subarea_name.toString()\r\n                    is_user_action=true\r\n                }\r\n                else{\r\n                    if(subareaid != \"-1\")\r\n                    {\r\n                        is_user_action=true\r\n                        //callApi_subarea(activity, areaid)\r\n                    }\r\n                     is_user_action=false\r\n                   }\r\n            }\r\n            override fun onNothingSelected(p0: AdapterView<*>?) {\r\n                subareaid = \"-1\"\r\n                str_subarea = \"\"\r\n                is_user_action=false\r\n            }\r\n\r\n        }*/\r\n\r\n\r\n\r\n    }\r\n\r\n    private fun  callGuestUserApi()\r\n    {\r\n        val params: MutableMap<String, String> = HashMap()\r\n        ApiConfig.RequestToVolley_POST_GUEST({ result, response ->\r\n            if (result)\r\n            {\r\n                try {\r\n                    println(\"===n response $response\")\r\n                    val jsonObject = JSONObject(response)\r\n                    val data_jsonobj = jsonObject.getJSONObject(\"data\");\r\n\r\n                    session.setData(AUTHTOKEN, data_jsonobj.getString(\"authtoken\"))\r\n                    session.setData(\"role\", data_jsonobj.getJSONObject(\"user\").getString(\"role_type\"))\r\n\r\n\r\n\r\n                    val mainIntent = Intent(mContext, MainActivity::class.java)\r\n                    startActivity(mainIntent);\r\n                    finish()\r\n\r\n                } catch (e: java.lang.Exception) {\r\n                    e.printStackTrace()\r\n                }\r\n            }\r\n        }, activity, BASEPATH + GUEST, params, false)\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n\r\n    }\r\n\r\n    private fun init_country() {\r\n        val country = Country()\r\n        /*if (session.getData(COUNTRY_ID).isNotEmpty())\r\n        {\r\n            country.country_id = session.getData(COUNTRY_ID)\r\n            country.country_name = session.getData(COUNTRY_N)\r\n\r\n            //spin_country.isEnabled=false\r\n            //spin_country.isFocusable=false\r\n\r\n\r\n        } else {\r\n            country.country_id = \"-1\"\r\n            country.country_name = \"Select Country\"\r\n        }*/\r\n\r\n        country.country_id = \"5f587a916a254867fcd29515\"\r\n        country.country_name = \"India\"\r\n\r\n        //country.country_id = \"5f587a916a254867fcd29515\"\r\n        //country.country_name = \"India\"\r\n\r\n\r\n\r\n        countryid = country.country_id.toString()\r\n        str_country = country.country_name.toString()\r\n\r\n        arrayListCountry.add(country)\r\n        countryAdapter = CountryAdapter(mContext, arrayListCountry)\r\n        spin_country.adapter = countryAdapter\r\n\r\n        session.setData(COUNTRY_ID,countryid)\r\n        session.setData(COUNTRY_N, str_country)\r\n\r\n\r\n        spin_country.isEnabled=false\r\n        spin_country.isClickable=false\r\n\r\n    }\r\n\r\n    private fun init_state() {\r\n        val state = State()\r\n        /*if (session.getData(STATE_ID).isNotEmpty())\r\n        {\r\n            state.state_id = storeinfo.getString(\"state_id\")\r\n            state.state_name = storeinfo.getString(\"state_name\")\r\n            //state.state_name = session.getData(STATE_N)\r\n            spin_state.isEnabled=false\r\n            spin_state.isFocusable=false\r\n        } else {\r\n            state.state_id = \"-1\"\r\n            state.state_name = \"Select State\"\r\n        }\r\n\r\n        stateid = state.state_id.toString()\r\n        str_state = state.state_name.toString()*/\r\n\r\n        stateid = \"5fa125aa8f5fa179a5daafde\"\r\n        str_state = \"Rajasthan\"\r\n\r\n        //stateid = \"5f587d443eb6fb4cbf561e2f\"\r\n        //str_state = \"Rajasthan\"\r\n\r\n        state.state_id = stateid\r\n        state.state_name = str_state\r\n\r\n\r\n\r\n        if(stateid != \"-1\")\r\n        {\r\n            callApi_state(activity, countryid.toString())\r\n        }\r\n\r\n\r\n        arrayListState.add(state)\r\n        stateAdapter = StateAdapter(mContext, arrayListState)\r\n        spin_state.adapter = stateAdapter\r\n\r\n        spin_state.isEnabled=false\r\n        spin_state.isClickable=false\r\n\r\n\r\n    }\r\n\r\n    private fun init_city() {\r\n        val city = CityName()\r\n        /*if (session.getData(CITY_ID).isNotEmpty()) {\r\n            city.city_id = session.getData(CITY_ID)\r\n            city.city_name = session.getData(CITY_N)\r\n\r\n            last_city.text = city.city_name\r\n            last_city.visibility = View.VISIBLE\r\n\r\n        } else {\r\n            city.city_id = \"-1\"\r\n            city.city_name = \"Select City\"\r\n\r\n            last_city.text = \"\"\r\n            last_city.visibility = View.GONE\r\n        }\r\n\r\n        cityid = city.city_id.toString()\r\n        str_city = city.city_name.toString()\r\n         */\r\n\r\n        cityid = \"5fa125c68f5fa179a5daafdf\"\r\n        str_city = \"Jodhpur\"\r\n\r\n        //cityid = \"5f561df2f20f7e484332259b\"\r\n        //str_city = \"Jodhpur\"\r\n\r\n\r\n        city.city_id = cityid\r\n        city.city_name = str_city\r\n\r\n\r\n        arrayListCity.add(city)\r\n        cityAdapter = CityAdapter(mContext, arrayListCity)\r\n        spin_city.adapter = cityAdapter\r\n\r\n\r\n        spin_city.isClickable=false\r\n        spin_city.isEnabled=false\r\n\r\n    }\r\n\r\n    private fun init_area() {\r\n        val area = Area()\r\n        if (session.getData(AREA_ID).isNotEmpty())\r\n        {\r\n            area.area_id = session.getData(AREA_ID)\r\n            area.area_name = session.getData(AREA_N)\r\n\r\n            last_area.text = area.area_name\r\n            last_area.visibility = View.VISIBLE\r\n        } else {\r\n            area.area_id = \"-1\"\r\n            area.area_name = \"Select Area\"\r\n\r\n            last_area.text = \"\"\r\n            last_area.visibility = View.GONE\r\n        }\r\n\r\n        areaid = area.area_id.toString()\r\n        str_area = area.area_name.toString()\r\n\r\n\r\n\r\n        //areaid = \"5f5629d5fcf6ff53e040a151\"\r\n        //str_area = \"Paota\"\r\n\r\n\r\n        arrayListArea.add(area)\r\n        areaAdapter = AreaAdapter(mContext, arrayListArea)\r\n        spin_area.adapter = areaAdapter\r\n\r\n    }\r\n\r\n    private fun init_subarea() {\r\n        val subArea = SubArea()\r\n        /*if (session.getData(SUBAREA_ID).isNotEmpty())\r\n        {\r\n            subArea.subarea_id = session.getData(SUBAREA_ID)\r\n            subArea.subarea_name = session.getData(SUBAREA_N)\r\n\r\n            last_subarea.text = subArea.subarea_name\r\n            last_subarea.visibility = View.VISIBLE\r\n\r\n        } else {\r\n            subArea.subarea_id = \"-1\"\r\n            subArea.subarea_name = \"Select Sub Area\"\r\n            last_subarea.text = \"\"\r\n            last_subarea.visibility = View.GONE\r\n\r\n        }\r\n\r\n        subareaid = subArea.subarea_id.toString()\r\n        str_subarea = subArea.subarea_name.toString()\r\n         */\r\n\r\n        subareaid = \"5f5b4494d57618536375b13b\"\r\n        str_subarea = \"man ji ka hatha\"\r\n\r\n\r\n\r\n        arrayListSubArea.add(subArea)\r\n        subareaAdapter = SubAreaAdapter(mContext, arrayListSubArea)\r\n        spin_area_sub.adapter = subareaAdapter\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n   /* private fun callApi_subarea(activity: Activity, areaId: String)\r\n    {\r\n        progressbar.visibility=View.VISIBLE\r\n        val params: MutableMap<String, String> = HashMap()\r\n        ApiConfig.RequestToVolley_GET({ result, response ->\r\n            if (result) {\r\n                try {\r\n                    println(\"===n response $response\")\r\n                    val jsonObject = JSONObject(response)\r\n                    if (jsonObject.getInt(Constant.SUCESS) == 200)\r\n                    {\r\n                        arrayListSubArea.clear()\r\n                        val subArea = SubArea()\r\n                        subArea.subarea_id = \"-1\"\r\n                        subArea.subarea_name = \"Select Sub Area\"\r\n                        arrayListSubArea.add(subArea)\r\n\r\n                        subareaAdapter?.notifyDataSetChanged()\r\n                        spin_area_sub.setSelection(0)\r\n\r\n                        val jsonArray = jsonObject.optJSONArray(\"data\")\r\n                        for (i in 0 until jsonArray.length())\r\n                        {\r\n                            val jsonObject = jsonArray.getJSONObject(i)\r\n                            val subarea = SubArea()\r\n                            subarea.subarea_id = jsonObject.getString(\"_id\")\r\n                            subarea.subarea_name = jsonObject.getString(\"title\")\r\n                            arrayListSubArea.add(subarea)\r\n                        }\r\n                        progressbar.visibility=View.GONE\r\n                        subareaAdapter?.notifyDataSetChanged()\r\n                        count_subarea +=1\r\n\r\n\r\n\r\n                    } else {\r\n                        progressbar.visibility=View.GONE\r\n                        Toast.makeText(mContext, jsonObject.getString(\"msg\"), Toast.LENGTH_SHORT)\r\n                                .show()\r\n                    }\r\n                } catch (e: java.lang.Exception) {\r\n                    progressbar.visibility=View.GONE\r\n                    e.printStackTrace()\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH + Constant.GET_SUBAREA + areaId, params, true)\r\n    }\r\n    */\r\n\r\n\r\n\r\n    private fun callApi_area(activity: Activity, cityId: String) {\r\n        progressbar.visibility=View.VISIBLE\r\n        val params: MutableMap<String, String> = HashMap()\r\n        ApiConfig.RequestToVolley_GET({ result, response ->\r\n            if (result) {\r\n                try {\r\n                    println(\"===n response $response\")\r\n                    val jsonObject = JSONObject(response)\r\n                    if (jsonObject.getInt(Constant.SUCESS) == 200)\r\n                    {\r\n                        val jsonArray = jsonObject.optJSONArray(\"data\")\r\n\r\n                        arrayListArea.clear()\r\n                        val area = Area()\r\n                        area.area_id = \"-1\"\r\n                        area.area_name = \"Select Area\"\r\n                        arrayListArea.add(area)\r\n\r\n                        arrayListSubArea.clear()\r\n                        val subArea = SubArea()\r\n                        subArea.subarea_id = \"-1\"\r\n                        subArea.subarea_name = \"Select Sub Area\"\r\n                        arrayListSubArea.add(subArea)\r\n\r\n                        areaAdapter?.notifyDataSetChanged()\r\n                        subareaAdapter?.notifyDataSetChanged()\r\n                        spin_area.setSelection(0)\r\n                        spin_area_sub.setSelection(0)\r\n\r\n\r\n                        if(session.getData(CITY_ID)!= cityId)\r\n                        {\r\n                            areaid=\"-1\"\r\n                            subareaid=\"-1\"\r\n                        }\r\n\r\n                        for (i in 0 until jsonArray.length())\r\n                        {\r\n                            val jsonObject = jsonArray.getJSONObject(i)\r\n                            val area = Area()\r\n                            area.area_id = jsonObject.getString(\"_id\")\r\n                            area.area_name = jsonObject.getString(\"title\")\r\n                            arrayListArea.add(area)\r\n\r\n                        }\r\n                        progressbar.visibility=View.GONE\r\n                        areaAdapter?.notifyDataSetChanged()\r\n                        count_area += 1\r\n                    } else {\r\n                        progressbar.visibility=View.GONE\r\n                        Toast.makeText(mContext, jsonObject.getString(\"msg\"), Toast.LENGTH_SHORT)\r\n                                .show()\r\n                    }\r\n                } catch (e: java.lang.Exception) {\r\n                    progressbar.visibility=View.GONE\r\n                    e.printStackTrace()\r\n                }\r\n            }\r\n        }, activity, BASEPATH + GET_AREA + cityId, params, true)\r\n    }\r\n\r\n\r\n    private fun callApi_city(activity: Activity, state_id: String) {\r\n        progressbar.visibility=View.VISIBLE\r\n        val params: MutableMap<String, String> = HashMap()\r\n        ApiConfig.RequestToVolley_GET({ result, response ->\r\n            if (result) {\r\n                try {\r\n                    println(\"===n response $response\")\r\n                    val jsonObject = JSONObject(response)\r\n                    if (jsonObject.getInt(SUCESS) == 200) {\r\n                        val jsonArray = jsonObject.optJSONArray(\"data\")\r\n\r\n                        for (i in 0 until jsonArray.length())\r\n                        {\r\n                            val jsonObject = jsonArray.getJSONObject(i)\r\n                            val city = CityName()\r\n\r\n                            if(session.getData(CITY_ID) == jsonObject.getString(\"_id\"))\r\n                            {\r\n                                //do not add\r\n                            }\r\n                            else{\r\n                                city.city_id = jsonObject.getString(\"_id\")\r\n                                city.city_name = jsonObject.getString(\"title\")\r\n                                arrayListCity.add(city)\r\n                            }\r\n                        }\r\n                        progressbar.visibility=View.GONE\r\n                        cityAdapter?.notifyDataSetChanged()\r\n                        count_city += 1\r\n\r\n                    } else {\r\n                        progressbar.visibility=View.GONE\r\n                        Toast.makeText(mContext, jsonObject.getString(\"msg\"), Toast.LENGTH_SHORT)\r\n                                .show()\r\n                    }\r\n\r\n\r\n                } catch (e: java.lang.Exception) {\r\n                    progressbar.visibility=View.GONE\r\n                    e.printStackTrace()\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH + Constant.GET_CITY + state_id, params, true)\r\n    }\r\n\r\n    private fun callApi_country(activity: Activity) {\r\n        progressbar.visibility=View.VISIBLE\r\n        val params: MutableMap<String, String> = HashMap()\r\n        ApiConfig.RequestToVolley_GET({ result, response ->\r\n            if (result) {\r\n                try {\r\n                    println(\"===n response $response\")\r\n                    val jsonObject = JSONObject(response)\r\n                    if (jsonObject.getInt(Constant.SUCESS) == 200) {\r\n\r\n                        val jsonArray = jsonObject.optJSONArray(\"data\")\r\n                        for (i in 0 until jsonArray.length())\r\n                        {\r\n                            val jsonObject = jsonArray.getJSONObject(i)\r\n                            val country = Country()\r\n                            if(session.getData(Constant.COUNTRY_ID) == jsonObject.getString(\"_id\"))\r\n                            {\r\n                                //do not add\r\n                            }\r\n                            else{\r\n                                country.country_id = jsonObject.getString(\"_id\")\r\n                                country.country_name = jsonObject.getString(\"title\")\r\n                                arrayListCountry.add(country)\r\n                            }\r\n                        }\r\n                        progressbar.visibility=View.GONE\r\n                        countryAdapter?.notifyDataSetChanged()\r\n\r\n                    } else {\r\n                        progressbar.visibility=View.GONE\r\n                        Toast.makeText(mContext, jsonObject.getString(\"msg\"), Toast.LENGTH_SHORT)\r\n                                .show()\r\n                    }\r\n                } catch (e: java.lang.Exception) {\r\n                    progressbar.visibility=View.GONE\r\n                    e.printStackTrace()\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH + Constant.GET_COUNTRY, params, true)\r\n    }\r\n\r\n    private fun callApi_state(activity: Activity, country_id: String) {\r\n        progressbar.visibility=View.VISIBLE\r\n        val params: MutableMap<String, String> = HashMap()\r\n        ApiConfig.RequestToVolley_GET({ result, response ->\r\n            if (result) {\r\n                try {\r\n                    println(\"===n response $response\")\r\n                    val jsonObject = JSONObject(response)\r\n                    if (jsonObject.getInt(Constant.SUCESS) == 200) {\r\n                        val jsonArray = jsonObject.optJSONArray(\"data\")\r\n\r\n                        for (i in 0 until jsonArray.length())\r\n                        {\r\n                            val jsonObject = jsonArray.getJSONObject(i)\r\n                            val state = State()\r\n                            if(session.getData(Constant.STATE_ID) == jsonObject.getString(\"_id\"))\r\n                            {\r\n                                //do not add\r\n                            }\r\n                            else{\r\n                                state.state_id = jsonObject.getString(\"_id\")\r\n                                state.state_name = jsonObject.getString(\"title\")\r\n                                arrayListState.add(state)\r\n                            }\r\n                        }\r\n                        progressbar.visibility=View.GONE\r\n                        stateAdapter?.notifyDataSetChanged()\r\n\r\n                    } else {\r\n                        progressbar.visibility=View.GONE\r\n                        Toast.makeText(mContext, jsonObject.getString(\"msg\"), Toast.LENGTH_SHORT)\r\n                                .show()\r\n                    }\r\n                } catch (e: java.lang.Exception) {\r\n                    progressbar.visibility=View.GONE\r\n                    e.printStackTrace()\r\n                }\r\n            }\r\n        }, activity, Constant.BASEPATH + Constant.GET_STATE + country_id, params, true)\r\n    }\r\n\r\n    fun SaveLocation(latitude: String?, longitude: String?) {\r\n        Log.d(\"lat\", \"\" + latitude)\r\n        Log.d(\"long\", \"\" + longitude)\r\n\r\n        session.setData(Session.KEY_LATITUDE, latitude )\r\n        session.setData(Session.KEY_LONGITUDE, longitude)\r\n\r\n        storeinfo.setString(\"latitude\", latitude)\r\n        storeinfo.setString(\"longitude\", longitude)\r\n\r\n        //Log.d(\"valll\", session.getData(Session.KEY_LATITUDE))\r\n    }\r\n\r\n\r\n    override fun onBackPressed() {\r\n         if(is_user_action)\r\n         {\r\n             Toast.makeText(applicationContext, \"Please Select Location\", Toast.LENGTH_SHORT).show()\r\n         }\r\n        else{\r\n             super.onBackPressed();\r\n         }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/ifresh/customer/kotlin/LocationSelection_K.kt	(revision ce16e6637b08175bfb1d14ad608a40eebd8108fe)
+++ app/src/main/java/com/ifresh/customer/kotlin/LocationSelection_K.kt	(date 1609130587746)
@@ -131,13 +131,16 @@
                         session.setBoolean("area_change", true)
                         storeinfo.setBoolean("is_locchange", false)
                     }
+
                     if (session.isUserLoggedIn)
                     {
                         //user already login
                         val mainIntent = Intent(mContext, MainActivity::class.java)
                         startActivity(mainIntent);
                         finish()
-                    } else {
+                    }
+
+                    else {
                         // user is type of guest
                         callGuestUserApi();
                     }
